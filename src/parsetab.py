
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIFXnonassocELSEABSTRACT AND ARROW ASSIGN_OPERATOR BOOL BOOL_TYPE BREAK CASE CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQUALS DOT DOUBLE DOUBLE_TYPE ELSE ENUM EQUALS EXPORT FALSE FINAL FINALLY FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF IMPORT IN INCREMENT INT INT_TYPE LATE LBRACE LBRACKET LESS_THAN LESS_THAN_OR_EQUALS LIST_TYPE LPARENTHESIS MAP_TYPE MINUS MINUS_EQUALS MODULE NOT NOT_EQUALS NULL NULL_TYPE NUM_TYPE OR PLUS PLUS_EQUALS PRINT RBRACE RBRACKET READ RETURN RPARENTHESIS SEMICOLON SET_TYPE STATIC STDIN STRING STRING_TYPE SWITCH TIMES TIMES_EQUALS TRUE TRY TYPEDEF VAR VOID WHILEprogram : statementsstatements : statements statement\n                  | statementstatement : LBRACE statements RBRACEstatement : expression SEMICOLON\n                 | declaration SEMICOLON\n                 | assignation SEMICOLON\n                 | increment SEMICOLON\n                 | decrement SEMICOLON\n                 | import SEMICOLON\n                 | function\n                 | if\n                 | while\n                 | for\n                 | print\n                 | input\n                 | class_def\n                 | enum\n                 | try\n                 | switch\n                 | empty\n                 | return SEMICOLON\n                 | CONTINUE SEMICOLON\n                 | BREAK SEMICOLONdeclaration : declaration_modifier varType ID \n                   | declaration_modifier ID \n                   | varType IDdeclaration : LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literallist_literal : LBRACKET list_elements RBRACKETlist_elements : list_elements COMMA variable\n                     | variable\n                     | emptydeclaration : MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literalmap_literal : LBRACE map_elements RBRACEmap_elements : map_elements COMMA map_pair\n                   | map_pair\n                   | emptymap_pair : variable COLON variableimport : IMPORT STRING SEMICOLONreturn : RETURN variable\n              | RETURNassignation : ID PLUS_EQUALS expression\n                   | ID MINUS_EQUALS expression\n                   | ID TIMES_EQUALS expression\n                   | ID DIVIDE_EQUALS expressionassignation : declaration ASSIGN_OPERATOR variableassignation : ID ASSIGN_OPERATOR variablevarType   : INT_TYPE \n                 | STRING_TYPE \n                 | NUM_TYPE \n                 | DOUBLE_TYPE \n                 | BOOL_TYPE \n                 | LIST_TYPE \n                 | MAP_TYPE \n                 | SET_TYPE\n                 | VAR\n                 | VOIDdeclaration_modifier : CONST \n                            | FINALvariable : INT\n                | DOUBLE\n                | STRING\n                | BOOL\n                | NULL\n                | ID\n                | function\n                | expressionexpression : expression PLUS term\n                  | expression MINUS termexpression : termterm : term TIMES factor\n            | term DIVIDE factor\n            | term MODULE factorterm : factorfactor : ID LBRACKET expression RBRACKETfactor : ID DOT IDfactor : IDfactor : LPARENTHESIS expression RPARENTHESISfactor : MINUS factorfactor : INT\n              | DOUBLEbooleanExpression : variable EQUALS variable\n                         | variable NOT_EQUALS variable\n                         | variable GREATER_THAN variable\n                         | variable LESS_THAN variable\n                         | variable GREATER_THAN_OR_EQUALS variable\n                         | variable LESS_THAN_OR_EQUALS variablebooleanExpression : booleanExpression AND booleanExpression\n                         | booleanExpression OR booleanExpressionbooleanExpression : LPARENTHESIS booleanExpression RPARENTHESISbooleanExpression : variableif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement %prec IFXif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statementwhile : WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE\n           | FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS varType ID IN ID RPARENTHESIS LBRACE statements RBRACEincrement : ID INCREMENTdecrement : ID DECREMENTfunction : declaration LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE\n                | ID LPARENTHESIS parameters RPARENTHESISfunction : declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLONtypedef : TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLONenum : ENUM ID LBRACE enum_values RBRACEenum_values : enum_values COMMA ID\n                   | IDtry : TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACEswitch : SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACEcases : cases case\n             | casecase : CASE variable COLON statements BREAK\n            | CASE variable COLON statements SEMICOLON\n            | CASE variable COLON statementsdefault_case : DEFAULT COLON statementsparameters : parameters COMMA parameter\n                  | parameter\n                  | emptyparameter : varType ID\n               | variableprint : PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLONinput : ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLONclass_def : CLASS ID LBRACE class_members RBRACEclass_members : class_members class_member\n                     | class_memberclass_member : varType ID SEMICOLON\n                    | functionempty :'
    
_lr_action_items = {'LBRACE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,40,56,57,58,61,64,65,66,67,68,69,70,99,100,101,113,152,154,158,164,173,186,187,194,203,206,207,210,212,214,219,220,225,229,230,235,236,240,241,246,250,251,252,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[4,4,-3,4,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,101,-2,4,-5,-6,-7,-8,-9,-10,-22,-23,-24,150,151,4,-4,4,187,-101,4,203,213,4,-92,4,-120,-122,-104,225,4,4,4,4,-100,-102,-93,-94,253,4,-121,261,262,263,4,-107,-108,4,4,4,4,4,4,4,4,4,-97,-95,-96,]),'CONTINUE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[23,23,-3,23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,23,-5,-6,-7,-8,-9,-10,-22,-23,-24,23,-4,23,-101,23,23,-92,23,-120,-122,-104,23,23,23,23,-100,-102,-93,-94,23,-121,23,-107,-108,23,23,23,23,23,23,23,23,23,-97,-95,-96,]),'BREAK':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[24,24,-3,24,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,24,-5,-6,-7,-8,-9,-10,-22,-23,-24,24,-4,24,-101,24,24,-92,24,-120,-122,-104,24,24,24,24,-100,-102,-93,-94,24,-121,24,-107,-108,24,24,24,24,24,24,275,24,24,-97,-95,-96,]),'LIST_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[30,30,-3,30,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,78,30,-58,-59,-2,30,-5,-6,30,122,-7,-8,-9,-10,-22,-23,-24,30,122,78,78,30,30,122,30,30,30,-4,30,122,30,122,-101,78,30,30,30,30,30,30,30,30,30,30,30,122,-124,-126,30,-92,30,-120,-122,-123,-104,30,30,30,-125,30,30,-100,-102,30,-93,-94,30,-121,30,-107,-108,30,30,30,30,30,30,30,30,30,30,30,-97,30,30,-95,-96,]),'MAP_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[31,31,-3,31,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,79,31,-58,-59,-2,31,-5,-6,31,123,-7,-8,-9,-10,-22,-23,-24,31,123,79,79,31,31,123,31,31,31,-4,31,123,31,123,-101,79,31,31,31,31,31,31,31,31,31,31,31,123,-124,-126,31,-92,31,-120,-122,-123,-104,31,31,31,-125,31,31,-100,-102,31,-93,-94,31,-121,31,-107,-108,31,31,31,31,31,31,31,31,31,31,31,-97,31,31,-95,-96,]),'ID':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,26,27,28,30,31,33,38,39,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,78,79,81,82,83,84,85,88,89,90,95,96,97,98,101,102,113,120,122,123,141,146,150,151,152,155,158,160,164,165,166,167,168,169,170,171,172,174,176,179,180,181,182,187,188,194,203,205,206,207,208,210,211,214,218,219,220,221,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[29,29,-3,29,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,75,77,80,-53,-54,75,99,100,109,-58,-59,-48,-49,-50,-51,-52,-55,-56,-57,-2,29,-5,75,75,-6,109,109,-7,-8,-9,-10,-22,-23,-24,75,75,75,127,-53,-54,75,75,75,75,109,109,135,75,109,109,147,109,29,109,-4,156,-53,-54,109,175,178,183,29,109,-101,191,29,109,109,109,109,109,109,109,109,109,109,178,-124,209,-126,29,75,-92,29,222,-120,-122,-123,-104,224,29,234,29,29,239,-125,29,109,-100,-102,109,-93,-94,29,-121,29,-107,-108,29,29,109,109,29,29,29,29,29,29,29,-97,109,109,-95,-96,]),'IMPORT':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[32,32,-3,32,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,32,-5,-6,-7,-8,-9,-10,-22,-23,-24,32,-4,32,-101,32,32,-92,32,-120,-122,-104,32,32,32,32,-100,-102,-93,-94,32,-121,32,-107,-108,32,32,32,32,32,32,32,32,32,-97,-95,-96,]),'IF':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[34,34,-3,34,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,34,-5,-6,-7,-8,-9,-10,-22,-23,-24,34,-4,34,-101,34,34,-92,34,-120,-122,-104,34,34,34,34,-100,-102,-93,-94,34,-121,34,-107,-108,34,34,34,34,34,34,34,34,34,-97,-95,-96,]),'WHILE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[35,35,-3,35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,35,-5,-6,-7,-8,-9,-10,-22,-23,-24,35,-4,35,-101,35,35,-92,35,-120,-122,-104,35,35,35,35,-100,-102,-93,-94,35,-121,35,-107,-108,35,35,35,35,35,35,35,35,35,-97,-95,-96,]),'FOR':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[36,36,-3,36,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,36,-5,-6,-7,-8,-9,-10,-22,-23,-24,36,-4,36,-101,36,36,-92,36,-120,-122,-104,36,36,36,36,-100,-102,-93,-94,36,-121,36,-107,-108,36,36,36,36,36,36,36,36,36,-97,-95,-96,]),'PRINT':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[37,37,-3,37,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,37,-5,-6,-7,-8,-9,-10,-22,-23,-24,37,-4,37,-101,37,37,-92,37,-120,-122,-104,37,37,37,37,-100,-102,-93,-94,37,-121,37,-107,-108,37,37,37,37,37,37,37,37,37,-97,-95,-96,]),'CLASS':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[38,38,-3,38,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,38,-5,-6,-7,-8,-9,-10,-22,-23,-24,38,-4,38,-101,38,38,-92,38,-120,-122,-104,38,38,38,38,-100,-102,-93,-94,38,-121,38,-107,-108,38,38,38,38,38,38,38,38,38,-97,-95,-96,]),'ENUM':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[39,39,-3,39,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,39,-5,-6,-7,-8,-9,-10,-22,-23,-24,39,-4,39,-101,39,39,-92,39,-120,-122,-104,39,39,39,39,-100,-102,-93,-94,39,-121,39,-107,-108,39,39,39,39,39,39,39,39,39,-97,-95,-96,]),'TRY':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[40,40,-3,40,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,40,-5,-6,-7,-8,-9,-10,-22,-23,-24,40,-4,40,-101,40,40,-92,40,-120,-122,-104,40,40,40,40,-100,-102,-93,-94,40,-121,40,-107,-108,40,40,40,40,40,40,40,40,40,-97,-95,-96,]),'SWITCH':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[41,41,-3,41,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,41,-5,-6,-7,-8,-9,-10,-22,-23,-24,41,-4,41,-101,41,41,-92,41,-120,-122,-104,41,41,41,41,-100,-102,-93,-94,41,-121,41,-107,-108,41,41,41,41,41,41,41,41,41,-97,-95,-96,]),'RETURN':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,56,57,58,61,64,65,66,67,68,69,70,101,113,152,158,164,187,194,203,206,207,210,214,219,220,225,229,230,235,236,241,246,253,254,255,256,257,262,263,264,265,266,272,273,274,280,281,],[42,42,-3,42,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,42,-5,-6,-7,-8,-9,-10,-22,-23,-24,42,-4,42,-101,42,42,-92,42,-120,-122,-104,42,42,42,42,-100,-102,-93,-94,42,-121,42,-107,-108,42,42,42,42,42,42,42,42,42,-97,-95,-96,]),'CONST':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,42,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,95,96,97,98,101,102,113,141,150,152,155,158,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[44,44,-3,44,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,44,-2,44,-5,-6,44,44,-7,-8,-9,-10,-22,-23,-24,44,44,44,44,44,44,44,44,-4,44,44,44,44,-101,44,44,44,44,44,44,44,44,44,44,44,44,-124,-126,44,-92,44,-120,-122,-123,-104,44,44,44,-125,44,44,-100,-102,44,-93,-94,44,-121,44,-107,-108,44,44,44,44,44,44,44,44,44,44,44,-97,44,44,-95,-96,]),'FINAL':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,42,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,95,96,97,98,101,102,113,141,150,152,155,158,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[45,45,-3,45,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,45,-2,45,-5,-6,45,45,-7,-8,-9,-10,-22,-23,-24,45,45,45,45,45,45,45,45,-4,45,45,45,45,-101,45,45,45,45,45,45,45,45,45,45,45,45,-124,-126,45,-92,45,-120,-122,-123,-104,45,45,45,-125,45,45,-100,-102,45,-93,-94,45,-121,45,-107,-108,45,45,45,45,45,45,45,45,45,45,45,-97,45,45,-95,-96,]),'INT_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[46,46,-3,46,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,46,46,-58,-59,-2,46,-5,-6,46,46,-7,-8,-9,-10,-22,-23,-24,46,46,46,46,46,46,46,46,46,46,-4,46,46,46,46,-101,46,46,46,46,46,46,46,46,46,46,46,46,46,-124,-126,46,-92,46,-120,-122,-123,-104,46,46,46,-125,46,46,-100,-102,46,-93,-94,46,-121,46,-107,-108,46,46,46,46,46,46,46,46,46,46,46,-97,46,46,-95,-96,]),'STRING_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[47,47,-3,47,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,47,47,-58,-59,-2,47,-5,-6,47,47,-7,-8,-9,-10,-22,-23,-24,47,47,47,47,47,47,47,47,47,47,-4,47,47,47,47,-101,47,47,47,47,47,47,47,47,47,47,47,47,47,-124,-126,47,-92,47,-120,-122,-123,-104,47,47,47,-125,47,47,-100,-102,47,-93,-94,47,-121,47,-107,-108,47,47,47,47,47,47,47,47,47,47,47,-97,47,47,-95,-96,]),'NUM_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[48,48,-3,48,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,48,48,-58,-59,-2,48,-5,-6,48,48,-7,-8,-9,-10,-22,-23,-24,48,48,48,48,48,48,48,48,48,48,-4,48,48,48,48,-101,48,48,48,48,48,48,48,48,48,48,48,48,48,-124,-126,48,-92,48,-120,-122,-123,-104,48,48,48,-125,48,48,-100,-102,48,-93,-94,48,-121,48,-107,-108,48,48,48,48,48,48,48,48,48,48,48,-97,48,48,-95,-96,]),'DOUBLE_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[49,49,-3,49,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,49,49,-58,-59,-2,49,-5,-6,49,49,-7,-8,-9,-10,-22,-23,-24,49,49,49,49,49,49,49,49,49,49,-4,49,49,49,49,-101,49,49,49,49,49,49,49,49,49,49,49,49,49,-124,-126,49,-92,49,-120,-122,-123,-104,49,49,49,-125,49,49,-100,-102,49,-93,-94,49,-121,49,-107,-108,49,49,49,49,49,49,49,49,49,49,49,-97,49,49,-95,-96,]),'BOOL_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[50,50,-3,50,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,50,50,-58,-59,-2,50,-5,-6,50,50,-7,-8,-9,-10,-22,-23,-24,50,50,50,50,50,50,50,50,50,50,-4,50,50,50,50,-101,50,50,50,50,50,50,50,50,50,50,50,50,50,-124,-126,50,-92,50,-120,-122,-123,-104,50,50,50,-125,50,50,-100,-102,50,-93,-94,50,-121,50,-107,-108,50,50,50,50,50,50,50,50,50,50,50,-97,50,50,-95,-96,]),'SET_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[51,51,-3,51,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,51,51,-58,-59,-2,51,-5,-6,51,51,-7,-8,-9,-10,-22,-23,-24,51,51,51,51,51,51,51,51,51,51,-4,51,51,51,51,-101,51,51,51,51,51,51,51,51,51,51,51,51,51,-124,-126,51,-92,51,-120,-122,-123,-104,51,51,51,-125,51,51,-100,-102,51,-93,-94,51,-121,51,-107,-108,51,51,51,51,51,51,51,51,51,51,51,-97,51,51,-95,-96,]),'VAR':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[52,52,-3,52,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,52,52,-58,-59,-2,52,-5,-6,52,52,-7,-8,-9,-10,-22,-23,-24,52,52,52,52,52,52,52,52,52,52,-4,52,52,52,52,-101,52,52,52,52,52,52,52,52,52,52,52,52,52,-124,-126,52,-92,52,-120,-122,-123,-104,52,52,52,-125,52,52,-100,-102,52,-93,-94,52,-121,52,-107,-108,52,52,52,52,52,52,52,52,52,52,52,-97,52,52,-95,-96,]),'VOID':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,70,85,88,91,92,95,96,97,98,101,102,113,141,150,152,155,158,161,164,165,166,167,168,169,170,171,172,174,176,179,180,182,187,194,203,206,207,208,210,214,219,220,223,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[53,53,-3,53,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,53,53,-58,-59,-2,53,-5,-6,53,53,-7,-8,-9,-10,-22,-23,-24,53,53,53,53,53,53,53,53,53,53,-4,53,53,53,53,-101,53,53,53,53,53,53,53,53,53,53,53,53,53,-124,-126,53,-92,53,-120,-122,-123,-104,53,53,53,-125,53,53,-100,-102,53,-93,-94,53,-121,53,-107,-108,53,53,53,53,53,53,53,53,53,53,53,-97,53,53,-95,-96,]),'LPARENTHESIS':([0,2,3,4,6,11,12,13,14,15,16,17,18,19,20,21,26,29,33,34,35,36,37,41,42,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,80,81,82,83,84,85,88,90,95,96,98,101,102,109,112,113,127,141,152,155,156,158,164,165,166,167,168,169,170,171,172,174,176,178,187,188,190,194,203,206,207,209,210,214,219,220,225,228,229,230,232,233,235,236,241,246,253,254,255,256,257,258,259,260,261,262,263,264,265,266,272,273,274,277,278,279,280,281,],[33,33,-3,33,63,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,33,88,33,95,96,97,98,102,33,-2,33,-5,33,33,-6,33,33,-7,-8,-9,-10,-22,-23,-24,33,33,33,-26,-27,33,33,33,33,33,33,33,141,141,33,33,33,88,63,-4,-25,141,33,33,-27,-101,33,141,141,33,33,33,33,33,33,141,33,88,33,33,216,-92,33,-120,-122,-27,-104,33,33,33,33,33,-100,-102,-28,33,-93,-94,33,-121,33,-107,-108,33,33,-29,33,-33,33,33,33,33,33,33,33,33,-97,-34,33,33,-95,-96,]),'MINUS':([0,2,3,4,5,11,12,13,14,15,16,17,18,19,20,21,25,26,29,33,42,43,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,83,84,85,88,90,94,95,96,98,101,102,104,105,109,111,113,114,115,124,125,126,128,129,130,131,135,136,140,141,152,155,158,159,163,164,165,166,167,168,169,170,171,172,174,176,187,188,194,203,206,207,210,214,215,219,220,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[26,26,-3,26,60,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-70,26,-77,26,26,-74,-80,-81,-2,26,-5,26,26,-6,26,26,-7,-8,-9,-10,-22,-23,-24,26,26,26,-79,-77,26,26,26,26,26,26,26,60,26,26,26,26,26,-80,-81,-77,60,-4,-68,-69,-71,-72,-73,60,60,60,60,-76,60,-78,26,26,26,-101,-75,60,26,26,26,26,26,26,26,26,26,26,26,26,26,-92,26,-120,-122,-104,26,60,26,26,26,26,-100,-102,26,-93,-94,26,-121,26,-107,-108,26,26,26,26,26,26,26,26,26,26,26,-97,26,26,-95,-96,]),'INT':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,26,33,42,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,82,83,84,85,88,90,95,96,98,101,102,113,141,152,155,158,164,165,166,167,168,169,170,171,172,174,176,187,188,194,203,206,207,210,214,219,220,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[54,54,-3,54,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,54,54,104,-2,54,-5,54,54,-6,104,104,-7,-8,-9,-10,-22,-23,-24,54,54,54,54,54,54,54,104,104,54,104,104,104,54,104,-4,104,54,104,-101,54,104,104,104,104,104,104,104,104,104,104,54,54,-92,54,-120,-122,-104,54,54,54,54,104,-100,-102,104,-93,-94,54,-121,54,-107,-108,54,54,104,104,54,54,54,54,54,54,54,-97,104,104,-95,-96,]),'DOUBLE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,26,33,42,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,82,83,84,85,88,90,95,96,98,101,102,113,141,152,155,158,164,165,166,167,168,169,170,171,172,174,176,187,188,194,203,206,207,210,214,219,220,225,228,229,230,233,235,236,241,246,253,254,255,256,257,259,261,262,263,264,265,266,272,273,274,278,279,280,281,],[55,55,-3,55,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,55,55,105,-2,55,-5,55,55,-6,105,105,-7,-8,-9,-10,-22,-23,-24,55,55,55,55,55,55,55,105,105,55,105,105,105,55,105,-4,105,55,105,-101,55,105,105,105,105,105,105,105,105,105,105,55,55,-92,55,-120,-122,-104,55,55,55,55,105,-100,-102,105,-93,-94,55,-121,55,-107,-108,55,55,105,105,55,55,55,55,55,55,55,-97,105,105,-95,-96,]),'$end':([0,1,2,3,11,12,13,14,15,16,17,18,19,20,21,56,58,61,64,65,66,67,68,69,70,113,158,164,194,206,207,210,219,229,230,235,236,246,254,255,274,280,281,],[-127,0,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-10,-22,-23,-24,-4,-101,-127,-92,-120,-122,-104,-127,-100,-102,-93,-94,-121,-107,-108,-97,-95,-96,]),'RBRACE':([3,4,11,12,13,14,15,16,17,18,19,20,21,25,43,54,55,56,57,58,61,64,65,66,67,68,69,70,74,75,101,104,105,106,107,108,109,110,111,113,114,115,124,125,126,135,140,152,158,159,164,179,180,182,183,184,187,194,203,206,207,208,210,214,219,220,223,224,225,229,230,235,236,241,242,246,253,254,255,256,261,262,263,264,265,268,269,270,272,273,274,280,281,282,283,],[-3,-127,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-70,-74,-80,-81,-2,113,-5,-6,-7,-8,-9,-10,-22,-23,-24,-79,-77,-127,-60,-61,-62,-63,-64,-65,-66,-67,-4,-68,-69,-71,-72,-73,-76,-78,185,-101,-75,-127,207,-124,-126,-106,210,-127,-92,-127,-120,-122,-123,-104,229,-127,236,-125,-105,-127,-100,-102,-93,-94,254,255,-121,-127,-107,-108,-127,-127,-127,-127,274,-114,277,-36,-37,280,281,-97,-95,-96,-35,-38,]),'SEMICOLON':([3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,42,43,54,55,56,58,61,64,65,66,67,68,69,70,74,75,77,80,86,87,93,103,104,105,106,107,108,109,110,111,113,114,115,116,124,125,126,127,128,129,130,131,132,135,139,140,143,145,158,159,164,177,193,194,195,196,197,198,199,200,201,202,204,206,207,209,210,215,219,229,230,231,232,235,236,246,254,255,257,258,260,266,274,275,277,280,281,],[-3,58,61,64,65,66,67,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,68,69,70,-70,-77,-41,-74,-80,-81,-2,-5,-6,-7,-8,-9,-10,-22,-23,-24,-79,-77,-26,-27,-98,-99,139,-40,-60,-61,-62,-63,-64,-65,-66,-67,-4,-68,-69,-46,-71,-72,-73,-25,-42,-43,-44,-45,-47,-76,-39,-78,-91,174,-101,-75,-127,206,-90,-92,-88,-89,-82,-83,-84,-85,-86,-87,221,-120,-122,223,-104,230,-127,-100,-102,246,-28,-93,-94,-121,-107,-108,-127,-29,-33,276,-97,70,-34,-95,-96,]),'DEFAULT':([3,11,12,13,14,15,16,17,18,19,20,21,56,58,61,64,65,66,67,68,69,70,113,158,164,194,206,207,210,219,226,227,229,230,235,236,243,246,254,255,257,266,274,275,276,280,281,],[-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-10,-22,-23,-24,-4,-101,-127,-92,-120,-122,-104,-127,244,-110,-100,-102,-93,-94,-109,-121,-107,-108,-127,-113,-97,-111,-112,-95,-96,]),'CASE':([3,11,12,13,14,15,16,17,18,19,20,21,56,58,61,64,65,66,67,68,69,70,113,158,164,194,206,207,210,213,219,226,227,229,230,235,236,243,246,254,255,257,266,274,275,276,280,281,],[-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-10,-22,-23,-24,-4,-101,-127,-92,-120,-122,-104,228,-127,228,-110,-100,-102,-93,-94,-109,-121,-107,-108,-127,-113,-97,-111,-112,-95,-96,]),'PLUS':([5,25,29,43,54,55,74,75,94,104,105,109,111,114,115,124,125,126,128,129,130,131,135,136,140,159,163,215,],[59,-70,-77,-74,-80,-81,-79,-77,59,-80,-81,-77,59,-68,-69,-71,-72,-73,59,59,59,59,-76,59,-78,-75,59,59,]),'ASSIGN_OPERATOR':([6,29,77,80,127,147,148,175,191,232,234,258,260,277,],[62,85,-26,-27,-25,176,62,-27,217,-28,250,-29,-33,-34,]),'ELSE':([11,12,13,14,15,16,17,18,19,20,21,58,61,64,65,66,67,68,69,70,113,158,164,194,206,207,210,219,229,230,235,236,246,254,255,274,280,281,],[-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-8,-9,-10,-22,-23,-24,-4,-101,-127,219,-120,-122,-104,-127,-100,-102,-93,-94,-121,-107,-108,-97,-95,-96,]),'RPARENTHESIS':([25,43,54,55,63,74,75,86,87,88,94,104,105,106,107,108,109,110,111,114,115,117,118,119,121,124,125,126,134,135,140,142,143,144,149,153,156,158,159,162,163,189,193,195,196,197,198,199,200,201,202,216,222,229,230,237,238,],[-70,-74,-80,-81,-127,-79,-77,-98,-99,-127,140,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,154,-116,-117,-119,-71,-72,-73,158,-76,-78,164,-91,173,177,186,-118,-101,-75,193,140,-115,-90,-88,-89,-82,-83,-84,-85,-86,-87,231,240,-100,-102,251,252,]),'COMMA':([25,43,46,47,48,49,50,51,52,53,54,55,63,74,75,78,79,88,104,105,106,107,108,109,110,111,114,115,117,118,119,121,124,125,126,134,135,138,140,156,158,159,183,184,189,224,229,230,233,247,248,249,261,267,268,269,270,282,283,],[-70,-74,-48,-49,-50,-51,-52,-55,-56,-57,-80,-81,-127,-79,-77,-53,-54,-127,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,155,-116,-117,-119,-71,-72,-73,155,-76,161,-78,-118,-101,-75,-106,211,-115,-105,-100,-102,-127,259,-31,-32,-127,-30,278,-36,-37,-35,-38,]),'RBRACKET':([25,43,54,55,74,75,104,105,106,107,108,109,110,111,114,115,124,125,126,135,136,140,158,159,229,230,233,247,248,249,267,],[-70,-74,-80,-81,-79,-77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-71,-72,-73,-76,159,-78,-101,-75,-100,-102,-127,258,-31,-32,-30,]),'EQUALS':([25,43,54,55,74,75,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,143,158,159,163,229,230,],[-70,-74,-80,-81,-79,-77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-71,-72,-73,-76,-78,167,-101,-75,-67,-100,-102,]),'NOT_EQUALS':([25,43,54,55,74,75,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,143,158,159,163,229,230,],[-70,-74,-80,-81,-79,-77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-71,-72,-73,-76,-78,168,-101,-75,-67,-100,-102,]),'GREATER_THAN':([25,43,46,47,48,49,50,51,52,53,54,55,74,75,78,79,104,105,106,107,108,109,110,111,114,115,124,125,126,135,137,140,143,158,159,163,192,229,230,],[-70,-74,-48,-49,-50,-51,-52,-55,-56,-57,-80,-81,-79,-77,-53,-54,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-71,-72,-73,-76,160,-78,169,-101,-75,-67,218,-100,-102,]),'LESS_THAN':([25,30,31,43,54,55,74,75,104,105,106,107,108,109,110,111,114,115,122,123,124,125,126,135,140,143,158,159,163,229,230,],[-70,91,92,-74,-80,-81,-79,-77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,91,92,-71,-72,-73,-76,-78,170,-101,-75,-67,-100,-102,]),'GREATER_THAN_OR_EQUALS':([25,43,54,55,74,75,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,143,158,159,163,229,230,],[-70,-74,-80,-81,-79,-77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-71,-72,-73,-76,-78,171,-101,-75,-67,-100,-102,]),'LESS_THAN_OR_EQUALS':([25,43,54,55,74,75,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,143,158,159,163,229,230,],[-70,-74,-80,-81,-79,-77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-71,-72,-73,-76,-78,172,-101,-75,-67,-100,-102,]),'AND':([25,43,54,55,74,75,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,142,143,144,158,159,162,163,193,195,196,197,198,199,200,201,202,204,229,230,],[-70,-74,-80,-81,-79,-77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-71,-72,-73,-76,-78,165,-91,165,-101,-75,165,-67,-90,165,165,-82,-83,-84,-85,-86,-87,165,-100,-102,]),'OR':([25,43,54,55,74,75,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,142,143,144,158,159,162,163,193,195,196,197,198,199,200,201,202,204,229,230,],[-70,-74,-80,-81,-79,-77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-71,-72,-73,-76,-78,166,-91,166,-101,-75,166,-67,-90,166,166,-82,-83,-84,-85,-86,-87,166,-100,-102,]),'COLON':([25,43,54,55,74,75,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,158,159,229,230,244,245,271,],[-70,-74,-80,-81,-79,-77,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-71,-72,-73,-76,-78,-101,-75,-100,-102,256,257,279,]),'TIMES':([25,29,43,54,55,74,75,104,105,109,114,115,124,125,126,135,140,159,],[71,-77,-74,-80,-81,-79,-77,-80,-81,-77,71,71,-71,-72,-73,-76,-78,-75,]),'DIVIDE':([25,29,43,54,55,74,75,104,105,109,114,115,124,125,126,135,140,159,],[72,-77,-74,-80,-81,-79,-77,-80,-81,-77,72,72,-71,-72,-73,-76,-78,-75,]),'MODULE':([25,29,43,54,55,74,75,104,105,109,114,115,124,125,126,135,140,159,],[73,-77,-74,-80,-81,-79,-77,-80,-81,-77,73,73,-71,-72,-73,-76,-78,-75,]),'PLUS_EQUALS':([29,147,],[81,81,]),'MINUS_EQUALS':([29,147,],[82,82,]),'TIMES_EQUALS':([29,147,],[83,83,]),'DIVIDE_EQUALS':([29,147,],[84,84,]),'INCREMENT':([29,239,],[86,86,]),'DECREMENT':([29,239,],[87,87,]),'LBRACKET':([29,75,109,217,],[90,90,90,233,]),'DOT':([29,75,109,133,],[89,89,89,157,]),'STRING':([32,42,62,63,85,88,95,96,98,102,141,155,165,166,167,168,169,170,171,172,174,176,228,233,259,261,278,279,],[93,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'BOOL':([42,62,63,85,88,95,96,98,102,141,155,165,166,167,168,169,170,171,172,174,176,228,233,259,261,278,279,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'NULL':([42,62,63,85,88,95,96,98,102,141,155,165,166,167,168,169,170,171,172,174,176,228,233,259,261,278,279,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'STDIN':([85,],[133,]),'ARROW':([154,],[188,]),'READ':([157,],[190,]),'IN':([175,],[205,]),'FINALLY':([185,],[212,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,4,101,187,203,225,253,256,257,262,263,],[2,57,152,214,220,241,264,265,266,272,273,]),'statement':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[3,56,3,56,3,56,194,3,3,56,235,56,3,56,3,3,3,3,3,56,56,56,56,56,]),'expression':([0,2,4,33,42,57,62,63,81,82,83,84,85,88,90,95,96,98,101,102,141,152,155,164,165,166,167,168,169,170,171,172,174,176,187,188,203,214,219,220,225,228,233,241,253,256,257,259,261,262,263,264,265,266,272,273,278,279,],[5,5,5,94,111,5,111,111,128,129,130,131,111,111,136,111,111,111,5,111,163,5,111,5,111,111,111,111,111,111,111,111,111,111,5,215,5,5,5,5,5,111,111,5,5,5,5,111,111,5,5,5,5,5,5,5,111,111,]),'declaration':([0,2,4,42,57,62,63,85,88,95,96,97,98,101,102,141,150,152,155,164,165,166,167,168,169,170,171,172,174,176,179,187,203,214,219,220,225,228,233,241,253,256,257,259,261,262,263,264,265,266,272,273,278,279,],[6,6,6,112,6,112,112,112,112,112,112,148,112,6,112,112,112,6,112,6,112,112,112,112,112,112,112,112,112,112,112,6,6,6,6,6,6,112,112,6,6,6,6,112,112,6,6,6,6,6,6,6,112,112,]),'assignation':([0,2,4,57,97,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[7,7,7,7,145,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'increment':([0,2,4,57,101,152,164,187,203,214,219,220,221,225,241,253,256,257,262,263,264,265,266,272,273,],[8,8,8,8,8,8,8,8,8,8,8,8,237,8,8,8,8,8,8,8,8,8,8,8,8,]),'decrement':([0,2,4,57,101,152,164,187,203,214,219,220,221,225,241,253,256,257,262,263,264,265,266,272,273,],[9,9,9,9,9,9,9,9,9,9,9,9,238,9,9,9,9,9,9,9,9,9,9,9,9,]),'import':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,4,42,57,62,63,85,88,95,96,98,101,102,141,150,152,155,164,165,166,167,168,169,170,171,172,174,176,179,187,203,214,219,220,225,228,233,241,253,256,257,259,261,262,263,264,265,266,272,273,278,279,],[11,11,11,110,11,110,110,110,110,110,110,110,11,110,110,182,11,110,11,110,110,110,110,110,110,110,110,110,110,182,11,11,11,11,11,11,110,110,11,11,11,11,110,110,11,11,11,11,11,11,11,110,110,]),'if':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'for':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'print':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'input':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'class_def':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'enum':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'empty':([0,2,4,57,63,88,101,152,164,187,203,214,219,220,225,233,241,253,256,257,261,262,263,264,265,266,272,273,],[21,21,21,21,119,119,21,21,21,21,21,21,21,21,21,249,21,21,21,21,270,21,21,21,21,21,21,21,]),'return':([0,2,4,57,101,152,164,187,203,214,219,220,225,241,253,256,257,262,263,264,265,266,272,273,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'term':([0,2,4,33,42,57,59,60,62,63,81,82,83,84,85,88,90,95,96,98,101,102,141,152,155,164,165,166,167,168,169,170,171,172,174,176,187,188,203,214,219,220,225,228,233,241,253,256,257,259,261,262,263,264,265,266,272,273,278,279,],[25,25,25,25,25,25,114,115,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'declaration_modifier':([0,2,4,42,57,62,63,85,88,95,96,97,98,101,102,141,150,152,155,164,165,166,167,168,169,170,171,172,174,176,179,187,203,214,219,220,225,228,233,241,253,256,257,259,261,262,263,264,265,266,272,273,278,279,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'varType':([0,2,4,27,42,57,62,63,85,88,91,92,95,96,97,98,101,102,141,150,152,155,161,164,165,166,167,168,169,170,171,172,174,176,179,187,203,214,219,220,225,228,233,241,253,256,257,259,261,262,263,264,265,266,272,273,278,279,],[28,28,28,76,28,28,28,120,28,120,137,138,28,28,146,28,28,28,28,181,28,120,192,28,28,28,28,28,28,28,28,28,28,28,181,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'factor':([0,2,4,26,33,42,57,59,60,62,63,71,72,73,81,82,83,84,85,88,90,95,96,98,101,102,141,152,155,164,165,166,167,168,169,170,171,172,174,176,187,188,203,214,219,220,225,228,233,241,253,256,257,259,261,262,263,264,265,266,272,273,278,279,],[43,43,43,74,43,43,43,43,43,43,43,124,125,126,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'variable':([42,62,63,85,88,95,96,98,102,141,155,165,166,167,168,169,170,171,172,174,176,228,233,259,261,278,279,],[103,116,121,132,121,143,143,149,153,143,121,143,143,197,198,199,200,201,202,143,132,245,248,267,271,271,283,]),'parameters':([63,88,],[117,134,]),'parameter':([63,88,155,],[118,118,189,]),'booleanExpression':([95,96,141,165,166,174,],[142,144,162,195,196,204,]),'class_members':([150,],[179,]),'class_member':([150,179,],[180,208,]),'enum_values':([151,],[184,]),'cases':([213,],[226,]),'case':([213,226,],[227,243,]),'list_literal':([217,],[232,]),'default_case':([226,],[242,]),'list_elements':([233,],[247,]),'map_literal':([250,],[260,]),'map_elements':([261,],[268,]),'map_pair':([261,278,],[269,282,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analizadorSintax.py',16),
  ('statements -> statements statement','statements',2,'p_statements','analizadorSintax.py',20),
  ('statements -> statement','statements',1,'p_statements','analizadorSintax.py',21),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_statement_block','analizadorSintax.py',29),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','analizadorSintax.py',33),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement','analizadorSintax.py',34),
  ('statement -> assignation SEMICOLON','statement',2,'p_statement','analizadorSintax.py',35),
  ('statement -> increment SEMICOLON','statement',2,'p_statement','analizadorSintax.py',36),
  ('statement -> decrement SEMICOLON','statement',2,'p_statement','analizadorSintax.py',37),
  ('statement -> import SEMICOLON','statement',2,'p_statement','analizadorSintax.py',38),
  ('statement -> function','statement',1,'p_statement','analizadorSintax.py',39),
  ('statement -> if','statement',1,'p_statement','analizadorSintax.py',40),
  ('statement -> while','statement',1,'p_statement','analizadorSintax.py',41),
  ('statement -> for','statement',1,'p_statement','analizadorSintax.py',42),
  ('statement -> print','statement',1,'p_statement','analizadorSintax.py',43),
  ('statement -> input','statement',1,'p_statement','analizadorSintax.py',44),
  ('statement -> class_def','statement',1,'p_statement','analizadorSintax.py',45),
  ('statement -> enum','statement',1,'p_statement','analizadorSintax.py',46),
  ('statement -> try','statement',1,'p_statement','analizadorSintax.py',47),
  ('statement -> switch','statement',1,'p_statement','analizadorSintax.py',48),
  ('statement -> empty','statement',1,'p_statement','analizadorSintax.py',49),
  ('statement -> return SEMICOLON','statement',2,'p_statement','analizadorSintax.py',50),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement','analizadorSintax.py',51),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','analizadorSintax.py',52),
  ('declaration -> declaration_modifier varType ID','declaration',3,'p_declaration','analizadorSintax.py',56),
  ('declaration -> declaration_modifier ID','declaration',2,'p_declaration','analizadorSintax.py',57),
  ('declaration -> varType ID','declaration',2,'p_declaration','analizadorSintax.py',58),
  ('declaration -> LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal','declaration',7,'p_declaration_list_init','analizadorSintax.py',67),
  ('list_literal -> LBRACKET list_elements RBRACKET','list_literal',3,'p_list_literal','analizadorSintax.py',71),
  ('list_elements -> list_elements COMMA variable','list_elements',3,'p_list_elements','analizadorSintax.py',75),
  ('list_elements -> variable','list_elements',1,'p_list_elements','analizadorSintax.py',76),
  ('list_elements -> empty','list_elements',1,'p_list_elements','analizadorSintax.py',77),
  ('declaration -> MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal','declaration',9,'p_declaration_map_init','analizadorSintax.py',86),
  ('map_literal -> LBRACE map_elements RBRACE','map_literal',3,'p_map_literal','analizadorSintax.py',90),
  ('map_elements -> map_elements COMMA map_pair','map_elements',3,'p_map_elements','analizadorSintax.py',94),
  ('map_elements -> map_pair','map_elements',1,'p_map_elements','analizadorSintax.py',95),
  ('map_elements -> empty','map_elements',1,'p_map_elements','analizadorSintax.py',96),
  ('map_pair -> variable COLON variable','map_pair',3,'p_map_pair','analizadorSintax.py',105),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizadorSintax.py',109),
  ('return -> RETURN variable','return',2,'p_return','analizadorSintax.py',113),
  ('return -> RETURN','return',1,'p_return','analizadorSintax.py',114),
  ('assignation -> ID PLUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',122),
  ('assignation -> ID MINUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',123),
  ('assignation -> ID TIMES_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',124),
  ('assignation -> ID DIVIDE_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',125),
  ('assignation -> declaration ASSIGN_OPERATOR variable','assignation',3,'p_assignation','analizadorSintax.py',129),
  ('assignation -> ID ASSIGN_OPERATOR variable','assignation',3,'p_assignation_no_type','analizadorSintax.py',133),
  ('varType -> INT_TYPE','varType',1,'p_varType','analizadorSintax.py',137),
  ('varType -> STRING_TYPE','varType',1,'p_varType','analizadorSintax.py',138),
  ('varType -> NUM_TYPE','varType',1,'p_varType','analizadorSintax.py',139),
  ('varType -> DOUBLE_TYPE','varType',1,'p_varType','analizadorSintax.py',140),
  ('varType -> BOOL_TYPE','varType',1,'p_varType','analizadorSintax.py',141),
  ('varType -> LIST_TYPE','varType',1,'p_varType','analizadorSintax.py',142),
  ('varType -> MAP_TYPE','varType',1,'p_varType','analizadorSintax.py',143),
  ('varType -> SET_TYPE','varType',1,'p_varType','analizadorSintax.py',144),
  ('varType -> VAR','varType',1,'p_varType','analizadorSintax.py',145),
  ('varType -> VOID','varType',1,'p_varType','analizadorSintax.py',146),
  ('declaration_modifier -> CONST','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',149),
  ('declaration_modifier -> FINAL','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',150),
  ('variable -> INT','variable',1,'p_variable','analizadorSintax.py',154),
  ('variable -> DOUBLE','variable',1,'p_variable','analizadorSintax.py',155),
  ('variable -> STRING','variable',1,'p_variable','analizadorSintax.py',156),
  ('variable -> BOOL','variable',1,'p_variable','analizadorSintax.py',157),
  ('variable -> NULL','variable',1,'p_variable','analizadorSintax.py',158),
  ('variable -> ID','variable',1,'p_variable','analizadorSintax.py',159),
  ('variable -> function','variable',1,'p_variable','analizadorSintax.py',160),
  ('variable -> expression','variable',1,'p_variable','analizadorSintax.py',161),
  ('expression -> expression PLUS term','expression',3,'p_expression_operations','analizadorSintax.py',165),
  ('expression -> expression MINUS term','expression',3,'p_expression_operations','analizadorSintax.py',166),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintax.py',170),
  ('term -> term TIMES factor','term',3,'p_term_operations','analizadorSintax.py',174),
  ('term -> term DIVIDE factor','term',3,'p_term_operations','analizadorSintax.py',175),
  ('term -> term MODULE factor','term',3,'p_term_operations','analizadorSintax.py',176),
  ('term -> factor','term',1,'p_term_factor','analizadorSintax.py',180),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_variable_array_access','analizadorSintax.py',184),
  ('factor -> ID DOT ID','factor',3,'p_variable_member_access','analizadorSintax.py',188),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintax.py',192),
  ('factor -> LPARENTHESIS expression RPARENTHESIS','factor',3,'p_factor_parens','analizadorSintax.py',196),
  ('factor -> MINUS factor','factor',2,'p_factor_unary_minus','analizadorSintax.py',200),
  ('factor -> INT','factor',1,'p_factor_numeric','analizadorSintax.py',204),
  ('factor -> DOUBLE','factor',1,'p_factor_numeric','analizadorSintax.py',205),
  ('booleanExpression -> variable EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',213),
  ('booleanExpression -> variable NOT_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',214),
  ('booleanExpression -> variable GREATER_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',215),
  ('booleanExpression -> variable LESS_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',216),
  ('booleanExpression -> variable GREATER_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',217),
  ('booleanExpression -> variable LESS_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',218),
  ('booleanExpression -> booleanExpression AND booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',222),
  ('booleanExpression -> booleanExpression OR booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',223),
  ('booleanExpression -> LPARENTHESIS booleanExpression RPARENTHESIS','booleanExpression',3,'p_boolean_expression_paren','analizadorSintax.py',227),
  ('booleanExpression -> variable','booleanExpression',1,'p_boolean_expression_variable','analizadorSintax.py',231),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement','if',5,'p_if','analizadorSintax.py',237),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statement','if',7,'p_if_else','analizadorSintax.py',242),
  ('while -> WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACE','while',7,'p_while','analizadorSintax.py',246),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',250),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',251),
  ('for -> FOR LPARENTHESIS varType ID IN ID RPARENTHESIS LBRACE statements RBRACE','for',10,'p_for_in','analizadorSintax.py',255),
  ('increment -> ID INCREMENT','increment',2,'p_increment','analizadorSintax.py',259),
  ('decrement -> ID DECREMENT','decrement',2,'p_decrement','analizadorSintax.py',263),
  ('function -> declaration LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE','function',7,'p_function','analizadorSintax.py',268),
  ('function -> ID LPARENTHESIS parameters RPARENTHESIS','function',4,'p_function','analizadorSintax.py',269),
  ('function -> declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLON','function',7,'p_function_arrow','analizadorSintax.py',272),
  ('typedef -> TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLON','typedef',9,'p_typedef','analizadorSintax.py',276),
  ('enum -> ENUM ID LBRACE enum_values RBRACE','enum',5,'p_enum','analizadorSintax.py',280),
  ('enum_values -> enum_values COMMA ID','enum_values',3,'p_enum_values','analizadorSintax.py',283),
  ('enum_values -> ID','enum_values',1,'p_enum_values','analizadorSintax.py',284),
  ('try -> TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACE','try',8,'p_try','analizadorSintax.py',288),
  ('switch -> SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACE','switch',8,'p_switch','analizadorSintax.py',293),
  ('cases -> cases case','cases',2,'p_cases','analizadorSintax.py',297),
  ('cases -> case','cases',1,'p_cases','analizadorSintax.py',298),
  ('case -> CASE variable COLON statements BREAK','case',5,'p_case','analizadorSintax.py',305),
  ('case -> CASE variable COLON statements SEMICOLON','case',5,'p_case','analizadorSintax.py',306),
  ('case -> CASE variable COLON statements','case',4,'p_case','analizadorSintax.py',307),
  ('default_case -> DEFAULT COLON statements','default_case',3,'p_default_case','analizadorSintax.py',311),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','analizadorSintax.py',316),
  ('parameters -> parameter','parameters',1,'p_parameters','analizadorSintax.py',317),
  ('parameters -> empty','parameters',1,'p_parameters','analizadorSintax.py',318),
  ('parameter -> varType ID','parameter',2,'p_parameter','analizadorSintax.py',321),
  ('parameter -> variable','parameter',1,'p_parameter','analizadorSintax.py',322),
  ('print -> PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLON','print',5,'p_print','analizadorSintax.py',326),
  ('input -> ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLON','input',8,'p_input','analizadorSintax.py',329),
  ('class_def -> CLASS ID LBRACE class_members RBRACE','class_def',5,'p_class_def','analizadorSintax.py',333),
  ('class_members -> class_members class_member','class_members',2,'p_class_members','analizadorSintax.py',336),
  ('class_members -> class_member','class_members',1,'p_class_members','analizadorSintax.py',337),
  ('class_member -> varType ID SEMICOLON','class_member',3,'p_class_member','analizadorSintax.py',340),
  ('class_member -> function','class_member',1,'p_class_member','analizadorSintax.py',341),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintax.py',345),
]
