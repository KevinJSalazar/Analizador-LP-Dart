
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIFXnonassocELSEABSTRACT AND ARROW ASSIGN_OPERATOR BOOL BOOL_TYPE BREAK CASE CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQUALS DOT DOUBLE DOUBLE_TYPE ELSE ENUM EQUALS EXPORT FALSE FINAL FINALLY FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF IMPORT IN INCREMENT INT INT_TYPE LATE LBRACE LBRACKET LESS_THAN LESS_THAN_OR_EQUALS LIST_TYPE LPARENTHESIS MAP_TYPE MINUS MINUS_EQUALS MODULE NOT NOT_EQUALS NULL NULL_TYPE NUM_TYPE OR PLUS PLUS_EQUALS PRINT RBRACE RBRACKET READ RETURN RPARENTHESIS SEMICOLON SET_TYPE STATIC STDIN STRING STRING_TYPE SWITCH TIMES TIMES_EQUALS TRUE TRY TYPEDEF VAR VOID WHILEprogram : statementsstatements : statements statement\n| statementstatement : LBRACE statements RBRACEstatement : expression SEMICOLON\n| declaration SEMICOLON\n| assignation SEMICOLON\n| increment SEMICOLON\n| decrement SEMICOLON\n| import\n| function\n| if\n| while\n| for\n| print\n| input\n| class_def\n| enum\n| try\n| switch\n| empty\n| return SEMICOLON\n| CONTINUE SEMICOLON\n| BREAK SEMICOLONdeclaration : declaration_with_modifier\n| declaration_without_modifierdeclaration_with_modifier : declaration_modifier varType ID\n| declaration_modifier IDdeclaration_without_modifier : varType IDdeclaration : LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal\n| declaration_modifier LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literaldeclaration : declaration ASSIGN_OPERATOR LESS_THAN varType GREATER_THAN list_literaldeclaration : MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal\n| declaration_modifier MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literaldeclaration : SET_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR set_literal\n| declaration_modifier SET_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR set_literalset_literal : LBRACE list_elements RBRACEassignation : declaration ASSIGN_OPERATOR variableassignation : ID ASSIGN_OPERATOR variableassignation : ID PLUS_EQUALS expression\n| ID MINUS_EQUALS expression\n| ID TIMES_EQUALS expression\n| ID DIVIDE_EQUALS expressiondeclaration_modifier : CONST \n| FINAL\n| LATEvarType : INT_TYPE \n| STRING_TYPE \n| NUM_TYPE \n| DOUBLE_TYPE \n| BOOL_TYPE \n| LIST_TYPE \n| MAP_TYPE \n| SET_TYPE\n| VAR\n| VOIDlist_literal : LBRACKET list_elements RBRACKETlist_elements : list_elements COMMA variable\n| variable\n| emptymap_literal : LBRACE map_elements RBRACEmap_elements : map_elements COMMA map_pair\n| map_pair\n| emptymap_pair : variable COLON variable\n| variable COLON booleanExpressionvariable : INT \n| DOUBLE \n| STRING \n| BOOL  \n| NULL\n| ID\n| function\n| lambda\n| expressionexpression : expression PLUS term\n| expression MINUS termexpression : termterm : term TIMES factor\n| term DIVIDE factor\n| term MODULE factorterm : factorfactor : MINUS factorfactor : INT\n| DOUBLEfactor : IDfactor : LPARENTHESIS expression RPARENTHESISfactor : ID LBRACKET expression RBRACKETfactor : ID DOT function statement\n| ID DOT function\n| ID DOT IDbooleanExpression : variable EQUALS variable\n| variable NOT_EQUALS variable\n| variable GREATER_THAN variable\n| variable LESS_THAN variable\n| variable GREATER_THAN_OR_EQUALS variable\n| variable LESS_THAN_OR_EQUALS variablebooleanExpression : booleanExpression AND booleanExpression\n| booleanExpression OR booleanExpressionbooleanExpression : LPARENTHESIS booleanExpression RPARENTHESISbooleanExpression : variableif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement %prec IFXif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statementwhile : WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE\n| FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS varType ID IN ID RPARENTHESIS for_in_blockfor_in_block : LBRACE for_in_scope statements RBRACEfor_in_scope :increment : ID INCREMENTdecrement : ID DECREMENTtry : TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACEswitch : SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACEcases : cases case\n| casecase : CASE variable COLON statements BREAK\n| CASE variable COLON statements SEMICOLON\n| CASE variable COLON statementsdefault_case : DEFAULT COLON statementsfunction : declaration LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE\n| ID LPARENTHESIS parameters RPARENTHESISfunction : declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLONparameters : parameters COMMA parameter\n| parameter\n| emptyparameter : declaration\n| variablelambda : LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACEprint : PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLONinput : ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLONclass_def : CLASS ID LBRACE class_members RBRACEclass_members : class_members class_member\n| class_memberclass_member : varType ID SEMICOLON\n| functionenum : ENUM ID LBRACE enum_values RBRACEenum_values : enum_values COMMA ID\n| IDtypedef : TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLONreturn : RETURN variable\n| RETURNimport : IMPORT STRING SEMICOLONempty :'
    
_lr_action_items = {'LBRACE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,43,59,60,61,64,67,68,69,70,71,72,103,104,105,119,144,152,168,176,180,191,200,214,218,220,231,240,243,244,247,249,251,254,262,263,264,269,273,277,278,283,287,288,292,293,301,305,307,308,309,310,311,312,313,314,316,320,321,322,323,324,330,331,332,338,339,340,],[4,4,-3,4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,105,-2,4,-5,-6,-7,-8,-9,-22,-23,-24,166,167,4,-4,4,-142,4,220,-121,4,240,250,251,4,-102,4,-129,-131,-136,269,4,4,286,4,4,4,4,-120,-122,286,-103,-104,310,4,-130,318,320,321,-107,-109,-112,-113,4,4,318,4,4,4,4,4,4,4,4,-105,-106,-108,]),'CONTINUE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[23,23,-3,23,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,23,-5,-6,-7,-8,-9,-22,-23,-24,23,-4,23,-142,23,-121,23,23,-102,23,-129,-131,-136,23,23,23,23,23,23,-120,-122,-103,-104,23,-130,-107,-109,-112,-113,23,23,23,23,23,23,23,23,23,23,-105,-106,-108,]),'BREAK':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[24,24,-3,24,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,24,-5,-6,-7,-8,-9,-22,-23,-24,24,-4,24,-142,24,-121,24,24,-102,24,-129,-131,-136,24,24,24,24,24,24,-120,-122,-103,-104,24,-130,-107,-109,-112,-113,24,24,24,24,24,24,333,24,24,24,-105,-106,-108,]),'LIST_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[29,29,-3,29,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,90,29,-44,-45,-46,-2,29,-5,-6,29,29,-7,-8,-9,-22,-23,-24,132,29,29,29,132,132,29,29,162,29,29,29,29,-4,132,29,132,132,132,-142,29,162,29,29,29,-121,132,29,29,29,29,29,29,29,29,29,29,29,29,162,-133,-135,29,132,-102,29,-129,-131,-132,-136,29,29,29,29,29,-134,29,29,29,-120,-122,29,-103,-104,29,29,-130,-107,-109,-112,-113,29,29,29,29,29,29,29,29,29,29,29,29,29,-105,-106,-108,]),'MAP_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[33,33,-3,33,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,93,33,-44,-45,-46,-2,33,-5,-6,33,33,-7,-8,-9,-22,-23,-24,134,33,33,33,134,134,33,33,163,33,33,33,33,-4,134,33,134,134,134,-142,33,163,33,33,33,-121,134,33,33,33,33,33,33,33,33,33,33,33,33,163,-133,-135,33,134,-102,33,-129,-131,-132,-136,33,33,33,33,33,-134,33,33,33,-120,-122,33,-103,-104,33,33,-130,-107,-109,-112,-113,33,33,33,33,33,33,33,33,33,33,33,33,33,-105,-106,-108,]),'SET_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[34,34,-3,34,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,94,34,-44,-45,-46,-2,34,-5,-6,34,34,-7,-8,-9,-22,-23,-24,135,34,34,34,135,135,34,34,164,34,34,34,34,-4,135,34,135,135,135,-142,34,164,34,34,34,-121,135,34,34,34,34,34,34,34,34,34,34,34,34,164,-133,-135,34,135,-102,34,-129,-131,-132,-136,34,34,34,34,34,-134,34,34,34,-120,-122,34,-103,-104,34,34,-130,-107,-109,-112,-113,34,34,34,34,34,34,34,34,34,34,34,34,34,-105,-106,-108,]),'ID':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,26,29,30,32,33,34,36,41,42,45,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,82,83,84,87,88,89,90,91,93,94,99,100,101,102,105,106,118,119,144,152,154,159,162,163,164,166,167,168,171,177,178,180,187,191,192,193,194,195,196,197,198,199,201,203,204,207,208,209,210,220,221,225,227,231,240,242,243,244,245,247,248,251,253,254,261,263,264,265,267,269,272,273,277,278,282,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[31,31,-3,31,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,77,-52,79,92,-53,-54,77,103,104,113,-44,-45,-46,-47,-48,-49,-50,-51,-55,-56,-2,31,-5,77,77,-6,113,113,-7,-8,-9,-22,-23,-24,77,77,77,113,77,77,77,77,113,143,77,-52,147,-53,-54,113,113,160,113,31,113,174,-4,31,-142,113,202,-52,-53,-54,206,211,31,217,113,223,-121,229,31,113,113,113,113,113,113,113,113,113,113,113,206,-133,246,-135,31,77,258,260,-102,31,266,-129,-131,-132,-136,268,31,113,31,284,31,31,291,-134,31,113,31,-120,-122,303,113,-103,-104,31,113,-130,-107,-109,-112,-113,31,31,113,31,31,31,31,31,31,31,31,113,113,-105,-106,-108,]),'IMPORT':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[35,35,-3,35,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,35,-5,-6,-7,-8,-9,-22,-23,-24,35,-4,35,-142,35,-121,35,35,-102,35,-129,-131,-136,35,35,35,35,35,35,-120,-122,-103,-104,35,-130,-107,-109,-112,-113,35,35,35,35,35,35,35,35,35,35,-105,-106,-108,]),'IF':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[37,37,-3,37,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,37,-5,-6,-7,-8,-9,-22,-23,-24,37,-4,37,-142,37,-121,37,37,-102,37,-129,-131,-136,37,37,37,37,37,37,-120,-122,-103,-104,37,-130,-107,-109,-112,-113,37,37,37,37,37,37,37,37,37,37,-105,-106,-108,]),'WHILE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[38,38,-3,38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,38,-5,-6,-7,-8,-9,-22,-23,-24,38,-4,38,-142,38,-121,38,38,-102,38,-129,-131,-136,38,38,38,38,38,38,-120,-122,-103,-104,38,-130,-107,-109,-112,-113,38,38,38,38,38,38,38,38,38,38,-105,-106,-108,]),'FOR':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[39,39,-3,39,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,39,-5,-6,-7,-8,-9,-22,-23,-24,39,-4,39,-142,39,-121,39,39,-102,39,-129,-131,-136,39,39,39,39,39,39,-120,-122,-103,-104,39,-130,-107,-109,-112,-113,39,39,39,39,39,39,39,39,39,39,-105,-106,-108,]),'PRINT':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[40,40,-3,40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,40,-5,-6,-7,-8,-9,-22,-23,-24,40,-4,40,-142,40,-121,40,40,-102,40,-129,-131,-136,40,40,40,40,40,40,-120,-122,-103,-104,40,-130,-107,-109,-112,-113,40,40,40,40,40,40,40,40,40,40,-105,-106,-108,]),'CLASS':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[41,41,-3,41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,41,-5,-6,-7,-8,-9,-22,-23,-24,41,-4,41,-142,41,-121,41,41,-102,41,-129,-131,-136,41,41,41,41,41,41,-120,-122,-103,-104,41,-130,-107,-109,-112,-113,41,41,41,41,41,41,41,41,41,41,-105,-106,-108,]),'ENUM':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[42,42,-3,42,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,42,-5,-6,-7,-8,-9,-22,-23,-24,42,-4,42,-142,42,-121,42,42,-102,42,-129,-131,-136,42,42,42,42,42,42,-120,-122,-103,-104,42,-130,-107,-109,-112,-113,42,42,42,42,42,42,42,42,42,42,-105,-106,-108,]),'TRY':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[43,43,-3,43,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,43,-5,-6,-7,-8,-9,-22,-23,-24,43,-4,43,-142,43,-121,43,43,-102,43,-129,-131,-136,43,43,43,43,43,43,-120,-122,-103,-104,43,-130,-107,-109,-112,-113,43,43,43,43,43,43,43,43,43,43,-105,-106,-108,]),'SWITCH':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[44,44,-3,44,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,44,-5,-6,-7,-8,-9,-22,-23,-24,44,-4,44,-142,44,-121,44,44,-102,44,-129,-131,-136,44,44,44,44,44,44,-120,-122,-103,-104,44,-130,-107,-109,-112,-113,44,44,44,44,44,44,44,44,44,44,-105,-106,-108,]),'RETURN':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,119,144,152,168,180,191,220,231,240,243,244,247,251,254,263,264,269,273,277,278,287,288,293,301,309,310,311,312,313,314,320,321,322,323,324,330,331,332,338,339,340,],[45,45,-3,45,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,45,-5,-6,-7,-8,-9,-22,-23,-24,45,-4,45,-142,45,-121,45,45,-102,45,-129,-131,-136,45,45,45,45,45,45,-120,-122,-103,-104,45,-130,-107,-109,-112,-113,45,45,45,45,45,45,45,45,45,45,-105,-106,-108,]),'CONST':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,45,59,60,61,64,65,66,67,68,69,70,71,72,80,87,88,99,100,101,102,105,106,118,119,144,152,154,166,168,171,177,180,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[47,47,-3,47,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,47,-2,47,-5,-6,47,47,-7,-8,-9,-22,-23,-24,47,47,47,47,47,47,47,47,47,47,-4,47,-142,47,47,47,47,47,-121,47,47,47,47,47,47,47,47,47,47,47,47,47,-133,-135,47,-102,47,-129,-131,-132,-136,47,47,47,47,47,-134,47,47,47,-120,-122,47,-103,-104,47,47,-130,-107,-109,-112,-113,47,47,47,47,47,47,47,47,47,47,47,47,47,-105,-106,-108,]),'FINAL':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,45,59,60,61,64,65,66,67,68,69,70,71,72,80,87,88,99,100,101,102,105,106,118,119,144,152,154,166,168,171,177,180,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[48,48,-3,48,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,48,-2,48,-5,-6,48,48,-7,-8,-9,-22,-23,-24,48,48,48,48,48,48,48,48,48,48,-4,48,-142,48,48,48,48,48,-121,48,48,48,48,48,48,48,48,48,48,48,48,48,-133,-135,48,-102,48,-129,-131,-132,-136,48,48,48,48,48,-134,48,48,48,-120,-122,48,-103,-104,48,48,-130,-107,-109,-112,-113,48,48,48,48,48,48,48,48,48,48,48,48,48,-105,-106,-108,]),'LATE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,45,59,60,61,64,65,66,67,68,69,70,71,72,80,87,88,99,100,101,102,105,106,118,119,144,152,154,166,168,171,177,180,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[49,49,-3,49,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,49,-2,49,-5,-6,49,49,-7,-8,-9,-22,-23,-24,49,49,49,49,49,49,49,49,49,49,-4,49,-142,49,49,49,49,49,-121,49,49,49,49,49,49,49,49,49,49,49,49,49,-133,-135,49,-102,49,-129,-131,-132,-136,49,49,49,49,49,-134,49,49,49,-120,-122,49,-103,-104,49,49,-130,-107,-109,-112,-113,49,49,49,49,49,49,49,49,49,49,49,49,49,-105,-106,-108,]),'MINUS':([0,2,3,4,5,10,11,12,13,14,15,16,17,18,19,20,21,25,26,31,36,45,46,50,51,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,87,89,98,99,100,102,105,106,108,109,113,116,118,119,120,121,129,130,131,138,139,140,141,143,144,145,152,153,154,168,171,173,174,177,180,181,182,191,192,193,194,195,196,197,198,199,201,203,204,215,216,217,220,221,231,240,243,244,247,251,253,254,255,263,264,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[26,26,-3,26,63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,26,-86,26,26,-82,-84,-85,-2,26,-5,26,26,-6,26,26,-7,-8,-9,-22,-23,-24,26,26,26,-83,-86,26,26,26,26,26,26,26,63,26,26,26,26,26,-84,-85,-86,63,26,-4,-76,-77,-79,-80,-81,63,63,63,63,-91,26,63,-142,-87,26,26,26,63,-86,26,-121,-89,-88,26,26,26,26,26,26,26,26,26,26,26,26,-84,-85,-86,26,26,-102,26,-129,-131,-136,26,26,26,63,26,26,26,26,26,-120,-122,26,-103,-104,26,26,-130,-107,-109,-112,-113,26,26,26,26,26,26,26,26,26,26,26,26,26,-105,-106,-108,]),'INT':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,26,36,45,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,82,83,84,87,89,99,100,102,105,106,118,119,144,152,154,168,171,177,180,191,192,193,194,195,196,197,198,199,201,203,204,220,221,231,240,243,244,247,251,253,254,263,264,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[50,50,-3,50,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,50,50,108,-2,50,-5,50,50,-6,108,108,-7,-8,-9,-22,-23,-24,50,50,50,108,50,50,50,50,108,50,108,108,108,50,108,108,-4,50,-142,108,50,215,108,-121,50,108,108,108,108,108,108,108,108,108,108,108,50,50,-102,50,-129,-131,-136,50,108,50,50,50,50,108,50,-120,-122,108,-103,-104,50,108,-130,-107,-109,-112,-113,50,50,108,50,50,50,50,50,50,50,50,108,108,-105,-106,-108,]),'DOUBLE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,26,36,45,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,82,83,84,87,89,99,100,102,105,106,118,119,144,152,154,168,171,177,180,191,192,193,194,195,196,197,198,199,201,203,204,220,221,231,240,243,244,247,251,253,254,263,264,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[51,51,-3,51,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,51,51,109,-2,51,-5,51,51,-6,109,109,-7,-8,-9,-22,-23,-24,51,51,51,109,51,51,51,51,109,51,109,109,109,51,109,109,-4,51,-142,109,51,216,109,-121,51,109,109,109,109,109,109,109,109,109,109,109,51,51,-102,51,-129,-131,-136,51,109,51,51,51,51,109,51,-120,-122,109,-103,-104,51,109,-130,-107,-109,-112,-113,51,51,109,51,51,51,51,51,51,51,51,109,109,-105,-106,-108,]),'LPARENTHESIS':([0,2,3,4,6,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,31,36,37,38,39,40,44,45,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,87,89,92,99,100,102,105,106,113,117,118,119,124,143,144,147,152,154,168,171,174,177,180,190,191,192,193,194,195,196,197,198,199,201,203,204,206,217,220,221,224,231,240,243,244,246,247,251,252,253,254,263,264,269,272,273,277,278,279,285,286,287,288,293,299,300,301,302,304,309,310,311,312,313,314,317,318,319,320,321,322,323,324,325,330,331,332,335,336,337,338,339,340,],[36,36,-3,36,66,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,36,-25,-26,87,36,99,100,101,102,106,118,-2,36,-5,36,36,-6,118,118,-7,-8,-9,-22,-23,-24,36,36,36,-29,118,36,36,36,36,118,36,-28,154,154,118,36,118,87,66,171,-4,66,87,36,-27,-142,154,36,171,87,118,-121,66,36,154,154,118,118,118,118,118,118,154,118,118,87,87,36,36,257,-102,36,-129,-131,-29,-136,36,-32,118,36,36,36,36,118,36,-120,-122,-30,-35,118,-103,-104,36,-57,118,-130,-31,-36,-107,-109,-112,-113,36,36,-33,118,-37,36,36,36,36,36,-34,36,36,36,-61,118,154,-105,-106,-108,]),'INT_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[52,52,-3,52,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,52,52,-44,-45,-46,-2,52,-5,-6,52,52,-7,-8,-9,-22,-23,-24,52,52,52,52,52,52,52,52,52,52,52,52,52,-4,52,52,52,52,52,-142,52,52,52,52,52,-121,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-133,-135,52,52,-102,52,-129,-131,-132,-136,52,52,52,52,52,-134,52,52,52,-120,-122,52,-103,-104,52,52,-130,-107,-109,-112,-113,52,52,52,52,52,52,52,52,52,52,52,52,52,-105,-106,-108,]),'STRING_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[53,53,-3,53,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,53,53,-44,-45,-46,-2,53,-5,-6,53,53,-7,-8,-9,-22,-23,-24,53,53,53,53,53,53,53,53,53,53,53,53,53,-4,53,53,53,53,53,-142,53,53,53,53,53,-121,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-133,-135,53,53,-102,53,-129,-131,-132,-136,53,53,53,53,53,-134,53,53,53,-120,-122,53,-103,-104,53,53,-130,-107,-109,-112,-113,53,53,53,53,53,53,53,53,53,53,53,53,53,-105,-106,-108,]),'NUM_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[54,54,-3,54,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,54,54,-44,-45,-46,-2,54,-5,-6,54,54,-7,-8,-9,-22,-23,-24,54,54,54,54,54,54,54,54,54,54,54,54,54,-4,54,54,54,54,54,-142,54,54,54,54,54,-121,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-133,-135,54,54,-102,54,-129,-131,-132,-136,54,54,54,54,54,-134,54,54,54,-120,-122,54,-103,-104,54,54,-130,-107,-109,-112,-113,54,54,54,54,54,54,54,54,54,54,54,54,54,-105,-106,-108,]),'DOUBLE_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[55,55,-3,55,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,55,55,-44,-45,-46,-2,55,-5,-6,55,55,-7,-8,-9,-22,-23,-24,55,55,55,55,55,55,55,55,55,55,55,55,55,-4,55,55,55,55,55,-142,55,55,55,55,55,-121,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-133,-135,55,55,-102,55,-129,-131,-132,-136,55,55,55,55,55,-134,55,55,55,-120,-122,55,-103,-104,55,55,-130,-107,-109,-112,-113,55,55,55,55,55,55,55,55,55,55,55,55,55,-105,-106,-108,]),'BOOL_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[56,56,-3,56,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,56,56,-44,-45,-46,-2,56,-5,-6,56,56,-7,-8,-9,-22,-23,-24,56,56,56,56,56,56,56,56,56,56,56,56,56,-4,56,56,56,56,56,-142,56,56,56,56,56,-121,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-133,-135,56,56,-102,56,-129,-131,-132,-136,56,56,56,56,56,-134,56,56,56,-120,-122,56,-103,-104,56,56,-130,-107,-109,-112,-113,56,56,56,56,56,56,56,56,56,56,56,56,56,-105,-106,-108,]),'VAR':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[57,57,-3,57,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,57,57,-44,-45,-46,-2,57,-5,-6,57,57,-7,-8,-9,-22,-23,-24,57,57,57,57,57,57,57,57,57,57,57,57,57,-4,57,57,57,57,57,-142,57,57,57,57,57,-121,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-133,-135,57,57,-102,57,-129,-131,-132,-136,57,57,57,57,57,-134,57,57,57,-120,-122,57,-103,-104,57,57,-130,-107,-109,-112,-113,57,57,57,57,57,57,57,57,57,57,57,57,57,-105,-106,-108,]),'VOID':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,118,119,122,144,146,148,149,152,154,166,168,171,177,180,186,191,192,193,194,195,196,197,198,199,201,203,204,207,208,210,220,226,231,240,243,244,245,247,251,253,254,263,264,267,269,272,273,277,278,286,287,288,293,300,301,309,310,311,312,313,314,318,320,321,322,323,324,330,331,332,336,337,338,339,340,],[58,58,-3,58,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,58,58,-44,-45,-46,-2,58,-5,-6,58,58,-7,-8,-9,-22,-23,-24,58,58,58,58,58,58,58,58,58,58,58,58,58,-4,58,58,58,58,58,-142,58,58,58,58,58,-121,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-133,-135,58,58,-102,58,-129,-131,-132,-136,58,58,58,58,58,-134,58,58,58,-120,-122,58,-103,-104,58,58,-130,-107,-109,-112,-113,58,58,58,58,58,58,58,58,58,58,58,58,58,-105,-106,-108,]),'$end':([0,1,2,3,10,11,12,13,14,15,16,17,18,19,20,21,59,61,64,67,68,69,70,71,72,119,152,180,191,231,243,244,247,263,277,278,287,288,301,309,311,312,338,339,340,],[-143,0,-1,-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-22,-23,-24,-4,-142,-121,-143,-102,-129,-131,-136,-143,-120,-122,-103,-104,-130,-107,-112,-113,-105,-106,-108,]),'RBRACE':([3,4,10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,59,60,61,64,67,68,69,70,71,72,76,77,105,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,152,153,156,168,180,181,182,191,207,208,210,211,212,220,230,231,232,233,234,235,236,237,238,239,240,243,244,245,247,251,254,263,264,267,268,269,273,275,276,277,278,286,287,288,293,294,298,301,306,309,310,311,312,313,315,318,320,321,322,323,326,327,328,330,331,332,338,339,340,341,342,343,],[-3,-143,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-2,119,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-143,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,-101,213,-121,-89,-88,-143,244,-133,-135,-138,247,-143,-100,-102,-98,-99,-92,-93,-94,-95,-96,-97,-143,-129,-131,-132,-136,-143,277,-143,288,-134,-137,-143,298,-59,-60,-120,-122,-143,-103,-104,311,312,-128,-130,319,-107,-109,-112,-113,-143,-58,-143,-143,-143,-143,-119,335,-63,-64,338,339,340,-105,-106,-108,-62,-65,-66,]),'SEMICOLON':([3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,45,46,50,51,59,61,64,67,68,69,70,71,72,76,77,79,85,86,92,97,107,108,109,110,111,112,113,114,115,116,119,120,121,123,129,130,131,136,138,139,140,141,143,144,147,152,153,156,158,180,181,182,191,205,230,231,232,233,234,235,236,237,238,239,241,243,244,246,247,252,255,263,277,278,279,280,285,287,288,298,299,301,302,304,309,311,312,314,317,319,324,325,333,335,338,339,340,],[-3,61,64,67,68,69,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,70,71,72,-78,-25,-26,-86,-141,-82,-84,-85,-2,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-29,-110,-111,-28,152,-140,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-38,-79,-80,-81,-39,-40,-41,-42,-43,-91,-90,-27,-142,-87,-101,201,-121,-89,-88,-143,243,-100,-102,-98,-99,-92,-93,-94,-95,-96,-97,265,-129,-131,267,-136,-32,278,-143,-120,-122,-30,301,-35,-103,-104,-128,-57,-130,-31,-36,-107,-112,-113,-143,-33,-37,334,-34,72,-61,-105,-106,-108,]),'DEFAULT':([3,10,11,12,13,14,15,16,17,18,19,20,21,59,61,64,67,68,69,70,71,72,119,152,180,191,231,243,244,247,263,270,271,277,278,287,288,295,301,309,311,312,314,324,333,334,338,339,340,],[-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-22,-23,-24,-4,-142,-121,-143,-102,-129,-131,-136,-143,296,-115,-120,-122,-103,-104,-114,-130,-107,-112,-113,-143,-118,-116,-117,-105,-106,-108,]),'CASE':([3,10,11,12,13,14,15,16,17,18,19,20,21,59,61,64,67,68,69,70,71,72,119,152,180,191,231,243,244,247,250,263,270,271,277,278,287,288,295,301,309,311,312,314,324,333,334,338,339,340,],[-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-22,-23,-24,-4,-142,-121,-143,-102,-129,-131,-136,272,-143,272,-115,-120,-122,-103,-104,-114,-130,-107,-112,-113,-143,-118,-116,-117,-105,-106,-108,]),'PLUS':([5,10,11,12,13,14,15,16,17,18,19,20,21,25,31,46,50,51,61,64,67,68,69,70,71,72,76,77,98,108,109,113,116,119,120,121,129,130,131,138,139,140,141,143,144,145,152,153,173,174,180,181,182,191,215,216,217,231,243,244,247,255,263,277,278,287,288,301,309,311,312,338,339,340,],[62,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-86,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,62,-84,-85,-86,62,-4,-76,-77,-79,-80,-81,62,62,62,62,-91,-90,62,-142,-87,62,-86,-121,-89,-88,-143,-84,-85,-86,-102,-129,-131,-136,62,-143,-120,-122,-103,-104,-130,-107,-112,-113,-105,-106,-108,]),'ASSIGN_OPERATOR':([6,27,28,31,79,92,117,124,147,160,161,190,202,223,229,246,252,258,260,279,284,285,299,302,303,304,317,319,325,335,],[65,-25,-26,80,-29,-28,170,170,-27,203,204,170,-29,256,262,-29,-32,281,283,-30,305,-35,-57,-31,316,-36,-33,-37,-34,-61,]),'TIMES':([10,11,12,13,14,15,16,17,18,19,20,21,25,31,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,113,119,120,121,129,130,131,143,144,152,153,174,180,181,182,191,215,216,217,231,243,244,247,263,277,278,287,288,301,309,311,312,338,339,340,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,73,-86,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-84,-85,-86,-4,73,73,-79,-80,-81,-91,-90,-142,-87,-86,-121,-89,-88,-143,-84,-85,-86,-102,-129,-131,-136,-143,-120,-122,-103,-104,-130,-107,-112,-113,-105,-106,-108,]),'DIVIDE':([10,11,12,13,14,15,16,17,18,19,20,21,25,31,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,113,119,120,121,129,130,131,143,144,152,153,174,180,181,182,191,215,216,217,231,243,244,247,263,277,278,287,288,301,309,311,312,338,339,340,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,74,-86,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-84,-85,-86,-4,74,74,-79,-80,-81,-91,-90,-142,-87,-86,-121,-89,-88,-143,-84,-85,-86,-102,-129,-131,-136,-143,-120,-122,-103,-104,-130,-107,-112,-113,-105,-106,-108,]),'MODULE':([10,11,12,13,14,15,16,17,18,19,20,21,25,31,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,113,119,120,121,129,130,131,143,144,152,153,174,180,181,182,191,215,216,217,231,243,244,247,263,277,278,287,288,301,309,311,312,338,339,340,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,75,-86,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-84,-85,-86,-4,75,75,-79,-80,-81,-91,-90,-142,-87,-86,-121,-89,-88,-143,-84,-85,-86,-102,-129,-131,-136,-143,-120,-122,-103,-104,-130,-107,-112,-113,-105,-106,-108,]),'RPARENTHESIS':([10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,46,50,51,61,64,66,67,68,69,70,71,72,76,77,79,85,86,87,92,98,108,109,110,111,112,113,114,115,116,118,119,120,121,124,125,126,127,128,129,130,131,142,143,144,147,152,153,154,155,156,157,165,169,171,172,173,174,180,181,182,188,189,190,191,215,216,217,222,230,231,232,233,234,235,236,237,238,239,243,244,247,252,257,263,266,277,278,279,285,287,288,289,290,298,299,301,302,304,309,311,312,317,319,325,335,338,339,340,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-25,-26,-82,-84,-85,-5,-6,-143,-7,-8,-9,-22,-23,-24,-83,-86,-29,-110,-111,-143,-28,153,-67,-68,-69,-70,-71,-72,-73,-74,-75,-143,-4,-76,-77,-126,176,-124,-125,-127,-79,-80,-81,180,-91,-90,-27,-142,-87,-143,191,-101,200,205,214,-143,218,153,-72,-121,-89,-88,230,-101,-126,-143,-67,-68,-72,-123,-100,-102,-98,-99,-92,-93,-94,-95,-96,-97,-129,-131,-136,-32,280,-143,292,-120,-122,-30,-35,-103,-104,307,308,-128,-57,-130,-31,-36,-107,-112,-113,-33,-37,-34,-61,-105,-106,-108,]),'COMMA':([10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,46,50,51,52,53,54,55,56,57,58,61,64,66,67,68,69,70,71,72,76,77,79,87,92,108,109,110,111,112,113,114,115,116,118,119,120,121,124,125,126,127,128,129,130,131,132,134,135,142,143,144,147,150,152,153,154,156,171,172,173,174,180,181,182,184,189,190,191,211,212,215,216,217,222,230,231,232,233,234,235,236,237,238,239,243,244,247,252,253,263,268,274,275,276,277,278,279,285,286,287,288,298,299,301,302,304,306,309,311,312,315,317,318,319,325,326,327,328,335,338,339,340,341,342,343,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-25,-26,-82,-84,-85,-47,-48,-49,-50,-51,-55,-56,-5,-6,-143,-7,-8,-9,-22,-23,-24,-83,-86,-29,-143,-28,-67,-68,-69,-70,-71,-72,-73,-74,-75,-143,-4,-76,-77,-126,177,-124,-125,-127,-79,-80,-81,-52,-53,-54,177,-91,-90,-27,186,-142,-87,-143,-101,-143,177,-75,-72,-121,-89,-88,226,-127,-126,-143,-138,248,-67,-68,-72,-123,-100,-102,-98,-99,-92,-93,-94,-95,-96,-97,-129,-131,-136,-32,-143,-143,-137,300,-59,-60,-120,-122,-30,-35,-143,-103,-104,-128,-57,-130,-31,-36,300,-107,-112,-113,-58,-33,-143,-37,-34,336,-63,-64,-61,-105,-106,-108,-62,-65,-66,]),'RBRACKET':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,145,152,153,180,181,182,191,231,243,244,247,253,263,274,275,276,277,278,287,288,298,301,309,311,312,315,338,339,340,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,182,-142,-87,-121,-89,-88,-143,-102,-129,-131,-136,-143,-143,299,-59,-60,-120,-122,-103,-104,-128,-130,-107,-112,-113,-58,-105,-106,-108,]),'EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,152,153,156,173,180,181,182,189,191,231,243,244,247,263,277,278,287,288,298,301,309,311,312,338,339,340,342,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,194,-75,-121,-89,-88,194,-143,-102,-129,-131,-136,-143,-120,-122,-103,-104,-128,-130,-107,-112,-113,-105,-106,-108,194,]),'NOT_EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,152,153,156,173,180,181,182,189,191,231,243,244,247,263,277,278,287,288,298,301,309,311,312,338,339,340,342,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,195,-75,-121,-89,-88,195,-143,-102,-129,-131,-136,-143,-120,-122,-103,-104,-128,-130,-107,-112,-113,-105,-106,-108,195,]),'GREATER_THAN':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,52,53,54,55,56,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,132,133,134,135,143,144,151,152,153,156,173,175,180,181,182,183,185,189,191,228,231,243,244,247,259,263,277,278,287,288,298,301,309,311,312,338,339,340,342,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-47,-48,-49,-50,-51,-55,-56,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-52,178,-53,-54,-91,-90,187,-142,-87,196,-75,219,-121,-89,-88,225,227,196,-143,261,-102,-129,-131,-136,282,-143,-120,-122,-103,-104,-128,-130,-107,-112,-113,-105,-106,-108,196,]),'LESS_THAN':([10,11,12,13,14,15,16,17,18,19,20,21,25,29,33,34,46,50,51,61,64,65,67,68,69,70,71,72,76,77,90,93,94,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,152,153,156,162,163,164,170,173,180,181,182,189,191,204,231,243,244,247,263,277,278,287,288,298,301,309,311,312,338,339,340,342,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,78,95,96,-82,-84,-85,-5,-6,122,-7,-8,-9,-22,-23,-24,-83,-86,146,148,149,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,197,78,95,96,122,-75,-121,-89,-88,197,-143,122,-102,-129,-131,-136,-143,-120,-122,-103,-104,-128,-130,-107,-112,-113,-105,-106,-108,197,]),'GREATER_THAN_OR_EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,152,153,156,173,180,181,182,189,191,231,243,244,247,263,277,278,287,288,298,301,309,311,312,338,339,340,342,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,198,-75,-121,-89,-88,198,-143,-102,-129,-131,-136,-143,-120,-122,-103,-104,-128,-130,-107,-112,-113,-105,-106,-108,198,]),'LESS_THAN_OR_EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,152,153,156,173,180,181,182,189,191,231,243,244,247,263,277,278,287,288,298,301,309,311,312,338,339,340,342,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,199,-75,-121,-89,-88,199,-143,-102,-129,-131,-136,-143,-120,-122,-103,-104,-128,-130,-107,-112,-113,-105,-106,-108,199,]),'AND':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,152,153,155,156,157,173,180,181,182,188,189,191,230,231,232,233,234,235,236,237,238,239,241,243,244,247,263,277,278,287,288,298,301,309,311,312,338,339,340,342,343,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,192,-101,192,-75,-121,-89,-88,192,-101,-143,-100,-102,192,192,-92,-93,-94,-95,-96,-97,192,-129,-131,-136,-143,-120,-122,-103,-104,-128,-130,-107,-112,-113,-105,-106,-108,-101,192,]),'OR':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,152,153,155,156,157,173,180,181,182,188,189,191,230,231,232,233,234,235,236,237,238,239,241,243,244,247,263,277,278,287,288,298,301,309,311,312,338,339,340,342,343,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,193,-101,193,-75,-121,-89,-88,193,-101,-143,-100,-102,193,193,-92,-93,-94,-95,-96,-97,193,-129,-131,-136,-143,-120,-122,-103,-104,-128,-130,-107,-112,-113,-105,-106,-108,-101,193,]),'COLON':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,119,120,121,129,130,131,143,144,152,153,180,181,182,191,231,243,244,247,263,277,278,287,288,296,297,298,301,309,311,312,329,338,339,340,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,-121,-89,-88,-143,-102,-129,-131,-136,-143,-120,-122,-103,-104,313,314,-128,-130,-107,-112,-113,337,-105,-106,-108,]),'ELSE':([10,11,12,13,14,15,16,17,18,19,20,21,61,64,67,68,69,70,71,72,119,152,180,191,231,243,244,247,263,277,278,287,288,301,309,311,312,338,339,340,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-8,-9,-22,-23,-24,-4,-142,-121,-143,263,-129,-131,-136,-143,-120,-122,-103,-104,-130,-107,-112,-113,-105,-106,-108,]),'PLUS_EQUALS':([31,160,],[81,81,]),'MINUS_EQUALS':([31,160,],[82,82,]),'TIMES_EQUALS':([31,160,],[83,83,]),'DIVIDE_EQUALS':([31,160,],[84,84,]),'INCREMENT':([31,291,],[85,85,]),'DECREMENT':([31,291,],[86,86,]),'LBRACKET':([31,77,113,174,217,219,256,281,],[89,89,89,89,89,253,253,253,]),'DOT':([31,77,113,137,174,217,],[88,88,88,179,88,88,]),'STRING':([35,45,65,66,80,87,99,100,102,106,118,154,171,177,192,193,194,195,196,197,198,199,201,203,204,253,272,286,300,318,336,337,],[97,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'BOOL':([45,65,66,80,87,99,100,102,106,118,154,171,177,192,193,194,195,196,197,198,199,201,203,204,253,272,286,300,318,336,337,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'NULL':([45,65,66,80,87,99,100,102,106,118,154,171,177,192,193,194,195,196,197,198,199,201,203,204,253,272,286,300,318,336,337,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'STDIN':([80,],[137,]),'ARROW':([176,],[221,]),'READ':([179,],[224,]),'IN':([202,],[242,]),'FINALLY':([213,],[249,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,4,105,220,240,251,269,313,314,320,321,322,],[2,60,168,254,264,273,293,323,324,330,331,332,]),'statement':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[3,59,3,59,3,181,59,231,3,3,3,59,287,59,3,59,59,3,3,3,3,3,59,59,59,59,59,]),'expression':([0,2,4,36,45,60,65,66,80,81,82,83,84,87,89,99,100,102,105,106,118,144,154,168,171,177,191,192,193,194,195,196,197,198,199,201,203,204,220,221,240,251,253,254,263,264,269,272,273,286,293,300,313,314,318,320,321,322,323,324,330,331,332,336,337,],[5,5,5,98,116,5,116,116,116,138,139,140,141,116,145,116,116,116,5,116,173,5,173,5,173,116,5,116,116,116,116,116,116,116,116,116,116,116,5,255,5,5,116,5,5,5,5,116,5,116,5,116,5,5,116,5,5,5,5,5,5,5,5,116,116,]),'declaration':([0,2,4,45,60,65,66,80,87,88,99,100,101,102,105,106,118,144,154,166,168,171,177,191,192,193,194,195,196,197,198,199,201,203,204,207,220,240,251,253,254,263,264,269,272,273,286,293,300,313,314,318,320,321,322,323,324,330,331,332,336,337,],[6,6,6,117,6,117,124,117,124,117,117,117,161,117,6,117,124,6,190,117,6,124,124,6,117,117,117,117,117,117,117,117,117,117,117,117,6,6,6,117,6,6,6,6,117,6,117,6,117,6,6,117,6,6,6,6,6,6,6,6,117,117,]),'assignation':([0,2,4,60,101,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[7,7,7,7,158,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'increment':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,265,269,273,293,313,314,320,321,322,323,324,330,331,332,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,289,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'decrement':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,265,269,273,293,313,314,320,321,322,323,324,330,331,332,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,290,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'import':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,4,45,60,65,66,80,87,88,99,100,102,105,106,118,144,154,166,168,171,177,191,192,193,194,195,196,197,198,199,201,203,204,207,220,240,251,253,254,263,264,269,272,273,286,293,300,313,314,318,320,321,322,323,324,330,331,332,336,337,],[11,11,11,114,11,114,114,114,114,144,114,114,114,11,114,114,11,114,210,11,114,114,11,114,114,114,114,114,114,114,114,114,114,114,210,11,11,11,114,11,11,11,11,114,11,114,11,114,11,11,114,11,11,11,11,11,11,11,11,114,114,]),'if':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'for':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'print':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'input':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'class_def':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'enum':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'empty':([0,2,4,60,66,87,105,118,144,154,168,171,191,220,240,251,253,254,263,264,269,273,286,293,313,314,318,320,321,322,323,324,330,331,332,],[21,21,21,21,127,127,21,127,21,127,21,127,21,21,21,21,276,21,21,21,21,21,276,21,21,21,328,21,21,21,21,21,21,21,21,]),'return':([0,2,4,60,105,144,168,191,220,240,251,254,263,264,269,273,293,313,314,320,321,322,323,324,330,331,332,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'term':([0,2,4,36,45,60,62,63,65,66,80,81,82,83,84,87,89,99,100,102,105,106,118,144,154,168,171,177,191,192,193,194,195,196,197,198,199,201,203,204,220,221,240,251,253,254,263,264,269,272,273,286,293,300,313,314,318,320,321,322,323,324,330,331,332,336,337,],[25,25,25,25,25,25,120,121,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'declaration_with_modifier':([0,2,4,45,60,65,66,80,87,88,99,100,101,102,105,106,118,144,154,166,168,171,177,191,192,193,194,195,196,197,198,199,201,203,204,207,220,240,251,253,254,263,264,269,272,273,286,293,300,313,314,318,320,321,322,323,324,330,331,332,336,337,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'declaration_without_modifier':([0,2,4,45,60,65,66,80,87,88,99,100,101,102,105,106,118,144,154,166,168,171,177,191,192,193,194,195,196,197,198,199,201,203,204,207,220,240,251,253,254,263,264,269,272,273,286,293,300,313,314,318,320,321,322,323,324,330,331,332,336,337,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'varType':([0,2,4,32,45,60,65,66,78,80,87,88,95,96,99,100,101,102,105,106,118,122,144,146,148,149,154,166,168,171,177,186,191,192,193,194,195,196,197,198,199,201,203,204,207,220,226,240,251,253,254,263,264,269,272,273,286,293,300,313,314,318,320,321,322,323,324,330,331,332,336,337,],[30,30,30,91,30,30,30,30,133,30,30,30,150,151,30,30,159,30,30,30,30,175,30,183,184,185,30,209,30,30,30,228,30,30,30,30,30,30,30,30,30,30,30,30,209,30,259,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'declaration_modifier':([0,2,4,45,60,65,66,80,87,88,99,100,101,102,105,106,118,144,154,166,168,171,177,191,192,193,194,195,196,197,198,199,201,203,204,207,220,240,251,253,254,263,264,269,272,273,286,293,300,313,314,318,320,321,322,323,324,330,331,332,336,337,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'factor':([0,2,4,26,36,45,60,62,63,65,66,73,74,75,80,81,82,83,84,87,89,99,100,102,105,106,118,144,154,168,171,177,191,192,193,194,195,196,197,198,199,201,203,204,220,221,240,251,253,254,263,264,269,272,273,286,293,300,313,314,318,320,321,322,323,324,330,331,332,336,337,],[46,46,46,76,46,46,46,46,46,46,46,129,130,131,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'variable':([45,65,66,80,87,99,100,102,106,118,154,171,177,192,193,194,195,196,197,198,199,201,203,204,253,272,286,300,318,336,337,],[107,123,128,136,128,156,156,165,169,128,189,128,128,156,156,234,235,236,237,238,239,156,136,123,275,297,275,315,329,329,342,]),'lambda':([45,65,66,80,87,99,100,102,106,118,154,171,177,192,193,194,195,196,197,198,199,201,203,204,253,272,286,300,318,336,337,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'parameters':([66,87,118,154,171,],[125,142,172,172,172,]),'parameter':([66,87,118,154,171,177,],[126,126,126,126,126,222,]),'booleanExpression':([99,100,154,192,193,201,337,],[155,157,188,232,233,241,343,]),'class_members':([166,],[207,]),'class_member':([166,207,],[208,245,]),'enum_values':([167,],[212,]),'list_literal':([219,256,281,],[252,279,302,]),'cases':([250,],[270,]),'case':([250,270,],[271,295,]),'list_elements':([253,286,],[274,306,]),'set_literal':([262,283,],[285,304,]),'default_case':([270,],[294,]),'for_in_block':([292,],[309,]),'map_literal':([305,316,],[317,325,]),'for_in_scope':([310,],[322,]),'map_elements':([318,],[326,]),'map_pair':([318,336,],[327,341,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analizadorSintax.py',18),
  ('statements -> statements statement','statements',2,'p_statements','analizadorSintax.py',22),
  ('statements -> statement','statements',1,'p_statements','analizadorSintax.py',23),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_statement_block','analizadorSintax.py',30),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','analizadorSintax.py',34),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement','analizadorSintax.py',35),
  ('statement -> assignation SEMICOLON','statement',2,'p_statement','analizadorSintax.py',36),
  ('statement -> increment SEMICOLON','statement',2,'p_statement','analizadorSintax.py',37),
  ('statement -> decrement SEMICOLON','statement',2,'p_statement','analizadorSintax.py',38),
  ('statement -> import','statement',1,'p_statement','analizadorSintax.py',39),
  ('statement -> function','statement',1,'p_statement','analizadorSintax.py',40),
  ('statement -> if','statement',1,'p_statement','analizadorSintax.py',41),
  ('statement -> while','statement',1,'p_statement','analizadorSintax.py',42),
  ('statement -> for','statement',1,'p_statement','analizadorSintax.py',43),
  ('statement -> print','statement',1,'p_statement','analizadorSintax.py',44),
  ('statement -> input','statement',1,'p_statement','analizadorSintax.py',45),
  ('statement -> class_def','statement',1,'p_statement','analizadorSintax.py',46),
  ('statement -> enum','statement',1,'p_statement','analizadorSintax.py',47),
  ('statement -> try','statement',1,'p_statement','analizadorSintax.py',48),
  ('statement -> switch','statement',1,'p_statement','analizadorSintax.py',49),
  ('statement -> empty','statement',1,'p_statement','analizadorSintax.py',50),
  ('statement -> return SEMICOLON','statement',2,'p_statement','analizadorSintax.py',51),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement','analizadorSintax.py',52),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','analizadorSintax.py',53),
  ('declaration -> declaration_with_modifier','declaration',1,'p_declaration','analizadorSintax.py',57),
  ('declaration -> declaration_without_modifier','declaration',1,'p_declaration','analizadorSintax.py',58),
  ('declaration_with_modifier -> declaration_modifier varType ID','declaration_with_modifier',3,'p_declaration_with_modifier','analizadorSintax.py',62),
  ('declaration_with_modifier -> declaration_modifier ID','declaration_with_modifier',2,'p_declaration_with_modifier','analizadorSintax.py',63),
  ('declaration_without_modifier -> varType ID','declaration_without_modifier',2,'p_declaration_without_modifier','analizadorSintax.py',76),
  ('declaration -> LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal','declaration',7,'p_declaration_list_init','analizadorSintax.py',81),
  ('declaration -> declaration_modifier LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal','declaration',8,'p_declaration_list_init','analizadorSintax.py',82),
  ('declaration -> declaration ASSIGN_OPERATOR LESS_THAN varType GREATER_THAN list_literal','declaration',6,'p_declaration_other_list_init','analizadorSintax.py',117),
  ('declaration -> MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal','declaration',9,'p_declaration_map_init','analizadorSintax.py',121),
  ('declaration -> declaration_modifier MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal','declaration',10,'p_declaration_map_init','analizadorSintax.py',122),
  ('declaration -> SET_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR set_literal','declaration',7,'p_declaration_set_init','analizadorSintax.py',152),
  ('declaration -> declaration_modifier SET_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR set_literal','declaration',8,'p_declaration_set_init','analizadorSintax.py',153),
  ('set_literal -> LBRACE list_elements RBRACE','set_literal',3,'p_set_literal','analizadorSintax.py',180),
  ('assignation -> declaration ASSIGN_OPERATOR variable','assignation',3,'p_assignation','analizadorSintax.py',184),
  ('assignation -> ID ASSIGN_OPERATOR variable','assignation',3,'p_assignation_no_type','analizadorSintax.py',211),
  ('assignation -> ID PLUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',216),
  ('assignation -> ID MINUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',217),
  ('assignation -> ID TIMES_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',218),
  ('assignation -> ID DIVIDE_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',219),
  ('declaration_modifier -> CONST','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',223),
  ('declaration_modifier -> FINAL','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',224),
  ('declaration_modifier -> LATE','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',225),
  ('varType -> INT_TYPE','varType',1,'p_varType','analizadorSintax.py',229),
  ('varType -> STRING_TYPE','varType',1,'p_varType','analizadorSintax.py',230),
  ('varType -> NUM_TYPE','varType',1,'p_varType','analizadorSintax.py',231),
  ('varType -> DOUBLE_TYPE','varType',1,'p_varType','analizadorSintax.py',232),
  ('varType -> BOOL_TYPE','varType',1,'p_varType','analizadorSintax.py',233),
  ('varType -> LIST_TYPE','varType',1,'p_varType','analizadorSintax.py',234),
  ('varType -> MAP_TYPE','varType',1,'p_varType','analizadorSintax.py',235),
  ('varType -> SET_TYPE','varType',1,'p_varType','analizadorSintax.py',236),
  ('varType -> VAR','varType',1,'p_varType','analizadorSintax.py',237),
  ('varType -> VOID','varType',1,'p_varType','analizadorSintax.py',238),
  ('list_literal -> LBRACKET list_elements RBRACKET','list_literal',3,'p_list_literal','analizadorSintax.py',242),
  ('list_elements -> list_elements COMMA variable','list_elements',3,'p_list_elements','analizadorSintax.py',246),
  ('list_elements -> variable','list_elements',1,'p_list_elements','analizadorSintax.py',247),
  ('list_elements -> empty','list_elements',1,'p_list_elements','analizadorSintax.py',248),
  ('map_literal -> LBRACE map_elements RBRACE','map_literal',3,'p_map_literal','analizadorSintax.py',257),
  ('map_elements -> map_elements COMMA map_pair','map_elements',3,'p_map_elements','analizadorSintax.py',261),
  ('map_elements -> map_pair','map_elements',1,'p_map_elements','analizadorSintax.py',262),
  ('map_elements -> empty','map_elements',1,'p_map_elements','analizadorSintax.py',263),
  ('map_pair -> variable COLON variable','map_pair',3,'p_map_pair','analizadorSintax.py',272),
  ('map_pair -> variable COLON booleanExpression','map_pair',3,'p_map_pair','analizadorSintax.py',273),
  ('variable -> INT','variable',1,'p_variable','analizadorSintax.py',277),
  ('variable -> DOUBLE','variable',1,'p_variable','analizadorSintax.py',278),
  ('variable -> STRING','variable',1,'p_variable','analizadorSintax.py',279),
  ('variable -> BOOL','variable',1,'p_variable','analizadorSintax.py',280),
  ('variable -> NULL','variable',1,'p_variable','analizadorSintax.py',281),
  ('variable -> ID','variable',1,'p_variable','analizadorSintax.py',282),
  ('variable -> function','variable',1,'p_variable','analizadorSintax.py',283),
  ('variable -> lambda','variable',1,'p_variable','analizadorSintax.py',284),
  ('variable -> expression','variable',1,'p_variable','analizadorSintax.py',285),
  ('expression -> expression PLUS term','expression',3,'p_expression_operations','analizadorSintax.py',301),
  ('expression -> expression MINUS term','expression',3,'p_expression_operations','analizadorSintax.py',302),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintax.py',306),
  ('term -> term TIMES factor','term',3,'p_term_operations','analizadorSintax.py',310),
  ('term -> term DIVIDE factor','term',3,'p_term_operations','analizadorSintax.py',311),
  ('term -> term MODULE factor','term',3,'p_term_operations','analizadorSintax.py',312),
  ('term -> factor','term',1,'p_term_factor','analizadorSintax.py',316),
  ('factor -> MINUS factor','factor',2,'p_factor_unary_minus','analizadorSintax.py',320),
  ('factor -> INT','factor',1,'p_factor_numeric','analizadorSintax.py',324),
  ('factor -> DOUBLE','factor',1,'p_factor_numeric','analizadorSintax.py',325),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintax.py',332),
  ('factor -> LPARENTHESIS expression RPARENTHESIS','factor',3,'p_factor_parens','analizadorSintax.py',336),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_variable_array_access','analizadorSintax.py',340),
  ('factor -> ID DOT function statement','factor',4,'p_variable_member_access','analizadorSintax.py',344),
  ('factor -> ID DOT function','factor',3,'p_variable_member_access','analizadorSintax.py',345),
  ('factor -> ID DOT ID','factor',3,'p_variable_member_access','analizadorSintax.py',346),
  ('booleanExpression -> variable EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',353),
  ('booleanExpression -> variable NOT_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',354),
  ('booleanExpression -> variable GREATER_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',355),
  ('booleanExpression -> variable LESS_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',356),
  ('booleanExpression -> variable GREATER_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',357),
  ('booleanExpression -> variable LESS_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',358),
  ('booleanExpression -> booleanExpression AND booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',362),
  ('booleanExpression -> booleanExpression OR booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',363),
  ('booleanExpression -> LPARENTHESIS booleanExpression RPARENTHESIS','booleanExpression',3,'p_boolean_expression_paren','analizadorSintax.py',373),
  ('booleanExpression -> variable','booleanExpression',1,'p_boolean_expression_variable','analizadorSintax.py',377),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement','if',5,'p_if','analizadorSintax.py',387),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statement','if',7,'p_if_else','analizadorSintax.py',395),
  ('while -> WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACE','while',7,'p_while','analizadorSintax.py',403),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',411),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',412),
  ('for -> FOR LPARENTHESIS varType ID IN ID RPARENTHESIS for_in_block','for',8,'p_for_in','analizadorSintax.py',420),
  ('for_in_block -> LBRACE for_in_scope statements RBRACE','for_in_block',4,'p_for_in_block','analizadorSintax.py',435),
  ('for_in_scope -> <empty>','for_in_scope',0,'p_for_in_scope','analizadorSintax.py',440),
  ('increment -> ID INCREMENT','increment',2,'p_increment','analizadorSintax.py',447),
  ('decrement -> ID DECREMENT','decrement',2,'p_decrement','analizadorSintax.py',451),
  ('try -> TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACE','try',8,'p_try','analizadorSintax.py',455),
  ('switch -> SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACE','switch',8,'p_switch','analizadorSintax.py',460),
  ('cases -> cases case','cases',2,'p_cases','analizadorSintax.py',464),
  ('cases -> case','cases',1,'p_cases','analizadorSintax.py',465),
  ('case -> CASE variable COLON statements BREAK','case',5,'p_case','analizadorSintax.py',472),
  ('case -> CASE variable COLON statements SEMICOLON','case',5,'p_case','analizadorSintax.py',473),
  ('case -> CASE variable COLON statements','case',4,'p_case','analizadorSintax.py',474),
  ('default_case -> DEFAULT COLON statements','default_case',3,'p_default_case','analizadorSintax.py',478),
  ('function -> declaration LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE','function',7,'p_function','analizadorSintax.py',482),
  ('function -> ID LPARENTHESIS parameters RPARENTHESIS','function',4,'p_function','analizadorSintax.py',483),
  ('function -> declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLON','function',7,'p_function_arrow','analizadorSintax.py',486),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','analizadorSintax.py',489),
  ('parameters -> parameter','parameters',1,'p_parameters','analizadorSintax.py',490),
  ('parameters -> empty','parameters',1,'p_parameters','analizadorSintax.py',491),
  ('parameter -> declaration','parameter',1,'p_parameter','analizadorSintax.py',500),
  ('parameter -> variable','parameter',1,'p_parameter','analizadorSintax.py',501),
  ('lambda -> LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE','lambda',6,'p_lambda','analizadorSintax.py',505),
  ('print -> PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLON','print',5,'p_print','analizadorSintax.py',509),
  ('input -> ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLON','input',8,'p_input','analizadorSintax.py',512),
  ('class_def -> CLASS ID LBRACE class_members RBRACE','class_def',5,'p_class_def','analizadorSintax.py',516),
  ('class_members -> class_members class_member','class_members',2,'p_class_members','analizadorSintax.py',519),
  ('class_members -> class_member','class_members',1,'p_class_members','analizadorSintax.py',520),
  ('class_member -> varType ID SEMICOLON','class_member',3,'p_class_member','analizadorSintax.py',523),
  ('class_member -> function','class_member',1,'p_class_member','analizadorSintax.py',524),
  ('enum -> ENUM ID LBRACE enum_values RBRACE','enum',5,'p_enum','analizadorSintax.py',527),
  ('enum_values -> enum_values COMMA ID','enum_values',3,'p_enum_values','analizadorSintax.py',530),
  ('enum_values -> ID','enum_values',1,'p_enum_values','analizadorSintax.py',531),
  ('typedef -> TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLON','typedef',9,'p_typedef','analizadorSintax.py',534),
  ('return -> RETURN variable','return',2,'p_return','analizadorSintax.py',537),
  ('return -> RETURN','return',1,'p_return','analizadorSintax.py',538),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizadorSintax.py',545),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintax.py',549),
]
