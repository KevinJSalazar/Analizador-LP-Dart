
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIFXnonassocELSEABSTRACT AND ARROW ASSIGN_OPERATOR BOOL BOOL_TYPE BREAK CASE CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQUALS DOT DOUBLE DOUBLE_TYPE ELSE ENUM EQUALS EXPORT FALSE FINAL FINALLY FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF IMPORT IN INCREMENT INT INT_TYPE LATE LBRACE LBRACKET LESS_THAN LESS_THAN_OR_EQUALS LIST_TYPE LPARENTHESIS MAP_TYPE MINUS MINUS_EQUALS MODULE NOT NOT_EQUALS NULL NULL_TYPE NUM_TYPE OR PLUS PLUS_EQUALS PRINT RBRACE RBRACKET READ RETURN RPARENTHESIS SEMICOLON SET_TYPE STATIC STDIN STRING STRING_TYPE SWITCH TIMES TIMES_EQUALS TRUE TRY TYPEDEF VAR VOID WHILEprogram : statementsstatements : statements statement\n                  | statementstatement : LBRACE statements RBRACEstatement : expression SEMICOLON\n                 | declaration SEMICOLON\n                 | assignation SEMICOLON\n                 | increment SEMICOLON\n                 | decrement SEMICOLON\n                 | import SEMICOLON\n                 | function\n                 | if\n                 | while\n                 | for\n                 | print\n                 | input\n                 | class_def\n                 | enum\n                 | try\n                 | switch\n                 | empty\n                 | CONTINUE SEMICOLON\n                 | BREAK SEMICOLONdeclaration : declaration_modifier varType ID \n                   | declaration_modifier ID \n                   | varType IDdeclaration : LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literallist_literal : LBRACKET list_elements RBRACKETlist_elements : list_elements COMMA variable\n                     | variable\n                     | emptydeclaration : MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literalmap_literal : LBRACE map_elements RBRACEmap_elements : map_elements COMMA map_pair\n                   | map_pair\n                   | emptymap_pair : variable COLON variableimport : IMPORT STRING SEMICOLONassignation : ID PLUS_EQUALS expression\n                   | ID MINUS_EQUALS expression\n                   | ID TIMES_EQUALS expression\n                   | ID DIVIDE_EQUALS expressionassignation : declaration ASSIGN_OPERATOR variableassignation : ID ASSIGN_OPERATOR variablevarType   : INT_TYPE \n                 | STRING_TYPE \n                 | NUM_TYPE \n                 | DOUBLE_TYPE \n                 | BOOL_TYPE \n                 | LIST_TYPE \n                 | MAP_TYPE \n                 | SET_TYPE\n                 | VOIDdeclaration_modifier : VAR \n                            | CONST \n                            | FINALvariable : INT\n                | DOUBLE\n                | STRING\n                | BOOL\n                | NULL\n                | ID\n                | expressionexpression : expression PLUS term\n                  | expression MINUS termexpression : termterm : term TIMES factor\n            | term DIVIDE factor\n            | term MODULE factorterm : factorfactor : ID LBRACKET expression RBRACKETfactor : ID DOT IDfactor : IDfactor : LPARENTHESIS expression RPARENTHESISfactor : INT\n              | DOUBLEbooleanExpression : variable EQUALS variable\n                         | variable NOT_EQUALS variable\n                         | variable GREATER_THAN variable\n                         | variable LESS_THAN variable\n                         | variable GREATER_THAN_OR_EQUALS variable\n                         | variable LESS_THAN_OR_EQUALS variablebooleanExpression : booleanExpression AND booleanExpression\n                         | booleanExpression OR booleanExpressionbooleanExpression : LPARENTHESIS booleanExpression RPARENTHESISbooleanExpression : variableif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement %prec IFXif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statementwhile : WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE\n           | FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS varType ID IN ID RPARENTHESIS LBRACE statements RBRACEincrement : ID INCREMENTdecrement : ID DECREMENTfunction : varType ID LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACEfunction : varType ID LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLONtypedef : TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLONenum : ENUM ID LBRACE enum_values RBRACEenum_values : enum_values COMMA ID\n                   | IDtry : TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACEswitch : SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACEcases : cases case\n             | casecase : CASE variable COLON statements BREAK SEMICOLONdefault_case : DEFAULT COLON statementsparameters : parameters COMMA parameter\n                  | parameter\n                  | emptyparameter : varType IDprint : PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLONinput : ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLONclass_def : CLASS ID LBRACE class_members RBRACEclass_members : class_members class_member\n                     | class_memberclass_member : varType ID SEMICOLON\n                    | functionempty :'
    
_lr_action_items = {'LBRACE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,38,53,54,55,58,60,61,62,63,64,65,92,93,94,96,137,149,158,170,172,178,187,190,191,194,196,198,204,205,210,214,220,221,225,226,231,232,233,237,238,239,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[4,4,-3,4,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,94,-2,4,-5,-6,-7,-8,-9,-10,-22,-23,135,136,4,-4,4,4,187,197,198,-87,4,-111,-113,-98,210,4,4,4,4,4,-88,-89,240,4,-95,-96,-112,248,249,250,4,-101,-102,4,4,4,4,4,4,4,4,4,-92,-90,-91,-23,]),'CONTINUE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[22,22,-3,22,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,22,-5,-6,-7,-8,-9,-10,-22,-23,22,-4,22,22,-87,22,-111,-113,-98,22,22,22,22,22,-88,-89,22,-95,-96,-112,22,-101,-102,22,22,22,22,22,22,22,22,22,-92,-90,-91,-23,]),'BREAK':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[23,23,-3,23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,23,-5,-6,-7,-8,-9,-10,-22,-23,23,-4,23,23,-87,23,-111,-113,-98,23,23,23,23,23,-88,-89,23,-95,-96,-112,23,-101,-102,23,23,23,23,23,23,262,23,23,-92,-90,-91,-23,]),'LIST_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,41,42,43,53,54,55,58,60,61,62,63,64,65,83,84,90,94,96,111,135,137,146,149,163,164,166,173,178,187,190,191,192,194,198,204,205,208,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[28,28,-3,28,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,71,-54,-55,-56,-2,28,-5,-6,-7,-8,-9,-10,-22,-23,71,71,132,28,-4,71,71,28,71,28,71,-115,-117,71,-87,28,-111,-113,-114,-98,28,28,28,-116,28,28,-88,-89,28,-95,-96,-112,28,-101,-102,28,28,28,28,28,28,28,28,28,-92,-90,-91,-23,]),'MAP_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,41,42,43,53,54,55,58,60,61,62,63,64,65,83,84,90,94,96,111,135,137,146,149,163,164,166,173,178,187,190,191,192,194,198,204,205,208,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[29,29,-3,29,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,72,-54,-55,-56,-2,29,-5,-6,-7,-8,-9,-10,-22,-23,72,72,133,29,-4,72,72,29,72,29,72,-115,-117,72,-87,29,-111,-113,-114,-98,29,29,29,-116,29,29,-88,-89,29,-95,-96,-112,29,-101,-102,29,29,29,29,29,29,29,29,29,-92,-90,-91,-23,]),'ID':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,26,28,29,31,36,37,41,42,43,44,45,46,47,48,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,74,75,76,77,78,81,82,88,89,90,91,94,95,96,124,129,132,133,136,137,139,145,149,150,151,152,153,154,155,156,157,159,161,165,178,187,189,190,191,194,195,198,199,203,204,205,206,210,213,214,218,220,221,226,231,232,233,240,241,242,243,244,246,248,249,250,251,252,253,259,260,261,264,265,266,267,268,],[27,27,-3,27,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,70,73,-50,-51,87,92,93,-54,-55,-56,-45,-46,-47,-48,-49,-52,-53,-2,27,-5,87,87,-6,105,-7,-8,-9,-10,-22,-23,87,87,87,110,-50,-51,87,87,87,87,105,118,87,105,105,130,105,27,105,-4,105,160,-50,-51,167,27,171,175,27,105,105,105,105,105,105,105,105,105,105,193,-87,27,207,-111,-113,-98,209,27,87,219,27,27,224,27,105,27,105,-88,-89,27,-95,-96,-112,27,-101,-102,27,27,105,105,27,27,27,27,27,27,27,-92,105,105,-90,-91,-23,]),'IMPORT':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[30,30,-3,30,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,30,-5,-6,-7,-8,-9,-10,-22,-23,30,-4,30,30,-87,30,-111,-113,-98,30,30,30,30,30,-88,-89,30,-95,-96,-112,30,-101,-102,30,30,30,30,30,30,30,30,30,-92,-90,-91,-23,]),'IF':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[32,32,-3,32,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,32,-5,-6,-7,-8,-9,-10,-22,-23,32,-4,32,32,-87,32,-111,-113,-98,32,32,32,32,32,-88,-89,32,-95,-96,-112,32,-101,-102,32,32,32,32,32,32,32,32,32,-92,-90,-91,-23,]),'WHILE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[33,33,-3,33,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,33,-5,-6,-7,-8,-9,-10,-22,-23,33,-4,33,33,-87,33,-111,-113,-98,33,33,33,33,33,-88,-89,33,-95,-96,-112,33,-101,-102,33,33,33,33,33,33,33,33,33,-92,-90,-91,-23,]),'FOR':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[34,34,-3,34,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,34,-5,-6,-7,-8,-9,-10,-22,-23,34,-4,34,34,-87,34,-111,-113,-98,34,34,34,34,34,-88,-89,34,-95,-96,-112,34,-101,-102,34,34,34,34,34,34,34,34,34,-92,-90,-91,-23,]),'PRINT':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[35,35,-3,35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,35,-5,-6,-7,-8,-9,-10,-22,-23,35,-4,35,35,-87,35,-111,-113,-98,35,35,35,35,35,-88,-89,35,-95,-96,-112,35,-101,-102,35,35,35,35,35,35,35,35,35,-92,-90,-91,-23,]),'CLASS':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[36,36,-3,36,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,36,-5,-6,-7,-8,-9,-10,-22,-23,36,-4,36,36,-87,36,-111,-113,-98,36,36,36,36,36,-88,-89,36,-95,-96,-112,36,-101,-102,36,36,36,36,36,36,36,36,36,-92,-90,-91,-23,]),'ENUM':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[37,37,-3,37,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,37,-5,-6,-7,-8,-9,-10,-22,-23,37,-4,37,37,-87,37,-111,-113,-98,37,37,37,37,37,-88,-89,37,-95,-96,-112,37,-101,-102,37,37,37,37,37,37,37,37,37,-92,-90,-91,-23,]),'TRY':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[38,38,-3,38,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,38,-5,-6,-7,-8,-9,-10,-22,-23,38,-4,38,38,-87,38,-111,-113,-98,38,38,38,38,38,-88,-89,38,-95,-96,-112,38,-101,-102,38,38,38,38,38,38,38,38,38,-92,-90,-91,-23,]),'SWITCH':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[39,39,-3,39,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,39,-5,-6,-7,-8,-9,-10,-22,-23,39,-4,39,39,-87,39,-111,-113,-98,39,39,39,39,39,-88,-89,39,-95,-96,-112,39,-101,-102,39,39,39,39,39,39,39,39,39,-92,-90,-91,-23,]),'VAR':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,90,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[41,41,-3,41,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,41,-5,-6,-7,-8,-9,-10,-22,-23,41,41,-4,41,41,-87,41,-111,-113,-98,41,41,41,41,41,-88,-89,41,-95,-96,-112,41,-101,-102,41,41,41,41,41,41,41,41,41,-92,-90,-91,-23,]),'CONST':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,90,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[42,42,-3,42,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,42,-5,-6,-7,-8,-9,-10,-22,-23,42,42,-4,42,42,-87,42,-111,-113,-98,42,42,42,42,42,-88,-89,42,-95,-96,-112,42,-101,-102,42,42,42,42,42,42,42,42,42,-92,-90,-91,-23,]),'FINAL':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,53,54,55,58,60,61,62,63,64,65,90,94,96,137,149,178,187,190,191,194,198,204,205,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[43,43,-3,43,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,43,-5,-6,-7,-8,-9,-10,-22,-23,43,43,-4,43,43,-87,43,-111,-113,-98,43,43,43,43,43,-88,-89,43,-95,-96,-112,43,-101,-102,43,43,43,43,43,43,43,43,43,-92,-90,-91,-23,]),'INT_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,41,42,43,53,54,55,58,60,61,62,63,64,65,83,84,90,94,96,111,135,137,146,149,163,164,166,173,178,187,190,191,192,194,198,204,205,208,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[44,44,-3,44,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,44,-54,-55,-56,-2,44,-5,-6,-7,-8,-9,-10,-22,-23,44,44,44,44,-4,44,44,44,44,44,44,-115,-117,44,-87,44,-111,-113,-114,-98,44,44,44,-116,44,44,-88,-89,44,-95,-96,-112,44,-101,-102,44,44,44,44,44,44,44,44,44,-92,-90,-91,-23,]),'STRING_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,41,42,43,53,54,55,58,60,61,62,63,64,65,83,84,90,94,96,111,135,137,146,149,163,164,166,173,178,187,190,191,192,194,198,204,205,208,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[45,45,-3,45,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,45,-54,-55,-56,-2,45,-5,-6,-7,-8,-9,-10,-22,-23,45,45,45,45,-4,45,45,45,45,45,45,-115,-117,45,-87,45,-111,-113,-114,-98,45,45,45,-116,45,45,-88,-89,45,-95,-96,-112,45,-101,-102,45,45,45,45,45,45,45,45,45,-92,-90,-91,-23,]),'NUM_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,41,42,43,53,54,55,58,60,61,62,63,64,65,83,84,90,94,96,111,135,137,146,149,163,164,166,173,178,187,190,191,192,194,198,204,205,208,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[46,46,-3,46,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,46,-54,-55,-56,-2,46,-5,-6,-7,-8,-9,-10,-22,-23,46,46,46,46,-4,46,46,46,46,46,46,-115,-117,46,-87,46,-111,-113,-114,-98,46,46,46,-116,46,46,-88,-89,46,-95,-96,-112,46,-101,-102,46,46,46,46,46,46,46,46,46,-92,-90,-91,-23,]),'DOUBLE_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,41,42,43,53,54,55,58,60,61,62,63,64,65,83,84,90,94,96,111,135,137,146,149,163,164,166,173,178,187,190,191,192,194,198,204,205,208,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[47,47,-3,47,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,47,-54,-55,-56,-2,47,-5,-6,-7,-8,-9,-10,-22,-23,47,47,47,47,-4,47,47,47,47,47,47,-115,-117,47,-87,47,-111,-113,-114,-98,47,47,47,-116,47,47,-88,-89,47,-95,-96,-112,47,-101,-102,47,47,47,47,47,47,47,47,47,-92,-90,-91,-23,]),'BOOL_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,41,42,43,53,54,55,58,60,61,62,63,64,65,83,84,90,94,96,111,135,137,146,149,163,164,166,173,178,187,190,191,192,194,198,204,205,208,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[48,48,-3,48,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,48,-54,-55,-56,-2,48,-5,-6,-7,-8,-9,-10,-22,-23,48,48,48,48,-4,48,48,48,48,48,48,-115,-117,48,-87,48,-111,-113,-114,-98,48,48,48,-116,48,48,-88,-89,48,-95,-96,-112,48,-101,-102,48,48,48,48,48,48,48,48,48,-92,-90,-91,-23,]),'SET_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,41,42,43,53,54,55,58,60,61,62,63,64,65,83,84,90,94,96,111,135,137,146,149,163,164,166,173,178,187,190,191,192,194,198,204,205,208,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[49,49,-3,49,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,49,-54,-55,-56,-2,49,-5,-6,-7,-8,-9,-10,-22,-23,49,49,49,49,-4,49,49,49,49,49,49,-115,-117,49,-87,49,-111,-113,-114,-98,49,49,49,-116,49,49,-88,-89,49,-95,-96,-112,49,-101,-102,49,49,49,49,49,49,49,49,49,-92,-90,-91,-23,]),'VOID':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,25,41,42,43,53,54,55,58,60,61,62,63,64,65,83,84,90,94,96,111,135,137,146,149,163,164,166,173,178,187,190,191,192,194,198,204,205,208,210,214,220,221,226,231,232,233,240,241,242,243,244,249,250,251,252,253,259,260,261,266,267,268,],[50,50,-3,50,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,50,-54,-55,-56,-2,50,-5,-6,-7,-8,-9,-10,-22,-23,50,50,50,50,-4,50,50,50,50,50,50,-115,-117,50,-87,50,-111,-113,-114,-98,50,50,50,-116,50,50,-88,-89,50,-95,-96,-112,50,-101,-102,50,50,50,50,50,50,50,50,50,-92,-90,-91,-23,]),'LPARENTHESIS':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,31,32,33,34,35,39,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,73,74,75,76,77,78,82,88,89,91,94,95,96,124,137,149,150,151,152,153,154,155,156,157,159,161,174,178,187,190,191,193,194,198,199,204,205,210,213,214,218,220,221,226,231,232,233,240,241,242,243,244,246,248,249,250,251,252,253,259,260,261,264,265,266,267,268,],[31,31,-3,31,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,31,88,89,90,91,95,-2,31,-5,31,31,-6,31,-7,-8,-9,-10,-22,-23,31,31,31,111,31,31,31,31,31,31,124,124,31,31,31,-4,124,31,31,124,124,31,31,31,31,31,31,124,31,201,-87,31,-111,-113,111,-98,31,31,31,31,31,31,31,31,-88,-89,31,-95,-96,-112,31,-101,-102,31,31,31,31,31,31,31,31,31,31,31,-92,31,31,-90,-91,-23,]),'INT':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,75,76,77,78,82,88,89,91,94,95,96,124,137,149,150,151,152,153,154,155,156,157,159,161,178,187,190,191,194,198,199,204,205,210,213,214,218,220,221,226,231,232,233,240,241,242,243,244,246,248,249,250,251,252,253,259,260,261,264,265,266,267,268,],[51,51,-3,51,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,51,-2,51,-5,51,51,-6,100,-7,-8,-9,-10,-22,-23,51,51,51,51,51,51,51,100,51,100,100,100,51,100,-4,100,51,51,100,100,100,100,100,100,100,100,100,100,-87,51,-111,-113,-98,51,51,51,51,51,100,51,100,-88,-89,51,-95,-96,-112,51,-101,-102,51,51,100,100,51,51,51,51,51,51,51,-92,100,100,-90,-91,-23,]),'DOUBLE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,31,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,74,75,76,77,78,82,88,89,91,94,95,96,124,137,149,150,151,152,153,154,155,156,157,159,161,178,187,190,191,194,198,199,204,205,210,213,214,218,220,221,226,231,232,233,240,241,242,243,244,246,248,249,250,251,252,253,259,260,261,264,265,266,267,268,],[52,52,-3,52,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,52,-2,52,-5,52,52,-6,101,-7,-8,-9,-10,-22,-23,52,52,52,52,52,52,52,101,52,101,101,101,52,101,-4,101,52,52,101,101,101,101,101,101,101,101,101,101,-87,52,-111,-113,-98,52,52,52,52,52,101,52,101,-88,-89,52,-95,-96,-112,52,-101,-102,52,52,101,101,52,52,52,52,52,52,52,-92,101,101,-90,-91,-23,]),'$end':([0,1,2,3,11,12,13,14,15,16,17,18,19,20,21,53,55,58,60,61,62,63,64,65,96,149,178,190,191,194,204,220,221,231,232,233,241,242,261,266,267,],[-118,0,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-10,-22,-23,-4,-118,-87,-111,-113,-98,-118,-88,-89,-95,-96,-112,-101,-102,-92,-90,-91,]),'RBRACE':([3,4,11,12,13,14,15,16,17,18,19,20,21,24,40,51,52,53,54,55,58,60,61,62,63,64,65,87,94,96,97,98,100,101,102,103,104,105,106,107,108,109,118,123,137,144,149,163,164,166,167,168,178,187,190,191,192,194,198,204,205,208,209,210,214,220,221,226,227,231,232,233,240,241,242,243,248,249,250,251,252,255,256,257,259,260,261,266,267,269,270,],[-3,-118,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-66,-70,-75,-76,-2,96,-5,-6,-7,-8,-9,-10,-22,-23,-73,-118,-4,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,-74,169,-71,-118,191,-115,-117,-100,194,-87,-118,-111,-113,-114,-98,-118,-118,221,-116,-99,-118,231,-88,-89,241,242,-95,-96,-112,-118,-101,-102,-118,-118,-118,-118,261,-106,263,-35,-36,266,267,-92,-90,-91,-34,-37,]),'SEMICOLON':([5,6,7,8,9,10,22,23,24,27,40,51,52,70,73,79,80,85,87,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,118,122,123,126,128,144,162,177,179,180,181,182,183,184,185,186,188,193,215,216,217,245,247,262,263,],[55,58,60,61,62,63,64,65,-66,-73,-70,-75,-76,-25,-26,-93,-94,122,-73,-64,-65,-43,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-24,-39,-40,-41,-42,-44,-72,-38,-74,-86,159,-71,190,-85,-83,-84,-77,-78,-79,-80,-81,-82,206,208,232,233,-27,-28,-32,268,-33,]),'PLUS':([5,24,27,40,51,52,86,87,97,98,100,101,105,106,107,108,109,112,113,114,115,118,119,123,144,148,215,],[56,-66,-73,-70,-75,-76,56,-73,-64,-65,-75,-76,-73,56,-67,-68,-69,56,56,56,56,-72,56,-74,-71,56,56,]),'MINUS':([5,24,27,40,51,52,86,87,97,98,100,101,105,106,107,108,109,112,113,114,115,118,119,123,144,148,215,],[57,-66,-73,-70,-75,-76,57,-73,-64,-65,-75,-76,-73,57,-67,-68,-69,57,57,57,57,-72,57,-74,-71,57,57,]),'ASSIGN_OPERATOR':([6,27,70,73,110,130,131,160,175,217,219,245,247,263,],[59,78,-25,-26,-24,161,59,-26,202,-27,237,-28,-32,-33,]),'ELSE':([11,12,13,14,15,16,17,18,19,20,21,55,58,60,61,62,63,64,65,96,149,178,190,191,194,204,220,221,231,232,233,241,242,261,266,267,],[-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-8,-9,-10,-22,-23,-4,-118,204,-111,-113,-98,-118,-88,-89,-95,-96,-112,-101,-102,-92,-90,-91,]),'RPARENTHESIS':([24,40,51,52,79,80,86,87,97,98,100,101,102,103,104,105,106,107,108,109,111,118,123,125,126,127,134,138,140,141,142,144,147,148,171,177,179,180,181,182,183,184,185,186,200,201,207,222,223,],[-66,-70,-75,-76,-93,-94,123,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-118,-72,-74,149,-86,158,162,170,172,-108,-109,-71,177,123,-110,-85,-83,-84,-77,-78,-79,-80,-81,-82,-107,216,225,238,239,]),'RBRACKET':([24,40,51,52,87,97,98,100,101,102,103,104,105,106,107,108,109,118,119,123,144,218,234,235,236,254,],[-66,-70,-75,-76,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,144,-74,-71,-118,245,-30,-31,-29,]),'EQUALS':([24,40,51,52,87,97,98,100,101,102,103,104,105,106,107,108,109,118,123,126,144,148,],[-66,-70,-75,-76,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,-74,152,-71,-63,]),'NOT_EQUALS':([24,40,51,52,87,97,98,100,101,102,103,104,105,106,107,108,109,118,123,126,144,148,],[-66,-70,-75,-76,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,-74,153,-71,-63,]),'GREATER_THAN':([24,40,44,45,46,47,48,49,50,51,52,71,72,87,97,98,100,101,102,103,104,105,106,107,108,109,118,120,123,126,144,148,176,],[-66,-70,-45,-46,-47,-48,-49,-52,-53,-75,-76,-50,-51,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,145,-74,154,-71,-63,203,]),'LESS_THAN':([24,28,29,40,51,52,87,97,98,100,101,102,103,104,105,106,107,108,109,118,123,126,132,133,144,148,],[-66,83,84,-70,-75,-76,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,-74,155,83,84,-71,-63,]),'GREATER_THAN_OR_EQUALS':([24,40,51,52,87,97,98,100,101,102,103,104,105,106,107,108,109,118,123,126,144,148,],[-66,-70,-75,-76,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,-74,156,-71,-63,]),'LESS_THAN_OR_EQUALS':([24,40,51,52,87,97,98,100,101,102,103,104,105,106,107,108,109,118,123,126,144,148,],[-66,-70,-75,-76,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,-74,157,-71,-63,]),'AND':([24,40,51,52,87,97,98,100,101,102,103,104,105,106,107,108,109,118,123,125,126,127,144,147,148,177,179,180,181,182,183,184,185,186,188,],[-66,-70,-75,-76,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,-74,150,-86,150,-71,150,-63,-85,150,150,-77,-78,-79,-80,-81,-82,150,]),'OR':([24,40,51,52,87,97,98,100,101,102,103,104,105,106,107,108,109,118,123,125,126,127,144,147,148,177,179,180,181,182,183,184,185,186,188,],[-66,-70,-75,-76,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,-74,151,-86,151,-71,151,-63,-85,151,151,-77,-78,-79,-80,-81,-82,151,]),'COLON':([24,40,51,52,87,97,98,100,101,102,103,104,105,106,107,108,109,118,123,144,229,230,258,],[-66,-70,-75,-76,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-72,-74,-71,243,244,265,]),'COMMA':([24,40,44,45,46,47,48,49,50,51,52,71,72,87,97,98,100,101,102,103,104,105,106,107,108,109,111,118,121,123,140,141,142,144,167,168,171,200,209,218,234,235,236,248,254,255,256,257,269,270,],[-66,-70,-45,-46,-47,-48,-49,-52,-53,-75,-76,-50,-51,-73,-64,-65,-57,-58,-59,-60,-61,-62,-63,-67,-68,-69,-118,-72,146,-74,173,-108,-109,-71,-100,195,-110,-107,-99,-118,246,-30,-31,-118,-29,264,-35,-36,-34,-37,]),'TIMES':([24,27,40,51,52,87,97,98,100,101,105,107,108,109,118,123,144,],[66,-73,-70,-75,-76,-73,66,66,-75,-76,-73,-67,-68,-69,-72,-74,-71,]),'DIVIDE':([24,27,40,51,52,87,97,98,100,101,105,107,108,109,118,123,144,],[67,-73,-70,-75,-76,-73,67,67,-75,-76,-73,-67,-68,-69,-72,-74,-71,]),'MODULE':([24,27,40,51,52,87,97,98,100,101,105,107,108,109,118,123,144,],[68,-73,-70,-75,-76,-73,68,68,-75,-76,-73,-67,-68,-69,-72,-74,-71,]),'PLUS_EQUALS':([27,130,],[74,74,]),'MINUS_EQUALS':([27,130,],[75,75,]),'TIMES_EQUALS':([27,130,],[76,76,]),'DIVIDE_EQUALS':([27,130,],[77,77,]),'INCREMENT':([27,224,],[79,79,]),'DECREMENT':([27,224,],[80,80,]),'LBRACKET':([27,87,105,202,],[82,82,82,218,]),'DOT':([27,87,105,117,],[81,81,81,143,]),'STRING':([30,59,78,88,89,91,95,124,150,151,152,153,154,155,156,157,159,161,213,218,246,248,264,265,],[85,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'BOOL':([59,78,88,89,91,95,124,150,151,152,153,154,155,156,157,159,161,213,218,246,248,264,265,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'NULL':([59,78,88,89,91,95,124,150,151,152,153,154,155,156,157,159,161,213,218,246,248,264,265,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'STDIN':([78,],[117,]),'READ':([143,],[174,]),'IN':([160,],[189,]),'FINALLY':([169,],[196,]),'ARROW':([172,],[199,]),'CASE':([197,211,212,228,268,],[213,213,-104,-103,-105,]),'DEFAULT':([211,212,228,268,],[229,-104,-103,-105,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,4,94,187,198,210,240,243,244,249,250,],[2,54,137,205,214,226,251,252,253,259,260,]),'statement':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[3,53,3,53,3,53,178,3,3,220,53,3,53,53,3,3,3,3,3,53,53,53,53,53,]),'expression':([0,2,4,31,54,59,74,75,76,77,78,82,88,89,91,94,95,124,137,149,150,151,152,153,154,155,156,157,159,161,187,198,199,204,205,210,213,214,218,226,240,243,244,246,248,249,250,251,252,253,259,260,264,265,],[5,5,5,86,5,106,112,113,114,115,106,119,106,106,106,5,106,148,5,5,106,106,106,106,106,106,106,106,106,106,5,5,215,5,5,5,106,5,106,5,5,5,5,106,106,5,5,5,5,5,5,5,106,106,]),'declaration':([0,2,4,54,90,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[6,6,6,6,131,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignation':([0,2,4,54,90,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[7,7,7,7,128,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'increment':([0,2,4,54,94,137,149,187,198,204,205,206,210,214,226,240,243,244,249,250,251,252,253,259,260,],[8,8,8,8,8,8,8,8,8,8,8,222,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'decrement':([0,2,4,54,94,137,149,187,198,204,205,206,210,214,226,240,243,244,249,250,251,252,253,259,260,],[9,9,9,9,9,9,9,9,9,9,9,223,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'import':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,4,54,94,135,137,149,163,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[11,11,11,11,11,166,11,11,166,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'if':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'for':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'print':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'input':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'class_def':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'enum':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch':([0,2,4,54,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'empty':([0,2,4,54,94,111,137,149,187,198,204,205,210,214,218,226,240,243,244,248,249,250,251,252,253,259,260,],[21,21,21,21,21,142,21,21,21,21,21,21,21,21,236,21,21,21,21,257,21,21,21,21,21,21,21,]),'term':([0,2,4,31,54,56,57,59,74,75,76,77,78,82,88,89,91,94,95,124,137,149,150,151,152,153,154,155,156,157,159,161,187,198,199,204,205,210,213,214,218,226,240,243,244,246,248,249,250,251,252,253,259,260,264,265,],[24,24,24,24,24,97,98,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'declaration_modifier':([0,2,4,54,90,94,137,149,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'varType':([0,2,4,25,54,83,84,90,94,111,135,137,146,149,163,173,187,198,204,205,210,214,226,240,243,244,249,250,251,252,253,259,260,],[26,26,26,69,26,120,121,129,26,139,165,26,176,26,165,139,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'factor':([0,2,4,31,54,56,57,59,66,67,68,74,75,76,77,78,82,88,89,91,94,95,124,137,149,150,151,152,153,154,155,156,157,159,161,187,198,199,204,205,210,213,214,218,226,240,243,244,246,248,249,250,251,252,253,259,260,264,265,],[40,40,40,40,40,40,40,40,107,108,109,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'variable':([59,78,88,89,91,95,124,150,151,152,153,154,155,156,157,159,161,213,218,246,248,264,265,],[99,116,126,126,134,138,126,126,126,181,182,183,184,185,186,126,116,230,235,254,258,258,270,]),'booleanExpression':([88,89,124,150,151,159,],[125,127,147,179,180,188,]),'parameters':([111,],[140,]),'parameter':([111,173,],[141,200,]),'class_members':([135,],[163,]),'class_member':([135,163,],[164,192,]),'enum_values':([136,],[168,]),'cases':([197,],[211,]),'case':([197,211,],[212,228,]),'list_literal':([202,],[217,]),'default_case':([211,],[227,]),'list_elements':([218,],[234,]),'map_literal':([237,],[247,]),'map_elements':([248,],[255,]),'map_pair':([248,264,],[256,269,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analizadorSintax.py',16),
  ('statements -> statements statement','statements',2,'p_statements','analizadorSintax.py',20),
  ('statements -> statement','statements',1,'p_statements','analizadorSintax.py',21),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_statement_block','analizadorSintax.py',29),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','analizadorSintax.py',33),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement','analizadorSintax.py',34),
  ('statement -> assignation SEMICOLON','statement',2,'p_statement','analizadorSintax.py',35),
  ('statement -> increment SEMICOLON','statement',2,'p_statement','analizadorSintax.py',36),
  ('statement -> decrement SEMICOLON','statement',2,'p_statement','analizadorSintax.py',37),
  ('statement -> import SEMICOLON','statement',2,'p_statement','analizadorSintax.py',38),
  ('statement -> function','statement',1,'p_statement','analizadorSintax.py',39),
  ('statement -> if','statement',1,'p_statement','analizadorSintax.py',40),
  ('statement -> while','statement',1,'p_statement','analizadorSintax.py',41),
  ('statement -> for','statement',1,'p_statement','analizadorSintax.py',42),
  ('statement -> print','statement',1,'p_statement','analizadorSintax.py',43),
  ('statement -> input','statement',1,'p_statement','analizadorSintax.py',44),
  ('statement -> class_def','statement',1,'p_statement','analizadorSintax.py',45),
  ('statement -> enum','statement',1,'p_statement','analizadorSintax.py',46),
  ('statement -> try','statement',1,'p_statement','analizadorSintax.py',47),
  ('statement -> switch','statement',1,'p_statement','analizadorSintax.py',48),
  ('statement -> empty','statement',1,'p_statement','analizadorSintax.py',49),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement','analizadorSintax.py',50),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','analizadorSintax.py',51),
  ('declaration -> declaration_modifier varType ID','declaration',3,'p_declaration','analizadorSintax.py',55),
  ('declaration -> declaration_modifier ID','declaration',2,'p_declaration','analizadorSintax.py',56),
  ('declaration -> varType ID','declaration',2,'p_declaration','analizadorSintax.py',57),
  ('declaration -> LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal','declaration',7,'p_declaration_list_init','analizadorSintax.py',66),
  ('list_literal -> LBRACKET list_elements RBRACKET','list_literal',3,'p_list_literal','analizadorSintax.py',70),
  ('list_elements -> list_elements COMMA variable','list_elements',3,'p_list_elements','analizadorSintax.py',74),
  ('list_elements -> variable','list_elements',1,'p_list_elements','analizadorSintax.py',75),
  ('list_elements -> empty','list_elements',1,'p_list_elements','analizadorSintax.py',76),
  ('declaration -> MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal','declaration',9,'p_declaration_map_init','analizadorSintax.py',85),
  ('map_literal -> LBRACE map_elements RBRACE','map_literal',3,'p_map_literal','analizadorSintax.py',89),
  ('map_elements -> map_elements COMMA map_pair','map_elements',3,'p_map_elements','analizadorSintax.py',93),
  ('map_elements -> map_pair','map_elements',1,'p_map_elements','analizadorSintax.py',94),
  ('map_elements -> empty','map_elements',1,'p_map_elements','analizadorSintax.py',95),
  ('map_pair -> variable COLON variable','map_pair',3,'p_map_pair','analizadorSintax.py',104),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizadorSintax.py',108),
  ('assignation -> ID PLUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',113),
  ('assignation -> ID MINUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',114),
  ('assignation -> ID TIMES_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',115),
  ('assignation -> ID DIVIDE_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',116),
  ('assignation -> declaration ASSIGN_OPERATOR variable','assignation',3,'p_assignation','analizadorSintax.py',120),
  ('assignation -> ID ASSIGN_OPERATOR variable','assignation',3,'p_assignation_no_type','analizadorSintax.py',124),
  ('varType -> INT_TYPE','varType',1,'p_varType','analizadorSintax.py',128),
  ('varType -> STRING_TYPE','varType',1,'p_varType','analizadorSintax.py',129),
  ('varType -> NUM_TYPE','varType',1,'p_varType','analizadorSintax.py',130),
  ('varType -> DOUBLE_TYPE','varType',1,'p_varType','analizadorSintax.py',131),
  ('varType -> BOOL_TYPE','varType',1,'p_varType','analizadorSintax.py',132),
  ('varType -> LIST_TYPE','varType',1,'p_varType','analizadorSintax.py',133),
  ('varType -> MAP_TYPE','varType',1,'p_varType','analizadorSintax.py',134),
  ('varType -> SET_TYPE','varType',1,'p_varType','analizadorSintax.py',135),
  ('varType -> VOID','varType',1,'p_varType','analizadorSintax.py',136),
  ('declaration_modifier -> VAR','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',139),
  ('declaration_modifier -> CONST','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',140),
  ('declaration_modifier -> FINAL','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',141),
  ('variable -> INT','variable',1,'p_variable','analizadorSintax.py',145),
  ('variable -> DOUBLE','variable',1,'p_variable','analizadorSintax.py',146),
  ('variable -> STRING','variable',1,'p_variable','analizadorSintax.py',147),
  ('variable -> BOOL','variable',1,'p_variable','analizadorSintax.py',148),
  ('variable -> NULL','variable',1,'p_variable','analizadorSintax.py',149),
  ('variable -> ID','variable',1,'p_variable','analizadorSintax.py',150),
  ('variable -> expression','variable',1,'p_variable','analizadorSintax.py',151),
  ('expression -> expression PLUS term','expression',3,'p_expression_operations','analizadorSintax.py',155),
  ('expression -> expression MINUS term','expression',3,'p_expression_operations','analizadorSintax.py',156),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintax.py',160),
  ('term -> term TIMES factor','term',3,'p_term_operations','analizadorSintax.py',164),
  ('term -> term DIVIDE factor','term',3,'p_term_operations','analizadorSintax.py',165),
  ('term -> term MODULE factor','term',3,'p_term_operations','analizadorSintax.py',166),
  ('term -> factor','term',1,'p_term_factor','analizadorSintax.py',170),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_variable_array_access','analizadorSintax.py',174),
  ('factor -> ID DOT ID','factor',3,'p_variable_member_access','analizadorSintax.py',178),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintax.py',182),
  ('factor -> LPARENTHESIS expression RPARENTHESIS','factor',3,'p_factor_parens','analizadorSintax.py',186),
  ('factor -> INT','factor',1,'p_factor_numeric','analizadorSintax.py',190),
  ('factor -> DOUBLE','factor',1,'p_factor_numeric','analizadorSintax.py',191),
  ('booleanExpression -> variable EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',199),
  ('booleanExpression -> variable NOT_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',200),
  ('booleanExpression -> variable GREATER_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',201),
  ('booleanExpression -> variable LESS_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',202),
  ('booleanExpression -> variable GREATER_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',203),
  ('booleanExpression -> variable LESS_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',204),
  ('booleanExpression -> booleanExpression AND booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',208),
  ('booleanExpression -> booleanExpression OR booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',209),
  ('booleanExpression -> LPARENTHESIS booleanExpression RPARENTHESIS','booleanExpression',3,'p_boolean_expression_paren','analizadorSintax.py',213),
  ('booleanExpression -> variable','booleanExpression',1,'p_boolean_expression_variable','analizadorSintax.py',217),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement','if',5,'p_if','analizadorSintax.py',223),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statement','if',7,'p_if_else','analizadorSintax.py',228),
  ('while -> WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACE','while',7,'p_while','analizadorSintax.py',232),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',236),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',237),
  ('for -> FOR LPARENTHESIS varType ID IN ID RPARENTHESIS LBRACE statements RBRACE','for',10,'p_for_in','analizadorSintax.py',241),
  ('increment -> ID INCREMENT','increment',2,'p_increment','analizadorSintax.py',245),
  ('decrement -> ID DECREMENT','decrement',2,'p_decrement','analizadorSintax.py',249),
  ('function -> varType ID LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE','function',8,'p_function','analizadorSintax.py',254),
  ('function -> varType ID LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLON','function',8,'p_function_arrow','analizadorSintax.py',257),
  ('typedef -> TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLON','typedef',9,'p_typedef','analizadorSintax.py',261),
  ('enum -> ENUM ID LBRACE enum_values RBRACE','enum',5,'p_enum','analizadorSintax.py',265),
  ('enum_values -> enum_values COMMA ID','enum_values',3,'p_enum_values','analizadorSintax.py',268),
  ('enum_values -> ID','enum_values',1,'p_enum_values','analizadorSintax.py',269),
  ('try -> TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACE','try',8,'p_try','analizadorSintax.py',273),
  ('switch -> SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACE','switch',8,'p_switch','analizadorSintax.py',278),
  ('cases -> cases case','cases',2,'p_cases','analizadorSintax.py',282),
  ('cases -> case','cases',1,'p_cases','analizadorSintax.py',283),
  ('case -> CASE variable COLON statements BREAK SEMICOLON','case',6,'p_case','analizadorSintax.py',290),
  ('default_case -> DEFAULT COLON statements','default_case',3,'p_default_case','analizadorSintax.py',294),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','analizadorSintax.py',299),
  ('parameters -> parameter','parameters',1,'p_parameters','analizadorSintax.py',300),
  ('parameters -> empty','parameters',1,'p_parameters','analizadorSintax.py',301),
  ('parameter -> varType ID','parameter',2,'p_parameter','analizadorSintax.py',304),
  ('print -> PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLON','print',5,'p_print','analizadorSintax.py',308),
  ('input -> ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLON','input',8,'p_input','analizadorSintax.py',311),
  ('class_def -> CLASS ID LBRACE class_members RBRACE','class_def',5,'p_class_def','analizadorSintax.py',315),
  ('class_members -> class_members class_member','class_members',2,'p_class_members','analizadorSintax.py',318),
  ('class_members -> class_member','class_members',1,'p_class_members','analizadorSintax.py',319),
  ('class_member -> varType ID SEMICOLON','class_member',3,'p_class_member','analizadorSintax.py',322),
  ('class_member -> function','class_member',1,'p_class_member','analizadorSintax.py',323),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintax.py',327),
]
