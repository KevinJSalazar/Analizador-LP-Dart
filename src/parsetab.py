
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIFXnonassocELSEABSTRACT AND ARROW ASSIGN_OPERATOR BOOL BOOL_TYPE BREAK CASE CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQUALS DOT DOUBLE DOUBLE_TYPE ELSE ENUM EQUALS EXPORT FALSE FINAL FINALLY FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF IMPORT IN INCREMENT INT INT_TYPE LATE LBRACE LBRACKET LESS_THAN LESS_THAN_OR_EQUALS LIST_TYPE LPARENTHESIS MAP_TYPE MINUS MINUS_EQUALS MODULE NOT NOT_EQUALS NULL NULL_TYPE NUM_TYPE OR PLUS PLUS_EQUALS PRINT RBRACE RBRACKET READ RETURN RPARENTHESIS SEMICOLON SET_TYPE STATIC STDIN STRING STRING_TYPE SWITCH TIMES TIMES_EQUALS TRUE TRY TYPEDEF VAR VOID WHILEprogram : statementsstatements : statements statement\n                  | statementstatement : LBRACE statements RBRACEstatement : expression SEMICOLON\n                 | declaration SEMICOLON\n                 | assignation SEMICOLON\n                 | increment SEMICOLON\n                 | decrement SEMICOLON\n                 | import\n                 | function\n                 | if\n                 | while\n                 | for\n                 | print\n                 | input\n                 | class_def\n                 | enum\n                 | try\n                 | switch\n                 | empty\n                 | return SEMICOLON\n                 | CONTINUE SEMICOLON\n                 | BREAK SEMICOLONdeclaration : declaration_modifier varType ID \n                   | declaration_modifier ID \n                   | varType IDdeclaration : LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal\n                   | declaration_modifier LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literaldeclaration : declaration ASSIGN_OPERATOR LESS_THAN varType GREATER_THAN list_literaldeclaration : MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal\n                   | declaration_modifier MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literalassignation : declaration ASSIGN_OPERATOR variableassignation : ID ASSIGN_OPERATOR variableassignation : ID PLUS_EQUALS expression\n                   | ID MINUS_EQUALS expression\n                   | ID TIMES_EQUALS expression\n                   | ID DIVIDE_EQUALS expressiondeclaration_modifier : CONST \n                            | FINAL\n                            | LATEvarType   : INT_TYPE \n                 | STRING_TYPE \n                 | NUM_TYPE \n                 | DOUBLE_TYPE \n                 | BOOL_TYPE \n                 | LIST_TYPE \n                 | MAP_TYPE \n                 | SET_TYPE\n                 | VAR\n                 | VOIDlist_literal : LBRACKET list_elements RBRACKETlist_elements : list_elements COMMA variable\n                     | variable\n                     | emptymap_literal : LBRACE map_elements RBRACEmap_elements : map_elements COMMA map_pair\n                   | map_pair\n                   | emptymap_pair : variable COLON variable\n                | variable COLON booleanExpressionvariable : INT\n                | DOUBLE\n                | STRING\n                | BOOL\n                | NULL\n                | ID\n                | function\n                | lambda\n                | expressionexpression : expression PLUS term\n                  | expression MINUS termexpression : termterm : term TIMES factor\n            | term DIVIDE factor\n            | term MODULE factorterm : factorfactor : MINUS factorfactor : INT\n              | DOUBLEfactor : IDfactor : LPARENTHESIS expression RPARENTHESISfactor : ID LBRACKET expression RBRACKETfactor : ID DOT function statement\n              | ID DOT function\n              | ID DOT IDbooleanExpression : variable EQUALS variable\n                         | variable NOT_EQUALS variable\n                         | variable GREATER_THAN variable\n                         | variable LESS_THAN variable\n                         | variable GREATER_THAN_OR_EQUALS variable\n                         | variable LESS_THAN_OR_EQUALS variablebooleanExpression : booleanExpression AND booleanExpression\n                         | booleanExpression OR booleanExpressionbooleanExpression : LPARENTHESIS booleanExpression RPARENTHESISbooleanExpression : variableif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement %prec IFXif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statementwhile : WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE\n           | FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS varType ID IN ID RPARENTHESIS LBRACE statements RBRACEincrement : ID INCREMENTdecrement : ID DECREMENTtry : TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACEswitch : SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACEcases : cases case\n             | casecase : CASE variable COLON statements BREAK\n            | CASE variable COLON statements SEMICOLON\n            | CASE variable COLON statementsdefault_case : DEFAULT COLON statementsfunction : declaration LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE\n                | ID LPARENTHESIS parameters RPARENTHESISfunction : declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLONparameters : parameters COMMA parameter\n                  | parameter\n                  | emptyparameter : declaration\n                 | variablelambda : LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACEprint : PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLONinput : ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLONclass_def : CLASS ID LBRACE class_members RBRACEclass_members : class_members class_member\n                     | class_memberclass_member : varType ID SEMICOLON\n                    | functionenum : ENUM ID LBRACE enum_values RBRACEenum_values : enum_values COMMA ID\n                   | IDtypedef : TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLONreturn : RETURN variable\n              | RETURNimport : IMPORT STRING SEMICOLONempty :'
    
_lr_action_items = {'LBRACE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,40,57,58,59,62,65,66,67,68,69,70,99,100,101,115,139,145,160,168,173,181,190,204,208,210,219,228,231,232,235,237,239,242,249,250,255,259,263,264,270,271,275,276,286,287,288,289,290,291,292,293,294,296,299,300,301,302,303,309,310,311,317,318,],[4,4,-3,4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,101,-2,4,-5,-6,-7,-8,-9,-22,-23,-24,158,159,4,-4,4,-135,4,210,-114,4,228,238,239,4,-97,4,-122,-124,-129,255,4,4,4,4,4,4,-113,-115,-98,-99,290,4,-123,298,299,300,4,-105,-106,4,4,298,4,4,4,4,4,4,4,-102,-100,-101,]),'CONTINUE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[23,23,-3,23,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,23,-5,-6,-7,-8,-9,-22,-23,-24,23,-4,23,-135,23,-114,23,23,-97,23,-122,-124,-129,23,23,23,23,23,23,-113,-115,-98,-99,23,-123,23,-105,-106,23,23,23,23,23,23,23,23,23,-102,-100,-101,]),'BREAK':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[24,24,-3,24,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,24,-5,-6,-7,-8,-9,-22,-23,-24,24,-4,24,-135,24,-114,24,24,-97,24,-122,-124,-129,24,24,24,24,24,24,-113,-115,-98,-99,24,-123,24,-105,-106,24,24,24,24,24,24,312,24,24,-102,-100,-101,]),'LIST_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[30,30,-3,30,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,78,30,-39,-40,-41,-2,30,-5,-6,30,30,-7,-8,-9,-22,-23,-24,30,30,30,141,141,30,30,155,30,30,30,30,-4,141,141,141,30,-135,30,155,30,30,30,-114,141,30,30,30,30,30,30,30,30,30,30,30,30,155,-126,-128,30,141,-97,30,-122,-124,-125,-129,30,30,30,30,30,-127,30,30,30,-113,-115,-98,-99,30,30,-123,30,-105,-106,30,30,30,30,30,30,30,30,30,30,-102,30,30,-100,-101,]),'MAP_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[31,31,-3,31,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,79,31,-39,-40,-41,-2,31,-5,-6,31,31,-7,-8,-9,-22,-23,-24,31,31,31,143,143,31,31,156,31,31,31,31,-4,143,143,143,31,-135,31,156,31,31,31,-114,143,31,31,31,31,31,31,31,31,31,31,31,31,156,-126,-128,31,143,-97,31,-122,-124,-125,-129,31,31,31,31,31,-127,31,31,31,-113,-115,-98,-99,31,31,-123,31,-105,-106,31,31,31,31,31,31,31,31,31,31,-102,31,31,-100,-101,]),'ID':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,30,31,33,38,39,42,44,45,46,47,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,78,79,81,82,83,84,85,88,89,90,95,96,97,98,101,102,114,115,139,145,147,152,155,156,158,159,160,163,169,173,176,181,182,183,184,185,186,187,188,189,191,193,194,197,198,199,200,210,211,213,219,228,230,231,232,233,235,236,239,241,242,248,249,250,251,253,255,258,259,263,264,266,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[29,29,-3,29,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,75,77,80,-47,-48,75,99,100,109,-39,-40,-41,-42,-43,-44,-45,-46,-49,-50,-51,-2,29,-5,75,75,-6,109,109,-7,-8,-9,-22,-23,-24,75,75,75,128,-47,-48,109,75,75,75,75,109,138,75,109,109,153,109,29,109,166,-4,29,-135,109,192,-47,-48,196,201,29,207,109,-114,216,29,109,109,109,109,109,109,109,109,109,109,109,196,-126,234,-128,29,75,244,-97,29,252,-122,-124,-125,-129,254,29,109,29,269,29,29,274,-127,29,109,29,-113,-115,285,-98,-99,29,109,-123,29,-105,-106,29,29,109,29,29,29,29,29,29,29,-102,109,109,-100,-101,]),'IMPORT':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[32,32,-3,32,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,32,-5,-6,-7,-8,-9,-22,-23,-24,32,-4,32,-135,32,-114,32,32,-97,32,-122,-124,-129,32,32,32,32,32,32,-113,-115,-98,-99,32,-123,32,-105,-106,32,32,32,32,32,32,32,32,32,-102,-100,-101,]),'IF':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[34,34,-3,34,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,34,-5,-6,-7,-8,-9,-22,-23,-24,34,-4,34,-135,34,-114,34,34,-97,34,-122,-124,-129,34,34,34,34,34,34,-113,-115,-98,-99,34,-123,34,-105,-106,34,34,34,34,34,34,34,34,34,-102,-100,-101,]),'WHILE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[35,35,-3,35,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,35,-5,-6,-7,-8,-9,-22,-23,-24,35,-4,35,-135,35,-114,35,35,-97,35,-122,-124,-129,35,35,35,35,35,35,-113,-115,-98,-99,35,-123,35,-105,-106,35,35,35,35,35,35,35,35,35,-102,-100,-101,]),'FOR':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[36,36,-3,36,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,36,-5,-6,-7,-8,-9,-22,-23,-24,36,-4,36,-135,36,-114,36,36,-97,36,-122,-124,-129,36,36,36,36,36,36,-113,-115,-98,-99,36,-123,36,-105,-106,36,36,36,36,36,36,36,36,36,-102,-100,-101,]),'PRINT':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[37,37,-3,37,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,37,-5,-6,-7,-8,-9,-22,-23,-24,37,-4,37,-135,37,-114,37,37,-97,37,-122,-124,-129,37,37,37,37,37,37,-113,-115,-98,-99,37,-123,37,-105,-106,37,37,37,37,37,37,37,37,37,-102,-100,-101,]),'CLASS':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[38,38,-3,38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,38,-5,-6,-7,-8,-9,-22,-23,-24,38,-4,38,-135,38,-114,38,38,-97,38,-122,-124,-129,38,38,38,38,38,38,-113,-115,-98,-99,38,-123,38,-105,-106,38,38,38,38,38,38,38,38,38,-102,-100,-101,]),'ENUM':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[39,39,-3,39,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,39,-5,-6,-7,-8,-9,-22,-23,-24,39,-4,39,-135,39,-114,39,39,-97,39,-122,-124,-129,39,39,39,39,39,39,-113,-115,-98,-99,39,-123,39,-105,-106,39,39,39,39,39,39,39,39,39,-102,-100,-101,]),'TRY':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[40,40,-3,40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,40,-5,-6,-7,-8,-9,-22,-23,-24,40,-4,40,-135,40,-114,40,40,-97,40,-122,-124,-129,40,40,40,40,40,40,-113,-115,-98,-99,40,-123,40,-105,-106,40,40,40,40,40,40,40,40,40,-102,-100,-101,]),'SWITCH':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[41,41,-3,41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,41,-5,-6,-7,-8,-9,-22,-23,-24,41,-4,41,-135,41,-114,41,41,-97,41,-122,-124,-129,41,41,41,41,41,41,-113,-115,-98,-99,41,-123,41,-105,-106,41,41,41,41,41,41,41,41,41,-102,-100,-101,]),'RETURN':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,57,58,59,62,65,66,67,68,69,70,101,115,139,145,160,173,181,210,219,228,231,232,235,239,242,249,250,255,259,263,264,270,271,276,286,290,291,292,293,294,299,300,301,302,303,309,310,311,317,318,],[42,42,-3,42,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,42,-5,-6,-7,-8,-9,-22,-23,-24,42,-4,42,-135,42,-114,42,42,-97,42,-122,-124,-129,42,42,42,42,42,42,-113,-115,-98,-99,42,-123,42,-105,-106,42,42,42,42,42,42,42,42,42,-102,-100,-101,]),'CONST':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,42,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,95,96,97,98,101,102,114,115,139,145,147,158,160,163,169,173,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[44,44,-3,44,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,44,-2,44,-5,-6,44,44,-7,-8,-9,-22,-23,-24,44,44,44,44,44,44,44,44,44,44,-4,44,-135,44,44,44,44,44,-114,44,44,44,44,44,44,44,44,44,44,44,44,44,-126,-128,44,-97,44,-122,-124,-125,-129,44,44,44,44,44,-127,44,44,44,-113,-115,-98,-99,44,44,-123,44,-105,-106,44,44,44,44,44,44,44,44,44,44,-102,44,44,-100,-101,]),'FINAL':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,42,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,95,96,97,98,101,102,114,115,139,145,147,158,160,163,169,173,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[45,45,-3,45,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,45,-2,45,-5,-6,45,45,-7,-8,-9,-22,-23,-24,45,45,45,45,45,45,45,45,45,45,-4,45,-135,45,45,45,45,45,-114,45,45,45,45,45,45,45,45,45,45,45,45,45,-126,-128,45,-97,45,-122,-124,-125,-129,45,45,45,45,45,-127,45,45,45,-113,-115,-98,-99,45,45,-123,45,-105,-106,45,45,45,45,45,45,45,45,45,45,-102,45,45,-100,-101,]),'LATE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,42,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,95,96,97,98,101,102,114,115,139,145,147,158,160,163,169,173,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[46,46,-3,46,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,46,-2,46,-5,-6,46,46,-7,-8,-9,-22,-23,-24,46,46,46,46,46,46,46,46,46,46,-4,46,-135,46,46,46,46,46,-114,46,46,46,46,46,46,46,46,46,46,46,46,46,-126,-128,46,-97,46,-122,-124,-125,-129,46,46,46,46,46,-127,46,46,46,-113,-115,-98,-99,46,46,-123,46,-105,-106,46,46,46,46,46,46,46,46,46,46,-102,46,46,-100,-101,]),'INT_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[47,47,-3,47,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,47,47,-39,-40,-41,-2,47,-5,-6,47,47,-7,-8,-9,-22,-23,-24,47,47,47,47,47,47,47,47,47,47,47,47,-4,47,47,47,47,-135,47,47,47,47,47,-114,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-126,-128,47,47,-97,47,-122,-124,-125,-129,47,47,47,47,47,-127,47,47,47,-113,-115,-98,-99,47,47,-123,47,-105,-106,47,47,47,47,47,47,47,47,47,47,-102,47,47,-100,-101,]),'STRING_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[48,48,-3,48,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,48,48,-39,-40,-41,-2,48,-5,-6,48,48,-7,-8,-9,-22,-23,-24,48,48,48,48,48,48,48,48,48,48,48,48,-4,48,48,48,48,-135,48,48,48,48,48,-114,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-126,-128,48,48,-97,48,-122,-124,-125,-129,48,48,48,48,48,-127,48,48,48,-113,-115,-98,-99,48,48,-123,48,-105,-106,48,48,48,48,48,48,48,48,48,48,-102,48,48,-100,-101,]),'NUM_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[49,49,-3,49,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,49,49,-39,-40,-41,-2,49,-5,-6,49,49,-7,-8,-9,-22,-23,-24,49,49,49,49,49,49,49,49,49,49,49,49,-4,49,49,49,49,-135,49,49,49,49,49,-114,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-126,-128,49,49,-97,49,-122,-124,-125,-129,49,49,49,49,49,-127,49,49,49,-113,-115,-98,-99,49,49,-123,49,-105,-106,49,49,49,49,49,49,49,49,49,49,-102,49,49,-100,-101,]),'DOUBLE_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[50,50,-3,50,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,50,50,-39,-40,-41,-2,50,-5,-6,50,50,-7,-8,-9,-22,-23,-24,50,50,50,50,50,50,50,50,50,50,50,50,-4,50,50,50,50,-135,50,50,50,50,50,-114,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-126,-128,50,50,-97,50,-122,-124,-125,-129,50,50,50,50,50,-127,50,50,50,-113,-115,-98,-99,50,50,-123,50,-105,-106,50,50,50,50,50,50,50,50,50,50,-102,50,50,-100,-101,]),'BOOL_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[51,51,-3,51,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,51,51,-39,-40,-41,-2,51,-5,-6,51,51,-7,-8,-9,-22,-23,-24,51,51,51,51,51,51,51,51,51,51,51,51,-4,51,51,51,51,-135,51,51,51,51,51,-114,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-126,-128,51,51,-97,51,-122,-124,-125,-129,51,51,51,51,51,-127,51,51,51,-113,-115,-98,-99,51,51,-123,51,-105,-106,51,51,51,51,51,51,51,51,51,51,-102,51,51,-100,-101,]),'SET_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[52,52,-3,52,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,52,52,-39,-40,-41,-2,52,-5,-6,52,52,-7,-8,-9,-22,-23,-24,52,52,52,52,52,52,52,52,52,52,52,52,-4,52,52,52,52,-135,52,52,52,52,52,-114,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-126,-128,52,52,-97,52,-122,-124,-125,-129,52,52,52,52,52,-127,52,52,52,-113,-115,-98,-99,52,52,-123,52,-105,-106,52,52,52,52,52,52,52,52,52,52,-102,52,52,-100,-101,]),'VAR':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[53,53,-3,53,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,53,53,-39,-40,-41,-2,53,-5,-6,53,53,-7,-8,-9,-22,-23,-24,53,53,53,53,53,53,53,53,53,53,53,53,-4,53,53,53,53,-135,53,53,53,53,53,-114,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-126,-128,53,53,-97,53,-122,-124,-125,-129,53,53,53,53,53,-127,53,53,53,-113,-115,-98,-99,53,53,-123,53,-105,-106,53,53,53,53,53,53,53,53,53,53,-102,53,53,-100,-101,]),'VOID':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,27,42,44,45,46,57,58,59,62,63,64,65,66,67,68,69,70,81,88,89,91,92,95,96,97,98,101,102,114,115,118,129,130,139,145,147,158,160,163,169,173,177,181,182,183,184,185,186,187,188,189,191,193,194,197,198,200,210,214,219,228,231,232,233,235,239,241,242,249,250,253,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[54,54,-3,54,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,54,54,-39,-40,-41,-2,54,-5,-6,54,54,-7,-8,-9,-22,-23,-24,54,54,54,54,54,54,54,54,54,54,54,54,-4,54,54,54,54,-135,54,54,54,54,54,-114,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-126,-128,54,54,-97,54,-122,-124,-125,-129,54,54,54,54,54,-127,54,54,54,-113,-115,-98,-99,54,54,-123,54,-105,-106,54,54,54,54,54,54,54,54,54,54,-102,54,54,-100,-101,]),'MINUS':([0,2,3,4,5,10,11,12,13,14,15,16,17,18,19,20,21,25,26,29,33,42,43,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,81,82,83,84,85,88,90,94,95,96,98,101,102,104,105,109,112,114,115,116,117,125,126,127,133,134,135,136,138,139,140,145,146,147,160,163,165,166,169,173,174,175,181,182,183,184,185,186,187,188,189,191,193,194,205,206,207,210,211,219,228,231,232,235,239,241,242,243,249,250,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[26,26,-3,26,61,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,26,-81,26,26,-77,-79,-80,-2,26,-5,26,26,-6,26,26,-7,-8,-9,-22,-23,-24,26,26,26,-78,-81,26,26,26,26,26,26,26,61,26,26,26,26,26,-79,-80,-81,61,26,-4,-71,-72,-74,-75,-76,61,61,61,61,-86,26,61,-135,-82,26,26,26,61,-81,26,-114,-84,-83,26,26,26,26,26,26,26,26,26,26,26,26,-79,-80,-81,26,26,-97,26,-122,-124,-129,26,26,26,61,26,26,26,26,26,-113,-115,-98,-99,26,26,-123,26,-105,-106,26,26,26,26,26,26,26,26,26,26,-102,26,26,-100,-101,]),'INT':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,26,33,42,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,82,83,84,85,88,90,95,96,98,101,102,114,115,139,145,147,160,163,169,173,181,182,183,184,185,186,187,188,189,191,193,194,210,211,219,228,231,232,235,239,241,242,249,250,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[55,55,-3,55,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,55,55,104,-2,55,-5,55,55,-6,104,104,-7,-8,-9,-22,-23,-24,55,55,55,104,55,55,55,55,104,55,104,104,104,55,104,104,-4,55,-135,104,55,205,104,-114,55,104,104,104,104,104,104,104,104,104,104,104,55,55,-97,55,-122,-124,-129,55,104,55,55,55,55,104,55,-113,-115,-98,-99,55,104,-123,55,-105,-106,55,55,104,55,55,55,55,55,55,55,-102,104,104,-100,-101,]),'DOUBLE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,26,33,42,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,81,82,83,84,85,88,90,95,96,98,101,102,114,115,139,145,147,160,163,169,173,181,182,183,184,185,186,187,188,189,191,193,194,210,211,219,228,231,232,235,239,241,242,249,250,255,258,259,263,264,270,271,276,283,286,290,291,292,293,294,298,299,300,301,302,303,309,310,311,315,316,317,318,],[56,56,-3,56,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,56,56,105,-2,56,-5,56,56,-6,105,105,-7,-8,-9,-22,-23,-24,56,56,56,105,56,56,56,56,105,56,105,105,105,56,105,105,-4,56,-135,105,56,206,105,-114,56,105,105,105,105,105,105,105,105,105,105,105,56,56,-97,56,-122,-124,-129,56,105,56,56,56,56,105,56,-113,-115,-98,-99,56,105,-123,56,-105,-106,56,56,105,56,56,56,56,56,56,56,-102,105,105,-100,-101,]),'LPARENTHESIS':([0,2,3,4,6,10,11,12,13,14,15,16,17,18,19,20,21,26,29,33,34,35,36,37,41,42,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,80,81,82,83,84,85,88,90,95,96,98,101,102,109,113,114,115,120,128,138,139,145,147,160,163,166,169,173,180,181,182,183,184,185,186,187,188,189,191,193,194,196,207,210,211,215,219,228,231,232,234,235,239,240,241,242,249,250,255,258,259,263,264,268,270,271,276,282,283,284,286,290,291,292,293,294,297,298,299,300,301,302,303,304,309,310,311,314,315,316,317,318,],[33,33,-3,33,64,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,33,88,33,95,96,97,98,102,114,-2,33,-5,33,33,-6,114,114,-7,-8,-9,-22,-23,-24,33,33,33,-26,-27,114,33,33,33,33,114,33,147,147,114,33,114,88,64,163,-4,64,-25,88,33,-135,147,33,163,88,114,-114,64,33,147,147,114,114,114,114,114,114,147,114,114,88,88,33,33,246,-97,33,-122,-124,-27,-129,33,-30,114,33,33,33,33,114,33,-113,-115,-28,-98,-99,33,-52,114,-29,-123,33,-105,-106,33,33,-31,114,33,33,33,33,33,-32,33,33,-102,-56,114,147,-100,-101,]),'$end':([0,1,2,3,10,11,12,13,14,15,16,17,18,19,20,21,57,59,62,65,66,67,68,69,70,115,145,173,181,219,231,232,235,249,263,264,270,271,286,291,292,311,317,318,],[-136,0,-1,-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-22,-23,-24,-4,-135,-114,-136,-97,-122,-124,-129,-136,-113,-115,-98,-99,-123,-105,-106,-102,-100,-101,]),'RBRACE':([3,4,10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,57,58,59,62,65,66,67,68,69,70,74,75,101,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,145,146,149,160,173,174,175,181,197,198,200,201,202,210,218,219,220,221,222,223,224,225,226,227,228,231,232,233,235,239,242,249,250,253,254,255,259,263,264,270,271,276,277,281,286,290,291,292,293,298,299,300,301,302,305,306,307,309,310,311,317,318,319,320,321,],[-3,-136,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-2,115,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-136,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-135,-82,-96,203,-114,-84,-83,-136,232,-126,-128,-131,235,-136,-95,-97,-93,-94,-87,-88,-89,-90,-91,-92,-136,-122,-124,-125,-129,-136,263,-136,271,-127,-130,-136,281,-113,-115,-98,-99,291,292,-121,-123,-136,-105,-106,-136,-136,-136,-136,311,-112,314,-58,-59,317,318,-102,-100,-101,-57,-60,-61,]),'SEMICOLON':([3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,42,43,55,56,57,59,62,65,66,67,68,69,70,74,75,77,80,86,87,93,103,104,105,106,107,108,109,110,111,112,115,116,117,119,125,126,127,128,131,133,134,135,136,138,139,145,146,149,151,173,174,175,181,195,218,219,220,221,222,223,224,225,226,227,229,231,232,234,235,240,243,249,263,264,267,268,270,271,281,282,284,286,291,292,294,297,303,304,311,312,314,317,318,],[-3,59,62,65,66,67,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,68,69,70,-73,-81,-134,-77,-79,-80,-2,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-26,-27,-103,-104,145,-133,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-33,-74,-75,-76,-25,-34,-35,-36,-37,-38,-86,-85,-135,-82,-96,191,-114,-84,-83,-136,231,-95,-97,-93,-94,-87,-88,-89,-90,-91,-92,251,-122,-124,253,-129,-30,264,-136,-113,-115,286,-28,-98,-99,-121,-52,-29,-123,-105,-106,-136,-31,313,-32,-102,70,-56,-100,-101,]),'DEFAULT':([3,10,11,12,13,14,15,16,17,18,19,20,21,57,59,62,65,66,67,68,69,70,115,145,173,181,219,231,232,235,249,256,257,263,264,270,271,278,286,291,292,294,303,311,312,313,317,318,],[-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-22,-23,-24,-4,-135,-114,-136,-97,-122,-124,-129,-136,279,-108,-113,-115,-98,-99,-107,-123,-105,-106,-136,-111,-102,-109,-110,-100,-101,]),'CASE':([3,10,11,12,13,14,15,16,17,18,19,20,21,57,59,62,65,66,67,68,69,70,115,145,173,181,219,231,232,235,238,249,256,257,263,264,270,271,278,286,291,292,294,303,311,312,313,317,318,],[-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-22,-23,-24,-4,-135,-114,-136,-97,-122,-124,-129,258,-136,258,-108,-113,-115,-98,-99,-107,-123,-105,-106,-136,-111,-102,-109,-110,-100,-101,]),'PLUS':([5,10,11,12,13,14,15,16,17,18,19,20,21,25,29,43,55,56,59,62,65,66,67,68,69,70,74,75,94,104,105,109,112,115,116,117,125,126,127,133,134,135,136,138,139,140,145,146,165,166,173,174,175,181,205,206,207,219,231,232,235,243,249,263,264,270,271,286,291,292,311,317,318,],[60,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-81,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,60,-79,-80,-81,60,-4,-71,-72,-74,-75,-76,60,60,60,60,-86,-85,60,-135,-82,60,-81,-114,-84,-83,-136,-79,-80,-81,-97,-122,-124,-129,60,-136,-113,-115,-98,-99,-123,-105,-106,-102,-100,-101,]),'ASSIGN_OPERATOR':([6,29,77,80,113,120,128,153,154,180,192,216,234,240,244,268,269,282,284,285,297,304,314,],[63,81,-26,-27,162,162,-25,193,194,162,-27,247,-27,-30,265,-28,287,-52,-29,296,-31,-32,-56,]),'TIMES':([10,11,12,13,14,15,16,17,18,19,20,21,25,29,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,109,115,116,117,125,126,127,138,139,145,146,166,173,174,175,181,205,206,207,219,231,232,235,249,263,264,270,271,286,291,292,311,317,318,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,71,-81,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-79,-80,-81,-4,71,71,-74,-75,-76,-86,-85,-135,-82,-81,-114,-84,-83,-136,-79,-80,-81,-97,-122,-124,-129,-136,-113,-115,-98,-99,-123,-105,-106,-102,-100,-101,]),'DIVIDE':([10,11,12,13,14,15,16,17,18,19,20,21,25,29,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,109,115,116,117,125,126,127,138,139,145,146,166,173,174,175,181,205,206,207,219,231,232,235,249,263,264,270,271,286,291,292,311,317,318,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,72,-81,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-79,-80,-81,-4,72,72,-74,-75,-76,-86,-85,-135,-82,-81,-114,-84,-83,-136,-79,-80,-81,-97,-122,-124,-129,-136,-113,-115,-98,-99,-123,-105,-106,-102,-100,-101,]),'MODULE':([10,11,12,13,14,15,16,17,18,19,20,21,25,29,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,109,115,116,117,125,126,127,138,139,145,146,166,173,174,175,181,205,206,207,219,231,232,235,249,263,264,270,271,286,291,292,311,317,318,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,73,-81,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-79,-80,-81,-4,73,73,-74,-75,-76,-86,-85,-135,-82,-81,-114,-84,-83,-136,-79,-80,-81,-97,-122,-124,-129,-136,-113,-115,-98,-99,-123,-105,-106,-102,-100,-101,]),'RPARENTHESIS':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,59,62,64,65,66,67,68,69,70,74,75,77,80,86,87,88,94,104,105,106,107,108,109,110,111,112,114,115,116,117,120,121,122,123,124,125,126,127,128,137,138,139,145,146,147,148,149,150,157,161,163,164,165,166,173,174,175,178,179,180,181,205,206,207,212,218,219,220,221,222,223,224,225,226,227,231,232,235,240,246,249,252,263,264,268,270,271,272,273,281,282,284,286,291,292,297,304,311,314,317,318,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-5,-6,-136,-7,-8,-9,-22,-23,-24,-78,-81,-26,-27,-103,-104,-136,146,-62,-63,-64,-65,-66,-67,-68,-69,-70,-136,-4,-71,-72,-119,168,-117,-118,-120,-74,-75,-76,-25,173,-86,-85,-135,-82,-136,181,-96,190,195,204,-136,208,146,-67,-114,-84,-83,218,-96,-119,-136,-62,-63,-67,-116,-95,-97,-93,-94,-87,-88,-89,-90,-91,-92,-122,-124,-129,-30,267,-136,275,-113,-115,-28,-98,-99,288,289,-121,-52,-29,-123,-105,-106,-31,-32,-102,-56,-100,-101,]),'COMMA':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,47,48,49,50,51,52,53,54,55,56,59,62,64,65,66,67,68,69,70,74,75,77,80,88,104,105,106,107,108,109,110,111,112,114,115,116,117,120,121,122,123,124,125,126,127,128,137,138,139,141,143,144,145,146,147,149,163,164,165,166,171,173,174,175,179,180,181,201,202,205,206,207,212,218,219,220,221,222,223,224,225,226,227,231,232,235,240,241,249,254,260,261,262,263,264,268,270,271,281,282,284,286,291,292,295,297,298,304,305,306,307,311,314,317,318,319,320,321,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-42,-43,-44,-45,-46,-49,-50,-51,-79,-80,-5,-6,-136,-7,-8,-9,-22,-23,-24,-78,-81,-26,-27,-136,-62,-63,-64,-65,-66,-67,-68,-69,-70,-136,-4,-71,-72,-119,169,-117,-118,-120,-74,-75,-76,-25,169,-86,-85,-47,-48,177,-135,-82,-136,-96,-136,169,-70,-67,214,-114,-84,-83,-120,-119,-136,-131,236,-62,-63,-67,-116,-95,-97,-93,-94,-87,-88,-89,-90,-91,-92,-122,-124,-129,-30,-136,-136,-130,283,-54,-55,-113,-115,-28,-98,-99,-121,-52,-29,-123,-105,-106,-53,-31,-136,-32,315,-58,-59,-102,-56,-100,-101,-57,-60,-61,]),'RBRACKET':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,140,145,146,173,174,175,181,219,231,232,235,241,249,260,261,262,263,264,270,271,281,286,291,292,295,311,317,318,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,175,-135,-82,-114,-84,-83,-136,-97,-122,-124,-129,-136,-136,282,-54,-55,-113,-115,-98,-99,-121,-123,-105,-106,-53,-102,-100,-101,]),'EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,145,146,149,165,173,174,175,179,181,219,231,232,235,249,263,264,270,271,281,286,291,292,311,317,318,320,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-135,-82,184,-70,-114,-84,-83,184,-136,-97,-122,-124,-129,-136,-113,-115,-98,-99,-121,-123,-105,-106,-102,-100,-101,184,]),'NOT_EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,145,146,149,165,173,174,175,179,181,219,231,232,235,249,263,264,270,271,281,286,291,292,311,317,318,320,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-135,-82,185,-70,-114,-84,-83,185,-136,-97,-122,-124,-129,-136,-113,-115,-98,-99,-121,-123,-105,-106,-102,-100,-101,185,]),'GREATER_THAN':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,47,48,49,50,51,52,53,54,55,56,59,62,65,66,67,68,69,70,74,75,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,141,142,143,145,146,149,165,167,170,173,174,175,179,181,217,219,231,232,235,245,249,263,264,270,271,281,286,291,292,311,317,318,320,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-42,-43,-44,-45,-46,-49,-50,-51,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-47,176,-48,-135,-82,186,-70,209,213,-114,-84,-83,186,-136,248,-97,-122,-124,-129,266,-136,-113,-115,-98,-99,-121,-123,-105,-106,-102,-100,-101,186,]),'LESS_THAN':([10,11,12,13,14,15,16,17,18,19,20,21,25,30,31,43,55,56,59,62,63,65,66,67,68,69,70,74,75,78,79,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,145,146,149,155,156,162,165,173,174,175,179,181,194,219,231,232,235,249,263,264,270,271,281,286,291,292,311,317,318,320,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,91,92,-77,-79,-80,-5,-6,118,-7,-8,-9,-22,-23,-24,-78,-81,129,130,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-135,-82,187,91,92,118,-70,-114,-84,-83,187,-136,118,-97,-122,-124,-129,-136,-113,-115,-98,-99,-121,-123,-105,-106,-102,-100,-101,187,]),'GREATER_THAN_OR_EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,145,146,149,165,173,174,175,179,181,219,231,232,235,249,263,264,270,271,281,286,291,292,311,317,318,320,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-135,-82,188,-70,-114,-84,-83,188,-136,-97,-122,-124,-129,-136,-113,-115,-98,-99,-121,-123,-105,-106,-102,-100,-101,188,]),'LESS_THAN_OR_EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,145,146,149,165,173,174,175,179,181,219,231,232,235,249,263,264,270,271,281,286,291,292,311,317,318,320,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-135,-82,189,-70,-114,-84,-83,189,-136,-97,-122,-124,-129,-136,-113,-115,-98,-99,-121,-123,-105,-106,-102,-100,-101,189,]),'AND':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,145,146,148,149,150,165,173,174,175,178,179,181,218,219,220,221,222,223,224,225,226,227,229,231,232,235,249,263,264,270,271,281,286,291,292,311,317,318,320,321,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-135,-82,182,-96,182,-70,-114,-84,-83,182,-96,-136,-95,-97,182,182,-87,-88,-89,-90,-91,-92,182,-122,-124,-129,-136,-113,-115,-98,-99,-121,-123,-105,-106,-102,-100,-101,-96,182,]),'OR':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,145,146,148,149,150,165,173,174,175,178,179,181,218,219,220,221,222,223,224,225,226,227,229,231,232,235,249,263,264,270,271,281,286,291,292,311,317,318,320,321,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-135,-82,183,-96,183,-70,-114,-84,-83,183,-96,-136,-95,-97,183,183,-87,-88,-89,-90,-91,-92,183,-122,-124,-129,-136,-113,-115,-98,-99,-121,-123,-105,-106,-102,-100,-101,-96,183,]),'COLON':([10,11,12,13,14,15,16,17,18,19,20,21,25,43,55,56,59,62,65,66,67,68,69,70,74,75,104,105,106,107,108,109,110,111,112,115,116,117,125,126,127,138,139,145,146,173,174,175,181,219,231,232,235,249,263,264,270,271,279,280,281,286,291,292,308,311,317,318,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-77,-79,-80,-5,-6,-7,-8,-9,-22,-23,-24,-78,-81,-62,-63,-64,-65,-66,-67,-68,-69,-70,-4,-71,-72,-74,-75,-76,-86,-85,-135,-82,-114,-84,-83,-136,-97,-122,-124,-129,-136,-113,-115,-98,-99,293,294,-121,-123,-105,-106,316,-102,-100,-101,]),'ELSE':([10,11,12,13,14,15,16,17,18,19,20,21,59,62,65,66,67,68,69,70,115,145,173,181,219,231,232,235,249,263,264,270,271,286,291,292,311,317,318,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-8,-9,-22,-23,-24,-4,-135,-114,-136,249,-122,-124,-129,-136,-113,-115,-98,-99,-123,-105,-106,-102,-100,-101,]),'PLUS_EQUALS':([29,153,],[82,82,]),'MINUS_EQUALS':([29,153,],[83,83,]),'TIMES_EQUALS':([29,153,],[84,84,]),'DIVIDE_EQUALS':([29,153,],[85,85,]),'INCREMENT':([29,274,],[86,86,]),'DECREMENT':([29,274,],[87,87,]),'LBRACKET':([29,75,109,166,207,209,247,265,],[90,90,90,90,90,241,241,241,]),'DOT':([29,75,109,132,166,207,],[89,89,89,172,89,89,]),'STRING':([32,42,63,64,81,88,95,96,98,102,114,147,163,169,182,183,184,185,186,187,188,189,191,193,194,241,258,283,298,315,316,],[93,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'BOOL':([42,63,64,81,88,95,96,98,102,114,147,163,169,182,183,184,185,186,187,188,189,191,193,194,241,258,283,298,315,316,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'NULL':([42,63,64,81,88,95,96,98,102,114,147,163,169,182,183,184,185,186,187,188,189,191,193,194,241,258,283,298,315,316,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'STDIN':([81,],[132,]),'ARROW':([168,],[211,]),'READ':([172,],[215,]),'IN':([192,],[230,]),'FINALLY':([203,],[237,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,4,101,210,228,239,255,290,293,294,299,300,],[2,58,160,242,250,259,276,301,302,303,309,310,]),'statement':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[3,57,3,57,3,174,57,219,3,3,3,57,270,57,3,57,57,3,3,3,3,3,57,57,57,57,57,]),'expression':([0,2,4,33,42,58,63,64,81,82,83,84,85,88,90,95,96,98,101,102,114,139,147,160,163,169,181,182,183,184,185,186,187,188,189,191,193,194,210,211,228,239,241,242,249,250,255,258,259,276,283,290,293,294,298,299,300,301,302,303,309,310,315,316,],[5,5,5,94,112,5,112,112,112,133,134,135,136,112,140,112,112,112,5,112,165,5,165,5,165,112,5,112,112,112,112,112,112,112,112,112,112,112,5,243,5,5,112,5,5,5,5,112,5,5,112,5,5,5,112,5,5,5,5,5,5,5,112,112,]),'declaration':([0,2,4,42,58,63,64,81,88,89,95,96,97,98,101,102,114,139,147,158,160,163,169,181,182,183,184,185,186,187,188,189,191,193,194,197,210,228,239,241,242,249,250,255,258,259,276,283,290,293,294,298,299,300,301,302,303,309,310,315,316,],[6,6,6,113,6,113,120,113,120,113,113,113,154,113,6,113,120,6,180,113,6,120,120,6,113,113,113,113,113,113,113,113,113,113,113,113,6,6,6,113,6,6,6,6,113,6,6,113,6,6,6,113,6,6,6,6,6,6,6,113,113,]),'assignation':([0,2,4,58,97,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[7,7,7,7,151,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'increment':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,251,255,259,276,290,293,294,299,300,301,302,303,309,310,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,272,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'decrement':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,251,255,259,276,290,293,294,299,300,301,302,303,309,310,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,273,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'import':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,4,42,58,63,64,81,88,89,95,96,98,101,102,114,139,147,158,160,163,169,181,182,183,184,185,186,187,188,189,191,193,194,197,210,228,239,241,242,249,250,255,258,259,276,283,290,293,294,298,299,300,301,302,303,309,310,315,316,],[11,11,11,110,11,110,110,110,110,139,110,110,110,11,110,110,11,110,200,11,110,110,11,110,110,110,110,110,110,110,110,110,110,110,200,11,11,11,110,11,11,11,11,110,11,11,110,11,11,11,110,11,11,11,11,11,11,11,110,110,]),'if':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'for':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'print':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'input':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'class_def':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'enum':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'empty':([0,2,4,58,64,88,101,114,139,147,160,163,181,210,228,239,241,242,249,250,255,259,276,290,293,294,298,299,300,301,302,303,309,310,],[21,21,21,21,123,123,21,123,21,123,21,123,21,21,21,21,262,21,21,21,21,21,21,21,21,21,307,21,21,21,21,21,21,21,]),'return':([0,2,4,58,101,139,160,181,210,228,239,242,249,250,255,259,276,290,293,294,299,300,301,302,303,309,310,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'term':([0,2,4,33,42,58,60,61,63,64,81,82,83,84,85,88,90,95,96,98,101,102,114,139,147,160,163,169,181,182,183,184,185,186,187,188,189,191,193,194,210,211,228,239,241,242,249,250,255,258,259,276,283,290,293,294,298,299,300,301,302,303,309,310,315,316,],[25,25,25,25,25,25,116,117,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'declaration_modifier':([0,2,4,42,58,63,64,81,88,89,95,96,97,98,101,102,114,139,147,158,160,163,169,181,182,183,184,185,186,187,188,189,191,193,194,197,210,228,239,241,242,249,250,255,258,259,276,283,290,293,294,298,299,300,301,302,303,309,310,315,316,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'varType':([0,2,4,27,42,58,63,64,81,88,89,91,92,95,96,97,98,101,102,114,118,129,130,139,147,158,160,163,169,177,181,182,183,184,185,186,187,188,189,191,193,194,197,210,214,228,239,241,242,249,250,255,258,259,276,283,290,293,294,298,299,300,301,302,303,309,310,315,316,],[28,28,28,76,28,28,28,28,28,28,28,142,144,28,28,152,28,28,28,28,167,170,171,28,28,199,28,28,28,217,28,28,28,28,28,28,28,28,28,28,28,28,199,28,245,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'factor':([0,2,4,26,33,42,58,60,61,63,64,71,72,73,81,82,83,84,85,88,90,95,96,98,101,102,114,139,147,160,163,169,181,182,183,184,185,186,187,188,189,191,193,194,210,211,228,239,241,242,249,250,255,258,259,276,283,290,293,294,298,299,300,301,302,303,309,310,315,316,],[43,43,43,74,43,43,43,43,43,43,43,125,126,127,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'variable':([42,63,64,81,88,95,96,98,102,114,147,163,169,182,183,184,185,186,187,188,189,191,193,194,241,258,283,298,315,316,],[103,119,124,131,124,149,149,157,161,124,179,124,124,149,149,222,223,224,225,226,227,149,131,119,261,280,295,308,308,320,]),'lambda':([42,63,64,81,88,95,96,98,102,114,147,163,169,182,183,184,185,186,187,188,189,191,193,194,241,258,283,298,315,316,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'parameters':([64,88,114,147,163,],[121,137,164,164,164,]),'parameter':([64,88,114,147,163,169,],[122,122,122,122,122,212,]),'booleanExpression':([95,96,147,182,183,191,316,],[148,150,178,220,221,229,321,]),'class_members':([158,],[197,]),'class_member':([158,197,],[198,233,]),'enum_values':([159,],[202,]),'list_literal':([209,247,265,],[240,268,284,]),'cases':([238,],[256,]),'case':([238,256,],[257,278,]),'list_elements':([241,],[260,]),'default_case':([256,],[277,]),'map_literal':([287,296,],[297,304,]),'map_elements':([298,],[305,]),'map_pair':([298,315,],[306,319,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analizadorSintax.py',22),
  ('statements -> statements statement','statements',2,'p_statements','analizadorSintax.py',26),
  ('statements -> statement','statements',1,'p_statements','analizadorSintax.py',27),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_statement_block','analizadorSintax.py',38),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','analizadorSintax.py',42),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement','analizadorSintax.py',43),
  ('statement -> assignation SEMICOLON','statement',2,'p_statement','analizadorSintax.py',44),
  ('statement -> increment SEMICOLON','statement',2,'p_statement','analizadorSintax.py',45),
  ('statement -> decrement SEMICOLON','statement',2,'p_statement','analizadorSintax.py',46),
  ('statement -> import','statement',1,'p_statement','analizadorSintax.py',47),
  ('statement -> function','statement',1,'p_statement','analizadorSintax.py',48),
  ('statement -> if','statement',1,'p_statement','analizadorSintax.py',49),
  ('statement -> while','statement',1,'p_statement','analizadorSintax.py',50),
  ('statement -> for','statement',1,'p_statement','analizadorSintax.py',51),
  ('statement -> print','statement',1,'p_statement','analizadorSintax.py',52),
  ('statement -> input','statement',1,'p_statement','analizadorSintax.py',53),
  ('statement -> class_def','statement',1,'p_statement','analizadorSintax.py',54),
  ('statement -> enum','statement',1,'p_statement','analizadorSintax.py',55),
  ('statement -> try','statement',1,'p_statement','analizadorSintax.py',56),
  ('statement -> switch','statement',1,'p_statement','analizadorSintax.py',57),
  ('statement -> empty','statement',1,'p_statement','analizadorSintax.py',58),
  ('statement -> return SEMICOLON','statement',2,'p_statement','analizadorSintax.py',59),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement','analizadorSintax.py',60),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','analizadorSintax.py',61),
  ('declaration -> declaration_modifier varType ID','declaration',3,'p_declaration','analizadorSintax.py',68),
  ('declaration -> declaration_modifier ID','declaration',2,'p_declaration','analizadorSintax.py',69),
  ('declaration -> varType ID','declaration',2,'p_declaration','analizadorSintax.py',70),
  ('declaration -> LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal','declaration',7,'p_declaration_list_init','analizadorSintax.py',79),
  ('declaration -> declaration_modifier LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal','declaration',8,'p_declaration_list_init','analizadorSintax.py',80),
  ('declaration -> declaration ASSIGN_OPERATOR LESS_THAN varType GREATER_THAN list_literal','declaration',6,'p_declaration_other_list_init','analizadorSintax.py',87),
  ('declaration -> MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal','declaration',9,'p_declaration_map_init','analizadorSintax.py',91),
  ('declaration -> declaration_modifier MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal','declaration',10,'p_declaration_map_init','analizadorSintax.py',92),
  ('assignation -> declaration ASSIGN_OPERATOR variable','assignation',3,'p_assignation','analizadorSintax.py',99),
  ('assignation -> ID ASSIGN_OPERATOR variable','assignation',3,'p_assignation_no_type','analizadorSintax.py',103),
  ('assignation -> ID PLUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',106),
  ('assignation -> ID MINUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',107),
  ('assignation -> ID TIMES_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',108),
  ('assignation -> ID DIVIDE_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',109),
  ('declaration_modifier -> CONST','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',113),
  ('declaration_modifier -> FINAL','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',114),
  ('declaration_modifier -> LATE','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',115),
  ('varType -> INT_TYPE','varType',1,'p_varType','analizadorSintax.py',122),
  ('varType -> STRING_TYPE','varType',1,'p_varType','analizadorSintax.py',123),
  ('varType -> NUM_TYPE','varType',1,'p_varType','analizadorSintax.py',124),
  ('varType -> DOUBLE_TYPE','varType',1,'p_varType','analizadorSintax.py',125),
  ('varType -> BOOL_TYPE','varType',1,'p_varType','analizadorSintax.py',126),
  ('varType -> LIST_TYPE','varType',1,'p_varType','analizadorSintax.py',127),
  ('varType -> MAP_TYPE','varType',1,'p_varType','analizadorSintax.py',128),
  ('varType -> SET_TYPE','varType',1,'p_varType','analizadorSintax.py',129),
  ('varType -> VAR','varType',1,'p_varType','analizadorSintax.py',130),
  ('varType -> VOID','varType',1,'p_varType','analizadorSintax.py',131),
  ('list_literal -> LBRACKET list_elements RBRACKET','list_literal',3,'p_list_literal','analizadorSintax.py',138),
  ('list_elements -> list_elements COMMA variable','list_elements',3,'p_list_elements','analizadorSintax.py',142),
  ('list_elements -> variable','list_elements',1,'p_list_elements','analizadorSintax.py',143),
  ('list_elements -> empty','list_elements',1,'p_list_elements','analizadorSintax.py',144),
  ('map_literal -> LBRACE map_elements RBRACE','map_literal',3,'p_map_literal','analizadorSintax.py',153),
  ('map_elements -> map_elements COMMA map_pair','map_elements',3,'p_map_elements','analizadorSintax.py',157),
  ('map_elements -> map_pair','map_elements',1,'p_map_elements','analizadorSintax.py',158),
  ('map_elements -> empty','map_elements',1,'p_map_elements','analizadorSintax.py',159),
  ('map_pair -> variable COLON variable','map_pair',3,'p_map_pair','analizadorSintax.py',168),
  ('map_pair -> variable COLON booleanExpression','map_pair',3,'p_map_pair','analizadorSintax.py',169),
  ('variable -> INT','variable',1,'p_variable','analizadorSintax.py',177),
  ('variable -> DOUBLE','variable',1,'p_variable','analizadorSintax.py',178),
  ('variable -> STRING','variable',1,'p_variable','analizadorSintax.py',179),
  ('variable -> BOOL','variable',1,'p_variable','analizadorSintax.py',180),
  ('variable -> NULL','variable',1,'p_variable','analizadorSintax.py',181),
  ('variable -> ID','variable',1,'p_variable','analizadorSintax.py',182),
  ('variable -> function','variable',1,'p_variable','analizadorSintax.py',183),
  ('variable -> lambda','variable',1,'p_variable','analizadorSintax.py',184),
  ('variable -> expression','variable',1,'p_variable','analizadorSintax.py',185),
  ('expression -> expression PLUS term','expression',3,'p_expression_operations','analizadorSintax.py',192),
  ('expression -> expression MINUS term','expression',3,'p_expression_operations','analizadorSintax.py',193),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintax.py',197),
  ('term -> term TIMES factor','term',3,'p_term_operations','analizadorSintax.py',201),
  ('term -> term DIVIDE factor','term',3,'p_term_operations','analizadorSintax.py',202),
  ('term -> term MODULE factor','term',3,'p_term_operations','analizadorSintax.py',203),
  ('term -> factor','term',1,'p_term_factor','analizadorSintax.py',207),
  ('factor -> MINUS factor','factor',2,'p_factor_unary_minus','analizadorSintax.py',211),
  ('factor -> INT','factor',1,'p_factor_numeric','analizadorSintax.py',215),
  ('factor -> DOUBLE','factor',1,'p_factor_numeric','analizadorSintax.py',216),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintax.py',223),
  ('factor -> LPARENTHESIS expression RPARENTHESIS','factor',3,'p_factor_parens','analizadorSintax.py',227),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_variable_array_access','analizadorSintax.py',231),
  ('factor -> ID DOT function statement','factor',4,'p_variable_member_access','analizadorSintax.py',235),
  ('factor -> ID DOT function','factor',3,'p_variable_member_access','analizadorSintax.py',236),
  ('factor -> ID DOT ID','factor',3,'p_variable_member_access','analizadorSintax.py',237),
  ('booleanExpression -> variable EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',248),
  ('booleanExpression -> variable NOT_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',249),
  ('booleanExpression -> variable GREATER_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',250),
  ('booleanExpression -> variable LESS_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',251),
  ('booleanExpression -> variable GREATER_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',252),
  ('booleanExpression -> variable LESS_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',253),
  ('booleanExpression -> booleanExpression AND booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',257),
  ('booleanExpression -> booleanExpression OR booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',258),
  ('booleanExpression -> LPARENTHESIS booleanExpression RPARENTHESIS','booleanExpression',3,'p_boolean_expression_paren','analizadorSintax.py',262),
  ('booleanExpression -> variable','booleanExpression',1,'p_boolean_expression_variable','analizadorSintax.py',266),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement','if',5,'p_if','analizadorSintax.py',275),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statement','if',7,'p_if_else','analizadorSintax.py',279),
  ('while -> WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACE','while',7,'p_while','analizadorSintax.py',284),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',289),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',290),
  ('for -> FOR LPARENTHESIS varType ID IN ID RPARENTHESIS LBRACE statements RBRACE','for',10,'p_for_in','analizadorSintax.py',294),
  ('increment -> ID INCREMENT','increment',2,'p_increment','analizadorSintax.py',298),
  ('decrement -> ID DECREMENT','decrement',2,'p_decrement','analizadorSintax.py',302),
  ('try -> TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACE','try',8,'p_try','analizadorSintax.py',307),
  ('switch -> SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACE','switch',8,'p_switch','analizadorSintax.py',312),
  ('cases -> cases case','cases',2,'p_cases','analizadorSintax.py',316),
  ('cases -> case','cases',1,'p_cases','analizadorSintax.py',317),
  ('case -> CASE variable COLON statements BREAK','case',5,'p_case','analizadorSintax.py',324),
  ('case -> CASE variable COLON statements SEMICOLON','case',5,'p_case','analizadorSintax.py',325),
  ('case -> CASE variable COLON statements','case',4,'p_case','analizadorSintax.py',326),
  ('default_case -> DEFAULT COLON statements','default_case',3,'p_default_case','analizadorSintax.py',330),
  ('function -> declaration LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE','function',7,'p_function','analizadorSintax.py',338),
  ('function -> ID LPARENTHESIS parameters RPARENTHESIS','function',4,'p_function','analizadorSintax.py',339),
  ('function -> declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLON','function',7,'p_function_arrow','analizadorSintax.py',342),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','analizadorSintax.py',345),
  ('parameters -> parameter','parameters',1,'p_parameters','analizadorSintax.py',346),
  ('parameters -> empty','parameters',1,'p_parameters','analizadorSintax.py',347),
  ('parameter -> declaration','parameter',1,'p_parameter','analizadorSintax.py',356),
  ('parameter -> variable','parameter',1,'p_parameter','analizadorSintax.py',357),
  ('lambda -> LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE','lambda',6,'p_lambda','analizadorSintax.py',361),
  ('print -> PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLON','print',5,'p_print','analizadorSintax.py',369),
  ('input -> ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLON','input',8,'p_input','analizadorSintax.py',372),
  ('class_def -> CLASS ID LBRACE class_members RBRACE','class_def',5,'p_class_def','analizadorSintax.py',379),
  ('class_members -> class_members class_member','class_members',2,'p_class_members','analizadorSintax.py',382),
  ('class_members -> class_member','class_members',1,'p_class_members','analizadorSintax.py',383),
  ('class_member -> varType ID SEMICOLON','class_member',3,'p_class_member','analizadorSintax.py',386),
  ('class_member -> function','class_member',1,'p_class_member','analizadorSintax.py',387),
  ('enum -> ENUM ID LBRACE enum_values RBRACE','enum',5,'p_enum','analizadorSintax.py',394),
  ('enum_values -> enum_values COMMA ID','enum_values',3,'p_enum_values','analizadorSintax.py',397),
  ('enum_values -> ID','enum_values',1,'p_enum_values','analizadorSintax.py',398),
  ('typedef -> TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLON','typedef',9,'p_typedef','analizadorSintax.py',401),
  ('return -> RETURN variable','return',2,'p_return','analizadorSintax.py',408),
  ('return -> RETURN','return',1,'p_return','analizadorSintax.py',409),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizadorSintax.py',416),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintax.py',420),
]
