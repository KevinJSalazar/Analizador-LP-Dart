
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIFXnonassocELSEABSTRACT AND ARROW ASSIGN_OPERATOR BOOL BOOL_TYPE BREAK CASE CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQUALS DOT DOUBLE DOUBLE_TYPE ELSE ENUM EQUALS EXPORT FALSE FINAL FINALLY FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF IMPORT IN INCREMENT INT INT_TYPE LATE LBRACE LBRACKET LESS_THAN LESS_THAN_OR_EQUALS LIST_TYPE LPARENTHESIS MAP_TYPE MINUS MINUS_EQUALS MODULE NOT NOT_EQUALS NULL NULL_TYPE NUM_TYPE OR PLUS PLUS_EQUALS PRINT RBRACE RBRACKET READ RETURN RPARENTHESIS SEMICOLON SET_TYPE STATIC STDIN STRING STRING_TYPE SWITCH TIMES TIMES_EQUALS TRUE TRY TYPEDEF VAR VOID WHILEprogram : statementsstatements : statements statement\n| statementstatement : LBRACE statements RBRACEstatement : expression SEMICOLON\n| declaration SEMICOLON\n| assignation SEMICOLON\n| increment SEMICOLON\n| decrement SEMICOLON\n| import\n| function\n| if\n| while\n| for\n| print\n| input\n| class_def\n| enum\n| try\n| switch\n| empty\n| return SEMICOLON\n| CONTINUE SEMICOLON\n| BREAK SEMICOLONdeclaration : declaration_with_modifier\n| declaration_without_modifierdeclaration_with_modifier : declaration_modifier varType ID\n| declaration_modifier IDdeclaration_without_modifier : varType IDdeclaration : LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal\n| declaration_modifier LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literaldeclaration : declaration ASSIGN_OPERATOR LESS_THAN varType GREATER_THAN list_literaldeclaration : MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal\n| declaration_modifier MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literaldeclaration : SET_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR set_literal\n| declaration_modifier SET_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR set_literalset_literal : LBRACE list_elements RBRACEassignation : declaration ASSIGN_OPERATOR variableassignation : ID ASSIGN_OPERATOR variableassignation : ID PLUS_EQUALS expression\n| ID MINUS_EQUALS expression\n| ID TIMES_EQUALS expression\n| ID DIVIDE_EQUALS expressiondeclaration_modifier : CONST \n| FINAL\n| LATEvarType : INT_TYPE \n| STRING_TYPE \n| NUM_TYPE \n| DOUBLE_TYPE \n| BOOL_TYPE \n| LIST_TYPE \n| MAP_TYPE \n| SET_TYPE\n| VAR\n| VOIDlist_literal : LBRACKET list_elements RBRACKETlist_elements : list_elements COMMA variable\n| variable\n| emptymap_literal : LBRACE map_elements RBRACEmap_elements : map_elements COMMA map_pair\n| map_pair\n| emptymap_pair : variable COLON variable\n| variable COLON booleanExpressionvariable : INT \n| DOUBLE \n| STRING \n| BOOL  \n| NULL\n| ID\n| function\n| lambda\n| expressionexpression : expression PLUS term\n| expression MINUS termexpression : termterm : term TIMES factor\n| term DIVIDE factor\n| term MODULE factorterm : factorfactor : MINUS factorfactor : INT\n| DOUBLEfactor : IDfactor : LPARENTHESIS expression RPARENTHESISfactor : ID LBRACKET expression RBRACKETfactor : ID DOT function statement\n| ID DOT function\n| ID DOT IDbooleanExpression : variable EQUALS variable\n| variable NOT_EQUALS variable\n| variable GREATER_THAN variable\n| variable LESS_THAN variable\n| variable GREATER_THAN_OR_EQUALS variable\n| variable LESS_THAN_OR_EQUALS variablebooleanExpression : booleanExpression AND booleanExpression\n| booleanExpression OR booleanExpressionbooleanExpression : LPARENTHESIS booleanExpression RPARENTHESISbooleanExpression : variableif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement %prec IFXif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statementwhile : WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE\n| FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS varType ID IN ID RPARENTHESIS for_in_blockfor_in_block : LBRACE for_in_scope statements RBRACEfor_in_scope :increment : ID INCREMENTdecrement : ID DECREMENTtry : TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACEswitch : SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACEcases : cases case\n| casecase : CASE variable COLON statements BREAK\n| CASE variable COLON statements SEMICOLON\n| CASE variable COLON statementsdefault_case : DEFAULT COLON statementsfunction : varType ID LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE\n| ID LPARENTHESIS parameters RPARENTHESISfunction : declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLONparameters : parameters COMMA parameter\n| parameter\n| emptyparameter : declaration\n| variablelambda : LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACEprint : PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLONinput : ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLONclass_def : CLASS ID LBRACE class_members RBRACEclass_members : class_members class_member\n| class_memberclass_member : varType ID SEMICOLON\n| functionenum : ENUM ID LBRACE enum_values RBRACEenum_values : enum_values COMMA ID\n| IDtypedef : TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLONreturn : RETURN variable\n| RETURNimport : IMPORT STRING SEMICOLONempty :'
    
_lr_action_items = {'LBRACE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,43,59,60,61,64,67,68,69,70,71,72,103,104,105,122,149,157,170,184,195,204,218,222,227,235,244,247,248,251,253,255,260,266,267,268,273,277,281,283,287,291,292,296,297,305,306,310,312,313,314,315,316,317,318,319,321,325,326,327,328,329,335,336,337,343,344,345,],[4,4,-3,4,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,105,-2,4,-5,-6,-7,-8,-9,-22,-23,-24,168,169,4,-4,4,-142,4,-121,4,244,254,255,260,-102,4,-129,-131,-136,273,4,4,290,4,4,4,4,-122,4,290,-103,-104,315,4,-120,-130,323,325,326,-107,-109,-112,-113,4,4,323,4,4,4,4,4,4,4,4,-105,-106,-108,]),'CONTINUE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[23,23,-3,23,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,23,-5,-6,-7,-8,-9,-22,-23,-24,23,-4,23,-142,23,-121,23,-102,23,-129,-131,-136,23,23,23,23,23,23,-122,23,-103,-104,23,-120,-130,-107,-109,-112,-113,23,23,23,23,23,23,23,23,23,23,-105,-106,-108,]),'BREAK':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[24,24,-3,24,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,24,-5,-6,-7,-8,-9,-22,-23,-24,24,-4,24,-142,24,-121,24,-102,24,-129,-131,-136,24,24,24,24,24,24,-122,24,-103,-104,24,-120,-130,-107,-109,-112,-113,24,24,24,24,24,24,338,24,24,24,-105,-106,-108,]),'LIST_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[29,29,-3,29,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,90,119,-44,-45,-46,-2,29,-5,-6,119,29,-7,-8,-9,-22,-23,-24,136,119,29,119,136,136,119,119,119,119,29,119,29,-4,136,29,29,136,136,136,-142,29,119,29,29,29,-121,136,29,119,119,119,119,119,119,119,119,119,119,119,119,-133,-135,136,-102,29,-129,-131,-132,-136,29,119,29,29,29,-134,29,119,29,-122,29,119,-103,-104,29,119,-120,-130,-107,-109,-112,-113,29,29,119,29,29,29,29,29,29,29,29,119,119,-105,-106,-108,]),'MAP_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[33,33,-3,33,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,93,120,-44,-45,-46,-2,33,-5,-6,120,33,-7,-8,-9,-22,-23,-24,138,120,33,120,138,138,120,120,120,120,33,120,33,-4,138,33,33,138,138,138,-142,33,120,33,33,33,-121,138,33,120,120,120,120,120,120,120,120,120,120,120,120,-133,-135,138,-102,33,-129,-131,-132,-136,33,120,33,33,33,-134,33,120,33,-122,33,120,-103,-104,33,120,-120,-130,-107,-109,-112,-113,33,33,120,33,33,33,33,33,33,33,33,120,120,-105,-106,-108,]),'SET_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[34,34,-3,34,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,94,121,-44,-45,-46,-2,34,-5,-6,121,34,-7,-8,-9,-22,-23,-24,139,121,34,121,139,139,121,121,121,121,34,121,34,-4,139,34,34,139,139,139,-142,34,121,34,34,34,-121,139,34,121,121,121,121,121,121,121,121,121,121,121,121,-133,-135,139,-102,34,-129,-131,-132,-136,34,121,34,34,34,-134,34,121,34,-122,34,121,-103,-104,34,121,-120,-130,-107,-109,-112,-113,34,34,121,34,34,34,34,34,34,34,34,121,121,-105,-106,-108,]),'ID':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,26,29,30,32,33,34,36,41,42,45,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,82,83,84,87,88,89,90,91,93,94,99,100,101,102,105,106,117,119,120,121,122,132,140,149,157,159,164,168,169,170,172,179,181,184,191,195,196,197,198,199,200,201,202,203,205,207,208,211,212,213,214,224,229,231,235,244,246,247,248,249,251,252,255,257,260,265,267,268,269,271,273,276,277,281,283,286,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[31,31,-3,31,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,77,-52,79,92,-53,-54,77,103,104,113,-44,-45,-46,-47,-48,-49,-50,-51,-55,-56,-2,31,-5,77,77,-6,113,113,-7,-8,-9,-22,-23,-24,77,77,77,113,77,77,77,77,113,148,77,-52,152,-53,-54,113,113,165,113,31,113,175,-52,-53,-54,-4,180,113,31,-142,113,206,210,215,31,221,113,226,-121,233,31,113,113,113,113,113,113,113,113,113,113,113,210,-133,250,-135,77,262,264,-102,31,270,-129,-131,-132,-136,272,31,113,31,288,31,31,295,-134,31,113,31,-122,31,308,113,-103,-104,31,113,-120,-130,-107,-109,-112,-113,31,31,113,31,31,31,31,31,31,31,31,113,113,-105,-106,-108,]),'IMPORT':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[35,35,-3,35,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,35,-5,-6,-7,-8,-9,-22,-23,-24,35,-4,35,-142,35,-121,35,-102,35,-129,-131,-136,35,35,35,35,35,35,-122,35,-103,-104,35,-120,-130,-107,-109,-112,-113,35,35,35,35,35,35,35,35,35,35,-105,-106,-108,]),'IF':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[37,37,-3,37,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,37,-5,-6,-7,-8,-9,-22,-23,-24,37,-4,37,-142,37,-121,37,-102,37,-129,-131,-136,37,37,37,37,37,37,-122,37,-103,-104,37,-120,-130,-107,-109,-112,-113,37,37,37,37,37,37,37,37,37,37,-105,-106,-108,]),'WHILE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[38,38,-3,38,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,38,-5,-6,-7,-8,-9,-22,-23,-24,38,-4,38,-142,38,-121,38,-102,38,-129,-131,-136,38,38,38,38,38,38,-122,38,-103,-104,38,-120,-130,-107,-109,-112,-113,38,38,38,38,38,38,38,38,38,38,-105,-106,-108,]),'FOR':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[39,39,-3,39,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,39,-5,-6,-7,-8,-9,-22,-23,-24,39,-4,39,-142,39,-121,39,-102,39,-129,-131,-136,39,39,39,39,39,39,-122,39,-103,-104,39,-120,-130,-107,-109,-112,-113,39,39,39,39,39,39,39,39,39,39,-105,-106,-108,]),'PRINT':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[40,40,-3,40,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,40,-5,-6,-7,-8,-9,-22,-23,-24,40,-4,40,-142,40,-121,40,-102,40,-129,-131,-136,40,40,40,40,40,40,-122,40,-103,-104,40,-120,-130,-107,-109,-112,-113,40,40,40,40,40,40,40,40,40,40,-105,-106,-108,]),'CLASS':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[41,41,-3,41,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,41,-5,-6,-7,-8,-9,-22,-23,-24,41,-4,41,-142,41,-121,41,-102,41,-129,-131,-136,41,41,41,41,41,41,-122,41,-103,-104,41,-120,-130,-107,-109,-112,-113,41,41,41,41,41,41,41,41,41,41,-105,-106,-108,]),'ENUM':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[42,42,-3,42,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,42,-5,-6,-7,-8,-9,-22,-23,-24,42,-4,42,-142,42,-121,42,-102,42,-129,-131,-136,42,42,42,42,42,42,-122,42,-103,-104,42,-120,-130,-107,-109,-112,-113,42,42,42,42,42,42,42,42,42,42,-105,-106,-108,]),'TRY':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[43,43,-3,43,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,43,-5,-6,-7,-8,-9,-22,-23,-24,43,-4,43,-142,43,-121,43,-102,43,-129,-131,-136,43,43,43,43,43,43,-122,43,-103,-104,43,-120,-130,-107,-109,-112,-113,43,43,43,43,43,43,43,43,43,43,-105,-106,-108,]),'SWITCH':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[44,44,-3,44,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,44,-5,-6,-7,-8,-9,-22,-23,-24,44,-4,44,-142,44,-121,44,-102,44,-129,-131,-136,44,44,44,44,44,44,-122,44,-103,-104,44,-120,-130,-107,-109,-112,-113,44,44,44,44,44,44,44,44,44,44,-105,-106,-108,]),'RETURN':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,59,60,61,64,67,68,69,70,71,72,105,122,149,157,170,184,195,235,244,247,248,251,255,260,267,268,273,277,281,283,291,292,297,305,306,314,315,316,317,318,319,325,326,327,328,329,335,336,337,343,344,345,],[45,45,-3,45,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,45,-5,-6,-7,-8,-9,-22,-23,-24,45,-4,45,-142,45,-121,45,-102,45,-129,-131,-136,45,45,45,45,45,45,-122,45,-103,-104,45,-120,-130,-107,-109,-112,-113,45,45,45,45,45,45,45,45,45,45,-105,-106,-108,]),'CONST':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,45,59,60,61,64,65,66,67,68,69,70,71,72,80,87,88,99,100,101,102,105,106,117,122,140,149,157,159,168,170,172,179,184,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[47,47,-3,47,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,47,-2,47,-5,-6,47,47,-7,-8,-9,-22,-23,-24,47,47,47,47,47,47,47,47,47,47,-4,47,47,-142,47,47,47,47,47,-121,47,47,47,47,47,47,47,47,47,47,47,47,47,-133,-135,-102,47,-129,-131,-132,-136,47,47,47,47,47,-134,47,47,47,-122,47,47,-103,-104,47,47,-120,-130,-107,-109,-112,-113,47,47,47,47,47,47,47,47,47,47,47,47,47,-105,-106,-108,]),'FINAL':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,45,59,60,61,64,65,66,67,68,69,70,71,72,80,87,88,99,100,101,102,105,106,117,122,140,149,157,159,168,170,172,179,184,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[48,48,-3,48,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,48,-2,48,-5,-6,48,48,-7,-8,-9,-22,-23,-24,48,48,48,48,48,48,48,48,48,48,-4,48,48,-142,48,48,48,48,48,-121,48,48,48,48,48,48,48,48,48,48,48,48,48,-133,-135,-102,48,-129,-131,-132,-136,48,48,48,48,48,-134,48,48,48,-122,48,48,-103,-104,48,48,-120,-130,-107,-109,-112,-113,48,48,48,48,48,48,48,48,48,48,48,48,48,-105,-106,-108,]),'LATE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,45,59,60,61,64,65,66,67,68,69,70,71,72,80,87,88,99,100,101,102,105,106,117,122,140,149,157,159,168,170,172,179,184,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[49,49,-3,49,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,49,-2,49,-5,-6,49,49,-7,-8,-9,-22,-23,-24,49,49,49,49,49,49,49,49,49,49,-4,49,49,-142,49,49,49,49,49,-121,49,49,49,49,49,49,49,49,49,49,49,49,49,-133,-135,-102,49,-129,-131,-132,-136,49,49,49,49,49,-134,49,49,49,-122,49,49,-103,-104,49,49,-120,-130,-107,-109,-112,-113,49,49,49,49,49,49,49,49,49,49,49,49,49,-105,-106,-108,]),'INT_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[50,50,-3,50,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,50,50,-44,-45,-46,-2,50,-5,-6,50,50,-7,-8,-9,-22,-23,-24,50,50,50,50,50,50,50,50,50,50,50,50,50,-4,50,50,50,50,50,50,-142,50,50,50,50,50,-121,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-133,-135,50,-102,50,-129,-131,-132,-136,50,50,50,50,50,-134,50,50,50,-122,50,50,-103,-104,50,50,-120,-130,-107,-109,-112,-113,50,50,50,50,50,50,50,50,50,50,50,50,50,-105,-106,-108,]),'STRING_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[51,51,-3,51,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,51,51,-44,-45,-46,-2,51,-5,-6,51,51,-7,-8,-9,-22,-23,-24,51,51,51,51,51,51,51,51,51,51,51,51,51,-4,51,51,51,51,51,51,-142,51,51,51,51,51,-121,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-133,-135,51,-102,51,-129,-131,-132,-136,51,51,51,51,51,-134,51,51,51,-122,51,51,-103,-104,51,51,-120,-130,-107,-109,-112,-113,51,51,51,51,51,51,51,51,51,51,51,51,51,-105,-106,-108,]),'NUM_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[52,52,-3,52,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,52,52,-44,-45,-46,-2,52,-5,-6,52,52,-7,-8,-9,-22,-23,-24,52,52,52,52,52,52,52,52,52,52,52,52,52,-4,52,52,52,52,52,52,-142,52,52,52,52,52,-121,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-133,-135,52,-102,52,-129,-131,-132,-136,52,52,52,52,52,-134,52,52,52,-122,52,52,-103,-104,52,52,-120,-130,-107,-109,-112,-113,52,52,52,52,52,52,52,52,52,52,52,52,52,-105,-106,-108,]),'DOUBLE_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[53,53,-3,53,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,53,53,-44,-45,-46,-2,53,-5,-6,53,53,-7,-8,-9,-22,-23,-24,53,53,53,53,53,53,53,53,53,53,53,53,53,-4,53,53,53,53,53,53,-142,53,53,53,53,53,-121,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-133,-135,53,-102,53,-129,-131,-132,-136,53,53,53,53,53,-134,53,53,53,-122,53,53,-103,-104,53,53,-120,-130,-107,-109,-112,-113,53,53,53,53,53,53,53,53,53,53,53,53,53,-105,-106,-108,]),'BOOL_TYPE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[54,54,-3,54,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,54,54,-44,-45,-46,-2,54,-5,-6,54,54,-7,-8,-9,-22,-23,-24,54,54,54,54,54,54,54,54,54,54,54,54,54,-4,54,54,54,54,54,54,-142,54,54,54,54,54,-121,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-133,-135,54,-102,54,-129,-131,-132,-136,54,54,54,54,54,-134,54,54,54,-122,54,54,-103,-104,54,54,-120,-130,-107,-109,-112,-113,54,54,54,54,54,54,54,54,54,54,54,54,54,-105,-106,-108,]),'VAR':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[55,55,-3,55,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,55,55,-44,-45,-46,-2,55,-5,-6,55,55,-7,-8,-9,-22,-23,-24,55,55,55,55,55,55,55,55,55,55,55,55,55,-4,55,55,55,55,55,55,-142,55,55,55,55,55,-121,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-133,-135,55,-102,55,-129,-131,-132,-136,55,55,55,55,55,-134,55,55,55,-122,55,55,-103,-104,55,55,-120,-130,-107,-109,-112,-113,55,55,55,55,55,55,55,55,55,55,55,55,55,-105,-106,-108,]),'VOID':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,32,45,47,48,49,59,60,61,64,65,66,67,68,69,70,71,72,78,80,87,88,95,96,99,100,101,102,105,106,117,122,125,140,149,151,153,154,157,159,168,170,172,179,184,190,195,196,197,198,199,200,201,202,203,205,207,208,211,212,214,230,235,244,247,248,249,251,255,257,260,267,268,271,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[56,56,-3,56,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,56,56,-44,-45,-46,-2,56,-5,-6,56,56,-7,-8,-9,-22,-23,-24,56,56,56,56,56,56,56,56,56,56,56,56,56,-4,56,56,56,56,56,56,-142,56,56,56,56,56,-121,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-133,-135,56,-102,56,-129,-131,-132,-136,56,56,56,56,56,-134,56,56,56,-122,56,56,-103,-104,56,56,-120,-130,-107,-109,-112,-113,56,56,56,56,56,56,56,56,56,56,56,56,56,-105,-106,-108,]),'MINUS':([0,2,3,4,5,10,11,12,13,14,15,16,17,18,19,20,21,25,26,31,36,45,46,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,87,89,98,99,100,102,105,106,108,109,113,116,117,122,123,124,133,134,135,140,143,144,145,146,148,149,150,157,158,159,170,172,174,175,179,184,185,186,195,196,197,198,199,200,201,202,203,205,207,208,219,220,221,224,235,244,247,248,251,255,257,258,260,267,268,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[26,26,-3,26,63,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,26,-86,26,26,-82,-84,-85,-2,26,-5,26,26,-6,26,26,-7,-8,-9,-22,-23,-24,26,26,26,-83,-86,26,26,26,26,26,26,26,63,26,26,26,26,26,-84,-85,-86,63,26,-4,-76,-77,-79,-80,-81,26,63,63,63,63,-91,26,63,-142,-87,26,26,26,63,-86,26,-121,-89,-88,26,26,26,26,26,26,26,26,26,26,26,26,-84,-85,-86,26,-102,26,-129,-131,-136,26,26,63,26,26,26,26,26,26,-122,26,26,-103,-104,26,26,-120,-130,-107,-109,-112,-113,26,26,26,26,26,26,26,26,26,26,26,26,26,-105,-106,-108,]),'INT':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,26,36,45,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,82,83,84,87,89,99,100,102,105,106,117,122,140,149,157,159,170,172,179,184,195,196,197,198,199,200,201,202,203,205,207,208,224,235,244,247,248,251,255,257,260,267,268,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[57,57,-3,57,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,57,57,108,-2,57,-5,57,57,-6,108,108,-7,-8,-9,-22,-23,-24,57,57,57,108,57,57,57,57,108,57,108,108,108,57,108,108,-4,108,57,-142,108,57,219,108,-121,57,108,108,108,108,108,108,108,108,108,108,108,57,-102,57,-129,-131,-136,57,108,57,57,57,57,108,57,-122,57,108,-103,-104,57,108,-120,-130,-107,-109,-112,-113,57,57,108,57,57,57,57,57,57,57,57,108,108,-105,-106,-108,]),'DOUBLE':([0,2,3,4,10,11,12,13,14,15,16,17,18,19,20,21,26,36,45,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,81,82,83,84,87,89,99,100,102,105,106,117,122,140,149,157,159,170,172,179,184,195,196,197,198,199,200,201,202,203,205,207,208,224,235,244,247,248,251,255,257,260,267,268,273,276,277,281,283,290,291,292,297,304,305,306,314,315,316,317,318,319,323,325,326,327,328,329,335,336,337,341,342,343,344,345,],[58,58,-3,58,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,58,58,109,-2,58,-5,58,58,-6,109,109,-7,-8,-9,-22,-23,-24,58,58,58,109,58,58,58,58,109,58,109,109,109,58,109,109,-4,109,58,-142,109,58,220,109,-121,58,109,109,109,109,109,109,109,109,109,109,109,58,-102,58,-129,-131,-136,58,109,58,58,58,58,109,58,-122,58,109,-103,-104,58,109,-120,-130,-107,-109,-112,-113,58,58,109,58,58,58,58,58,58,58,58,109,109,-105,-106,-108,]),'LPARENTHESIS':([0,2,3,4,6,10,11,12,13,14,15,16,17,18,19,20,21,26,27,28,31,36,37,38,39,40,44,45,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,79,80,81,82,83,84,87,89,92,99,100,102,105,106,113,117,118,122,127,140,148,149,152,157,159,170,172,175,179,180,184,194,195,196,197,198,199,200,201,202,203,205,207,208,210,221,224,228,235,244,247,248,250,251,255,256,257,260,267,268,273,276,277,281,282,283,289,290,291,292,297,303,304,305,306,307,309,314,315,316,317,318,319,322,323,324,325,326,327,328,329,330,335,336,337,340,341,342,343,344,345,],[36,36,-3,36,66,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,36,-25,-26,87,36,99,100,101,102,106,117,-2,36,-5,36,36,-6,117,117,-7,-8,-9,-22,-23,-24,36,36,36,140,117,36,36,36,36,117,36,-28,159,159,117,36,117,87,172,66,-4,66,117,87,36,-27,-142,159,36,172,87,117,140,-121,66,36,159,159,117,117,117,117,117,117,159,117,117,87,87,36,261,-102,36,-129,-131,140,-136,36,-32,117,36,36,36,36,117,36,-122,-30,36,-35,117,-103,-104,36,-57,117,-120,-130,-31,-36,-107,-109,-112,-113,36,36,-33,117,-37,36,36,36,36,36,-34,36,36,36,-61,117,159,-105,-106,-108,]),'$end':([0,1,2,3,10,11,12,13,14,15,16,17,18,19,20,21,59,61,64,67,68,69,70,71,72,122,157,184,195,235,247,248,251,267,281,291,292,305,306,314,316,317,343,344,345,],[-143,0,-1,-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-22,-23,-24,-4,-142,-121,-143,-102,-129,-131,-136,-143,-122,-103,-104,-120,-130,-107,-112,-113,-105,-106,-108,]),'RBRACE':([3,4,10,11,12,13,14,15,16,17,18,19,20,21,25,46,57,58,59,60,61,64,67,68,69,70,71,72,76,77,105,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,148,149,157,158,161,170,184,185,186,195,211,212,214,215,216,234,235,236,237,238,239,240,241,242,243,244,247,248,249,251,255,260,267,268,271,272,273,277,279,280,281,283,290,291,292,297,298,302,305,306,311,314,315,316,317,318,320,323,325,326,327,328,331,332,333,335,336,337,343,344,345,346,347,348,],[-3,-143,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-2,122,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-143,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,-101,217,-121,-89,-88,-143,248,-133,-135,-138,251,-100,-102,-98,-99,-92,-93,-94,-95,-96,-97,-143,-129,-131,-132,-136,-143,-143,-143,292,-134,-137,-143,302,-59,-60,-122,305,-143,-103,-104,316,317,-128,-120,-130,324,-107,-109,-112,-113,-143,-58,-143,-143,-143,-143,-119,340,-63,-64,343,344,345,-105,-106,-108,-62,-65,-66,]),'SEMICOLON':([3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,31,45,46,57,58,59,61,64,67,68,69,70,71,72,76,77,79,85,86,92,97,107,108,109,110,111,112,113,114,115,116,122,123,124,126,133,134,135,141,143,144,145,146,148,149,152,157,158,161,163,184,185,186,195,209,234,235,236,237,238,239,240,241,242,243,245,247,248,250,251,256,258,267,281,282,284,289,291,292,302,303,305,306,307,309,314,316,317,319,322,324,329,330,338,340,343,344,345,],[-3,61,64,67,68,69,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,70,71,72,-78,-25,-26,-86,-141,-82,-84,-85,-2,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-29,-110,-111,-28,157,-140,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-38,-79,-80,-81,-39,-40,-41,-42,-43,-91,-90,-27,-142,-87,-101,205,-121,-89,-88,-143,247,-100,-102,-98,-99,-92,-93,-94,-95,-96,-97,269,-129,-131,271,-136,-32,281,-143,-122,-30,306,-35,-103,-104,-128,-57,-120,-130,-31,-36,-107,-112,-113,-143,-33,-37,339,-34,72,-61,-105,-106,-108,]),'DEFAULT':([3,10,11,12,13,14,15,16,17,18,19,20,21,59,61,64,67,68,69,70,71,72,122,157,184,195,235,247,248,251,267,274,275,281,291,292,299,305,306,314,316,317,319,329,338,339,343,344,345,],[-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-22,-23,-24,-4,-142,-121,-143,-102,-129,-131,-136,-143,300,-115,-122,-103,-104,-114,-120,-130,-107,-112,-113,-143,-118,-116,-117,-105,-106,-108,]),'CASE':([3,10,11,12,13,14,15,16,17,18,19,20,21,59,61,64,67,68,69,70,71,72,122,157,184,195,235,247,248,251,254,267,274,275,281,291,292,299,305,306,314,316,317,319,329,338,339,343,344,345,],[-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-5,-6,-7,-8,-9,-22,-23,-24,-4,-142,-121,-143,-102,-129,-131,-136,276,-143,276,-115,-122,-103,-104,-114,-120,-130,-107,-112,-113,-143,-118,-116,-117,-105,-106,-108,]),'PLUS':([5,10,11,12,13,14,15,16,17,18,19,20,21,25,31,46,57,58,61,64,67,68,69,70,71,72,76,77,98,108,109,113,116,122,123,124,133,134,135,143,144,145,146,148,149,150,157,158,174,175,184,185,186,195,219,220,221,235,247,248,251,258,267,281,291,292,305,306,314,316,317,343,344,345,],[62,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-86,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,62,-84,-85,-86,62,-4,-76,-77,-79,-80,-81,62,62,62,62,-91,-90,62,-142,-87,62,-86,-121,-89,-88,-143,-84,-85,-86,-102,-129,-131,-136,62,-143,-122,-103,-104,-120,-130,-107,-112,-113,-105,-106,-108,]),'ASSIGN_OPERATOR':([6,27,28,31,79,92,118,127,152,165,166,180,194,206,226,233,250,256,262,264,282,288,289,303,307,308,309,322,324,330,340,],[65,-25,-26,80,-29,-28,176,176,-27,207,208,-29,176,-29,259,266,-29,-32,285,287,-30,310,-35,-57,-31,321,-36,-33,-37,-34,-61,]),'TIMES':([10,11,12,13,14,15,16,17,18,19,20,21,25,31,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,113,122,123,124,133,134,135,148,149,157,158,175,184,185,186,195,219,220,221,235,247,248,251,267,281,291,292,305,306,314,316,317,343,344,345,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,73,-86,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-84,-85,-86,-4,73,73,-79,-80,-81,-91,-90,-142,-87,-86,-121,-89,-88,-143,-84,-85,-86,-102,-129,-131,-136,-143,-122,-103,-104,-120,-130,-107,-112,-113,-105,-106,-108,]),'DIVIDE':([10,11,12,13,14,15,16,17,18,19,20,21,25,31,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,113,122,123,124,133,134,135,148,149,157,158,175,184,185,186,195,219,220,221,235,247,248,251,267,281,291,292,305,306,314,316,317,343,344,345,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,74,-86,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-84,-85,-86,-4,74,74,-79,-80,-81,-91,-90,-142,-87,-86,-121,-89,-88,-143,-84,-85,-86,-102,-129,-131,-136,-143,-122,-103,-104,-120,-130,-107,-112,-113,-105,-106,-108,]),'MODULE':([10,11,12,13,14,15,16,17,18,19,20,21,25,31,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,113,122,123,124,133,134,135,148,149,157,158,175,184,185,186,195,219,220,221,235,247,248,251,267,281,291,292,305,306,314,316,317,343,344,345,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,75,-86,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-84,-85,-86,-4,75,75,-79,-80,-81,-91,-90,-142,-87,-86,-121,-89,-88,-143,-84,-85,-86,-102,-129,-131,-136,-143,-122,-103,-104,-120,-130,-107,-112,-113,-105,-106,-108,]),'RPARENTHESIS':([10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,46,57,58,61,64,66,67,68,69,70,71,72,76,77,79,85,86,87,92,98,108,109,110,111,112,113,114,115,116,117,122,123,124,127,128,129,130,131,133,134,135,140,147,148,149,152,157,158,159,160,161,162,167,171,172,173,174,175,180,182,184,185,186,192,193,194,195,219,220,221,225,234,235,236,237,238,239,240,241,242,243,247,248,251,256,261,267,270,281,282,289,291,292,293,294,302,303,305,306,307,309,314,316,317,322,324,330,340,343,344,345,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-25,-26,-82,-84,-85,-5,-6,-143,-7,-8,-9,-22,-23,-24,-83,-86,-29,-110,-111,-143,-28,158,-67,-68,-69,-70,-71,-72,-73,-74,-75,-143,-4,-76,-77,-126,178,-124,-125,-127,-79,-80,-81,-143,184,-91,-90,-27,-142,-87,-143,195,-101,204,209,218,-143,222,158,-72,-29,227,-121,-89,-88,234,-101,-126,-143,-67,-68,-72,-123,-100,-102,-98,-99,-92,-93,-94,-95,-96,-97,-129,-131,-136,-32,284,-143,296,-122,-30,-35,-103,-104,312,313,-128,-57,-120,-130,-31,-36,-107,-112,-113,-33,-37,-34,-61,-105,-106,-108,]),'COMMA':([10,11,12,13,14,15,16,17,18,19,20,21,25,27,28,46,50,51,52,53,54,55,56,57,58,61,64,66,67,68,69,70,71,72,76,77,79,87,92,108,109,110,111,112,113,114,115,116,117,122,123,124,127,128,129,130,131,133,134,135,136,138,139,140,147,148,149,152,155,157,158,159,161,172,173,174,175,180,182,184,185,186,188,193,194,195,215,216,219,220,221,225,234,235,236,237,238,239,240,241,242,243,247,248,251,256,257,267,272,278,279,280,281,282,289,290,291,292,302,303,305,306,307,309,311,314,316,317,320,322,323,324,330,331,332,333,340,343,344,345,346,347,348,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-25,-26,-82,-47,-48,-49,-50,-51,-55,-56,-84,-85,-5,-6,-143,-7,-8,-9,-22,-23,-24,-83,-86,-29,-143,-28,-67,-68,-69,-70,-71,-72,-73,-74,-75,-143,-4,-76,-77,-126,179,-124,-125,-127,-79,-80,-81,-52,-53,-54,-143,179,-91,-90,-27,190,-142,-87,-143,-101,-143,179,-75,-72,-29,179,-121,-89,-88,230,-127,-126,-143,-138,252,-67,-68,-72,-123,-100,-102,-98,-99,-92,-93,-94,-95,-96,-97,-129,-131,-136,-32,-143,-143,-137,304,-59,-60,-122,-30,-35,-143,-103,-104,-128,-57,-120,-130,-31,-36,304,-107,-112,-113,-58,-33,-143,-37,-34,341,-63,-64,-61,-105,-106,-108,-62,-65,-66,]),'RBRACKET':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,148,149,150,157,158,184,185,186,195,235,247,248,251,257,267,278,279,280,281,291,292,302,305,306,314,316,317,320,343,344,345,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,186,-142,-87,-121,-89,-88,-143,-102,-129,-131,-136,-143,-143,303,-59,-60,-122,-103,-104,-128,-120,-130,-107,-112,-113,-58,-105,-106,-108,]),'EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,148,149,157,158,161,174,184,185,186,193,195,235,247,248,251,267,281,291,292,302,305,306,314,316,317,343,344,345,347,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,198,-75,-121,-89,-88,198,-143,-102,-129,-131,-136,-143,-122,-103,-104,-128,-120,-130,-107,-112,-113,-105,-106,-108,198,]),'NOT_EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,148,149,157,158,161,174,184,185,186,193,195,235,247,248,251,267,281,291,292,302,305,306,314,316,317,343,344,345,347,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,199,-75,-121,-89,-88,199,-143,-102,-129,-131,-136,-143,-122,-103,-104,-128,-120,-130,-107,-112,-113,-105,-106,-108,199,]),'GREATER_THAN':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,50,51,52,53,54,55,56,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,136,137,138,139,148,149,156,157,158,161,174,177,184,185,186,187,189,193,195,232,235,247,248,251,263,267,281,291,292,302,305,306,314,316,317,343,344,345,347,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-47,-48,-49,-50,-51,-55,-56,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-52,181,-53,-54,-91,-90,191,-142,-87,200,-75,223,-121,-89,-88,229,231,200,-143,265,-102,-129,-131,-136,286,-143,-122,-103,-104,-128,-120,-130,-107,-112,-113,-105,-106,-108,200,]),'LESS_THAN':([10,11,12,13,14,15,16,17,18,19,20,21,25,29,33,34,46,57,58,61,64,65,67,68,69,70,71,72,76,77,90,93,94,108,109,110,111,112,113,114,115,116,119,120,121,122,123,124,133,134,135,148,149,157,158,161,174,176,184,185,186,193,195,208,235,247,248,251,267,281,291,292,302,305,306,314,316,317,343,344,345,347,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,78,95,96,-82,-84,-85,-5,-6,125,-7,-8,-9,-22,-23,-24,-83,-86,151,153,154,-67,-68,-69,-70,-71,-72,-73,-74,-75,78,95,96,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,201,-75,125,-121,-89,-88,201,-143,125,-102,-129,-131,-136,-143,-122,-103,-104,-128,-120,-130,-107,-112,-113,-105,-106,-108,201,]),'GREATER_THAN_OR_EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,148,149,157,158,161,174,184,185,186,193,195,235,247,248,251,267,281,291,292,302,305,306,314,316,317,343,344,345,347,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,202,-75,-121,-89,-88,202,-143,-102,-129,-131,-136,-143,-122,-103,-104,-128,-120,-130,-107,-112,-113,-105,-106,-108,202,]),'LESS_THAN_OR_EQUALS':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,148,149,157,158,161,174,184,185,186,193,195,235,247,248,251,267,281,291,292,302,305,306,314,316,317,343,344,345,347,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,203,-75,-121,-89,-88,203,-143,-102,-129,-131,-136,-143,-122,-103,-104,-128,-120,-130,-107,-112,-113,-105,-106,-108,203,]),'AND':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,148,149,157,158,160,161,162,174,184,185,186,192,193,195,234,235,236,237,238,239,240,241,242,243,245,247,248,251,267,281,291,292,302,305,306,314,316,317,343,344,345,347,348,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,196,-101,196,-75,-121,-89,-88,196,-101,-143,-100,-102,196,196,-92,-93,-94,-95,-96,-97,196,-129,-131,-136,-143,-122,-103,-104,-128,-120,-130,-107,-112,-113,-105,-106,-108,-101,196,]),'OR':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,148,149,157,158,160,161,162,174,184,185,186,192,193,195,234,235,236,237,238,239,240,241,242,243,245,247,248,251,267,281,291,292,302,305,306,314,316,317,343,344,345,347,348,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,197,-101,197,-75,-121,-89,-88,197,-101,-143,-100,-102,197,197,-92,-93,-94,-95,-96,-97,197,-129,-131,-136,-143,-122,-103,-104,-128,-120,-130,-107,-112,-113,-105,-106,-108,-101,197,]),'COLON':([10,11,12,13,14,15,16,17,18,19,20,21,25,46,57,58,61,64,67,68,69,70,71,72,76,77,108,109,110,111,112,113,114,115,116,122,123,124,133,134,135,148,149,157,158,184,185,186,195,235,247,248,251,267,281,291,292,300,301,302,305,306,314,316,317,334,343,344,345,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-78,-82,-84,-85,-5,-6,-7,-8,-9,-22,-23,-24,-83,-86,-67,-68,-69,-70,-71,-72,-73,-74,-75,-4,-76,-77,-79,-80,-81,-91,-90,-142,-87,-121,-89,-88,-143,-102,-129,-131,-136,-143,-122,-103,-104,318,319,-128,-120,-130,-107,-112,-113,342,-105,-106,-108,]),'ELSE':([10,11,12,13,14,15,16,17,18,19,20,21,61,64,67,68,69,70,71,72,122,157,184,195,235,247,248,251,267,281,291,292,305,306,314,316,317,343,344,345,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-8,-9,-22,-23,-24,-4,-142,-121,-143,267,-129,-131,-136,-143,-122,-103,-104,-120,-130,-107,-112,-113,-105,-106,-108,]),'PLUS_EQUALS':([31,165,],[81,81,]),'MINUS_EQUALS':([31,165,],[82,82,]),'TIMES_EQUALS':([31,165,],[83,83,]),'DIVIDE_EQUALS':([31,165,],[84,84,]),'INCREMENT':([31,295,],[85,85,]),'DECREMENT':([31,295,],[86,86,]),'LBRACKET':([31,77,113,175,221,223,259,285,],[89,89,89,89,89,257,257,257,]),'DOT':([31,77,113,142,175,221,],[88,88,88,183,88,88,]),'STRING':([35,45,65,66,80,87,99,100,102,106,117,140,159,172,179,196,197,198,199,200,201,202,203,205,207,208,257,276,290,304,323,341,342,],[97,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'BOOL':([45,65,66,80,87,99,100,102,106,117,140,159,172,179,196,197,198,199,200,201,202,203,205,207,208,257,276,290,304,323,341,342,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'NULL':([45,65,66,80,87,99,100,102,106,117,140,159,172,179,196,197,198,199,200,201,202,203,205,207,208,257,276,290,304,323,341,342,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'STDIN':([80,],[142,]),'ARROW':([178,],[224,]),'READ':([183,],[228,]),'IN':([206,],[246,]),'FINALLY':([217,],[253,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,4,105,244,255,260,273,318,319,325,326,327,],[2,60,170,268,277,283,297,328,329,335,336,337,]),'statement':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[3,59,3,59,3,185,59,235,3,3,3,291,59,3,59,59,59,3,3,3,3,3,59,59,59,59,59,]),'expression':([0,2,4,36,45,60,65,66,80,81,82,83,84,87,89,99,100,102,105,106,117,140,149,159,170,172,179,195,196,197,198,199,200,201,202,203,205,207,208,224,244,255,257,260,267,268,273,276,277,283,290,297,304,318,319,323,325,326,327,328,329,335,336,337,341,342,],[5,5,5,98,116,5,116,116,116,143,144,145,146,116,150,116,116,116,5,116,174,116,5,174,5,174,116,5,116,116,116,116,116,116,116,116,116,116,116,258,5,5,116,5,5,5,5,116,5,5,116,5,116,5,5,116,5,5,5,5,5,5,5,5,116,116,]),'declaration':([0,2,4,45,60,65,66,80,87,88,99,100,101,102,105,106,117,140,149,159,168,170,172,179,195,196,197,198,199,200,201,202,203,205,207,208,211,244,255,257,260,267,268,273,276,277,283,290,297,304,318,319,323,325,326,327,328,329,335,336,337,341,342,],[6,6,6,118,6,118,127,118,127,118,118,118,166,118,6,118,127,127,6,194,118,6,127,127,6,118,118,118,118,118,118,118,118,118,118,118,118,6,6,118,6,6,6,6,118,6,6,118,6,118,6,6,118,6,6,6,6,6,6,6,6,118,118,]),'assignation':([0,2,4,60,101,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[7,7,7,7,163,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'increment':([0,2,4,60,105,149,170,195,244,255,260,267,268,269,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[8,8,8,8,8,8,8,8,8,8,8,8,8,293,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'decrement':([0,2,4,60,105,149,170,195,244,255,260,267,268,269,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[9,9,9,9,9,9,9,9,9,9,9,9,9,294,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'import':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,4,45,60,65,66,80,87,88,99,100,102,105,106,117,140,149,159,168,170,172,179,195,196,197,198,199,200,201,202,203,205,207,208,211,244,255,257,260,267,268,273,276,277,283,290,297,304,318,319,323,325,326,327,328,329,335,336,337,341,342,],[11,11,11,114,11,114,114,114,114,149,114,114,114,11,114,114,114,11,114,214,11,114,114,11,114,114,114,114,114,114,114,114,114,114,114,214,11,11,114,11,11,11,11,114,11,11,114,11,114,11,11,114,11,11,11,11,11,11,11,11,114,114,]),'if':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'for':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'print':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'input':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'class_def':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'enum':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'empty':([0,2,4,60,66,87,105,117,140,149,159,170,172,195,244,255,257,260,267,268,273,277,283,290,297,318,319,323,325,326,327,328,329,335,336,337,],[21,21,21,21,130,130,21,130,130,21,130,21,130,21,21,21,280,21,21,21,21,21,21,280,21,21,21,333,21,21,21,21,21,21,21,21,]),'return':([0,2,4,60,105,149,170,195,244,255,260,267,268,273,277,283,297,318,319,325,326,327,328,329,335,336,337,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'term':([0,2,4,36,45,60,62,63,65,66,80,81,82,83,84,87,89,99,100,102,105,106,117,140,149,159,170,172,179,195,196,197,198,199,200,201,202,203,205,207,208,224,244,255,257,260,267,268,273,276,277,283,290,297,304,318,319,323,325,326,327,328,329,335,336,337,341,342,],[25,25,25,25,25,25,123,124,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'declaration_with_modifier':([0,2,4,45,60,65,66,80,87,88,99,100,101,102,105,106,117,140,149,159,168,170,172,179,195,196,197,198,199,200,201,202,203,205,207,208,211,244,255,257,260,267,268,273,276,277,283,290,297,304,318,319,323,325,326,327,328,329,335,336,337,341,342,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'declaration_without_modifier':([0,2,4,45,60,65,66,80,87,88,99,100,101,102,105,106,117,140,149,159,168,170,172,179,195,196,197,198,199,200,201,202,203,205,207,208,211,244,255,257,260,267,268,273,276,277,283,290,297,304,318,319,323,325,326,327,328,329,335,336,337,341,342,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'varType':([0,2,4,32,45,60,65,66,78,80,87,88,95,96,99,100,101,102,105,106,117,125,140,149,151,153,154,159,168,170,172,179,190,195,196,197,198,199,200,201,202,203,205,207,208,211,230,244,255,257,260,267,268,273,276,277,283,290,297,304,318,319,323,325,326,327,328,329,335,336,337,341,342,],[30,30,30,91,30,30,30,132,137,30,132,30,155,156,30,30,164,30,30,30,132,177,132,30,187,188,189,30,213,30,132,132,232,30,30,30,30,30,30,30,30,30,30,30,30,213,263,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'declaration_modifier':([0,2,4,45,60,65,66,80,87,88,99,100,101,102,105,106,117,140,149,159,168,170,172,179,195,196,197,198,199,200,201,202,203,205,207,208,211,244,255,257,260,267,268,273,276,277,283,290,297,304,318,319,323,325,326,327,328,329,335,336,337,341,342,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'factor':([0,2,4,26,36,45,60,62,63,65,66,73,74,75,80,81,82,83,84,87,89,99,100,102,105,106,117,140,149,159,170,172,179,195,196,197,198,199,200,201,202,203,205,207,208,224,244,255,257,260,267,268,273,276,277,283,290,297,304,318,319,323,325,326,327,328,329,335,336,337,341,342,],[46,46,46,76,46,46,46,46,46,46,46,133,134,135,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'variable':([45,65,66,80,87,99,100,102,106,117,140,159,172,179,196,197,198,199,200,201,202,203,205,207,208,257,276,290,304,323,341,342,],[107,126,131,141,131,161,161,167,171,131,131,193,131,131,161,161,238,239,240,241,242,243,161,141,126,279,301,279,320,334,334,347,]),'lambda':([45,65,66,80,87,99,100,102,106,117,140,159,172,179,196,197,198,199,200,201,202,203,205,207,208,257,276,290,304,323,341,342,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'parameters':([66,87,117,140,159,172,],[128,147,173,182,173,173,]),'parameter':([66,87,117,140,159,172,179,],[129,129,129,129,129,129,225,]),'booleanExpression':([99,100,159,196,197,205,342,],[160,162,192,236,237,245,348,]),'class_members':([168,],[211,]),'class_member':([168,211,],[212,249,]),'enum_values':([169,],[216,]),'list_literal':([223,259,285,],[256,282,307,]),'cases':([254,],[274,]),'case':([254,274,],[275,299,]),'list_elements':([257,290,],[278,311,]),'set_literal':([266,287,],[289,309,]),'default_case':([274,],[298,]),'for_in_block':([296,],[314,]),'map_literal':([310,321,],[322,330,]),'for_in_scope':([315,],[327,]),'map_elements':([323,],[331,]),'map_pair':([323,341,],[332,346,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analizadorSintax.py',18),
  ('statements -> statements statement','statements',2,'p_statements','analizadorSintax.py',22),
  ('statements -> statement','statements',1,'p_statements','analizadorSintax.py',23),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_statement_block','analizadorSintax.py',30),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','analizadorSintax.py',34),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement','analizadorSintax.py',35),
  ('statement -> assignation SEMICOLON','statement',2,'p_statement','analizadorSintax.py',36),
  ('statement -> increment SEMICOLON','statement',2,'p_statement','analizadorSintax.py',37),
  ('statement -> decrement SEMICOLON','statement',2,'p_statement','analizadorSintax.py',38),
  ('statement -> import','statement',1,'p_statement','analizadorSintax.py',39),
  ('statement -> function','statement',1,'p_statement','analizadorSintax.py',40),
  ('statement -> if','statement',1,'p_statement','analizadorSintax.py',41),
  ('statement -> while','statement',1,'p_statement','analizadorSintax.py',42),
  ('statement -> for','statement',1,'p_statement','analizadorSintax.py',43),
  ('statement -> print','statement',1,'p_statement','analizadorSintax.py',44),
  ('statement -> input','statement',1,'p_statement','analizadorSintax.py',45),
  ('statement -> class_def','statement',1,'p_statement','analizadorSintax.py',46),
  ('statement -> enum','statement',1,'p_statement','analizadorSintax.py',47),
  ('statement -> try','statement',1,'p_statement','analizadorSintax.py',48),
  ('statement -> switch','statement',1,'p_statement','analizadorSintax.py',49),
  ('statement -> empty','statement',1,'p_statement','analizadorSintax.py',50),
  ('statement -> return SEMICOLON','statement',2,'p_statement','analizadorSintax.py',51),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement','analizadorSintax.py',52),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','analizadorSintax.py',53),
  ('declaration -> declaration_with_modifier','declaration',1,'p_declaration','analizadorSintax.py',57),
  ('declaration -> declaration_without_modifier','declaration',1,'p_declaration','analizadorSintax.py',58),
  ('declaration_with_modifier -> declaration_modifier varType ID','declaration_with_modifier',3,'p_declaration_with_modifier','analizadorSintax.py',63),
  ('declaration_with_modifier -> declaration_modifier ID','declaration_with_modifier',2,'p_declaration_with_modifier','analizadorSintax.py',64),
  ('declaration_without_modifier -> varType ID','declaration_without_modifier',2,'p_declaration_without_modifier','analizadorSintax.py',85),
  ('declaration -> LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal','declaration',7,'p_declaration_list_init','analizadorSintax.py',97),
  ('declaration -> declaration_modifier LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal','declaration',8,'p_declaration_list_init','analizadorSintax.py',98),
  ('declaration -> declaration ASSIGN_OPERATOR LESS_THAN varType GREATER_THAN list_literal','declaration',6,'p_declaration_other_list_init','analizadorSintax.py',133),
  ('declaration -> MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal','declaration',9,'p_declaration_map_init','analizadorSintax.py',137),
  ('declaration -> declaration_modifier MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal','declaration',10,'p_declaration_map_init','analizadorSintax.py',138),
  ('declaration -> SET_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR set_literal','declaration',7,'p_declaration_set_init','analizadorSintax.py',168),
  ('declaration -> declaration_modifier SET_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR set_literal','declaration',8,'p_declaration_set_init','analizadorSintax.py',169),
  ('set_literal -> LBRACE list_elements RBRACE','set_literal',3,'p_set_literal','analizadorSintax.py',196),
  ('assignation -> declaration ASSIGN_OPERATOR variable','assignation',3,'p_assignation','analizadorSintax.py',200),
  ('assignation -> ID ASSIGN_OPERATOR variable','assignation',3,'p_assignation_no_type','analizadorSintax.py',227),
  ('assignation -> ID PLUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',232),
  ('assignation -> ID MINUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',233),
  ('assignation -> ID TIMES_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',234),
  ('assignation -> ID DIVIDE_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',235),
  ('declaration_modifier -> CONST','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',239),
  ('declaration_modifier -> FINAL','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',240),
  ('declaration_modifier -> LATE','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',241),
  ('varType -> INT_TYPE','varType',1,'p_varType','analizadorSintax.py',245),
  ('varType -> STRING_TYPE','varType',1,'p_varType','analizadorSintax.py',246),
  ('varType -> NUM_TYPE','varType',1,'p_varType','analizadorSintax.py',247),
  ('varType -> DOUBLE_TYPE','varType',1,'p_varType','analizadorSintax.py',248),
  ('varType -> BOOL_TYPE','varType',1,'p_varType','analizadorSintax.py',249),
  ('varType -> LIST_TYPE','varType',1,'p_varType','analizadorSintax.py',250),
  ('varType -> MAP_TYPE','varType',1,'p_varType','analizadorSintax.py',251),
  ('varType -> SET_TYPE','varType',1,'p_varType','analizadorSintax.py',252),
  ('varType -> VAR','varType',1,'p_varType','analizadorSintax.py',253),
  ('varType -> VOID','varType',1,'p_varType','analizadorSintax.py',254),
  ('list_literal -> LBRACKET list_elements RBRACKET','list_literal',3,'p_list_literal','analizadorSintax.py',258),
  ('list_elements -> list_elements COMMA variable','list_elements',3,'p_list_elements','analizadorSintax.py',262),
  ('list_elements -> variable','list_elements',1,'p_list_elements','analizadorSintax.py',263),
  ('list_elements -> empty','list_elements',1,'p_list_elements','analizadorSintax.py',264),
  ('map_literal -> LBRACE map_elements RBRACE','map_literal',3,'p_map_literal','analizadorSintax.py',273),
  ('map_elements -> map_elements COMMA map_pair','map_elements',3,'p_map_elements','analizadorSintax.py',277),
  ('map_elements -> map_pair','map_elements',1,'p_map_elements','analizadorSintax.py',278),
  ('map_elements -> empty','map_elements',1,'p_map_elements','analizadorSintax.py',279),
  ('map_pair -> variable COLON variable','map_pair',3,'p_map_pair','analizadorSintax.py',288),
  ('map_pair -> variable COLON booleanExpression','map_pair',3,'p_map_pair','analizadorSintax.py',289),
  ('variable -> INT','variable',1,'p_variable','analizadorSintax.py',293),
  ('variable -> DOUBLE','variable',1,'p_variable','analizadorSintax.py',294),
  ('variable -> STRING','variable',1,'p_variable','analizadorSintax.py',295),
  ('variable -> BOOL','variable',1,'p_variable','analizadorSintax.py',296),
  ('variable -> NULL','variable',1,'p_variable','analizadorSintax.py',297),
  ('variable -> ID','variable',1,'p_variable','analizadorSintax.py',298),
  ('variable -> function','variable',1,'p_variable','analizadorSintax.py',299),
  ('variable -> lambda','variable',1,'p_variable','analizadorSintax.py',300),
  ('variable -> expression','variable',1,'p_variable','analizadorSintax.py',301),
  ('expression -> expression PLUS term','expression',3,'p_expression_operations','analizadorSintax.py',317),
  ('expression -> expression MINUS term','expression',3,'p_expression_operations','analizadorSintax.py',318),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintax.py',322),
  ('term -> term TIMES factor','term',3,'p_term_operations','analizadorSintax.py',326),
  ('term -> term DIVIDE factor','term',3,'p_term_operations','analizadorSintax.py',327),
  ('term -> term MODULE factor','term',3,'p_term_operations','analizadorSintax.py',328),
  ('term -> factor','term',1,'p_term_factor','analizadorSintax.py',332),
  ('factor -> MINUS factor','factor',2,'p_factor_unary_minus','analizadorSintax.py',336),
  ('factor -> INT','factor',1,'p_factor_numeric','analizadorSintax.py',340),
  ('factor -> DOUBLE','factor',1,'p_factor_numeric','analizadorSintax.py',341),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintax.py',348),
  ('factor -> LPARENTHESIS expression RPARENTHESIS','factor',3,'p_factor_parens','analizadorSintax.py',352),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_variable_array_access','analizadorSintax.py',356),
  ('factor -> ID DOT function statement','factor',4,'p_variable_member_access','analizadorSintax.py',360),
  ('factor -> ID DOT function','factor',3,'p_variable_member_access','analizadorSintax.py',361),
  ('factor -> ID DOT ID','factor',3,'p_variable_member_access','analizadorSintax.py',362),
  ('booleanExpression -> variable EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',369),
  ('booleanExpression -> variable NOT_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',370),
  ('booleanExpression -> variable GREATER_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',371),
  ('booleanExpression -> variable LESS_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',372),
  ('booleanExpression -> variable GREATER_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',373),
  ('booleanExpression -> variable LESS_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',374),
  ('booleanExpression -> booleanExpression AND booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',378),
  ('booleanExpression -> booleanExpression OR booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',379),
  ('booleanExpression -> LPARENTHESIS booleanExpression RPARENTHESIS','booleanExpression',3,'p_boolean_expression_paren','analizadorSintax.py',389),
  ('booleanExpression -> variable','booleanExpression',1,'p_boolean_expression_variable','analizadorSintax.py',393),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement','if',5,'p_if','analizadorSintax.py',403),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statement','if',7,'p_if_else','analizadorSintax.py',411),
  ('while -> WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACE','while',7,'p_while','analizadorSintax.py',419),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',427),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',428),
  ('for -> FOR LPARENTHESIS varType ID IN ID RPARENTHESIS for_in_block','for',8,'p_for_in','analizadorSintax.py',436),
  ('for_in_block -> LBRACE for_in_scope statements RBRACE','for_in_block',4,'p_for_in_block','analizadorSintax.py',451),
  ('for_in_scope -> <empty>','for_in_scope',0,'p_for_in_scope','analizadorSintax.py',456),
  ('increment -> ID INCREMENT','increment',2,'p_increment','analizadorSintax.py',463),
  ('decrement -> ID DECREMENT','decrement',2,'p_decrement','analizadorSintax.py',467),
  ('try -> TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACE','try',8,'p_try','analizadorSintax.py',471),
  ('switch -> SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACE','switch',8,'p_switch','analizadorSintax.py',476),
  ('cases -> cases case','cases',2,'p_cases','analizadorSintax.py',494),
  ('cases -> case','cases',1,'p_cases','analizadorSintax.py',495),
  ('case -> CASE variable COLON statements BREAK','case',5,'p_case','analizadorSintax.py',502),
  ('case -> CASE variable COLON statements SEMICOLON','case',5,'p_case','analizadorSintax.py',503),
  ('case -> CASE variable COLON statements','case',4,'p_case','analizadorSintax.py',504),
  ('default_case -> DEFAULT COLON statements','default_case',3,'p_default_case','analizadorSintax.py',508),
  ('function -> varType ID LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE','function',8,'p_function','analizadorSintax.py',512),
  ('function -> ID LPARENTHESIS parameters RPARENTHESIS','function',4,'p_function','analizadorSintax.py',513),
  ('function -> declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLON','function',7,'p_function_arrow','analizadorSintax.py',533),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','analizadorSintax.py',536),
  ('parameters -> parameter','parameters',1,'p_parameters','analizadorSintax.py',537),
  ('parameters -> empty','parameters',1,'p_parameters','analizadorSintax.py',538),
  ('parameter -> declaration','parameter',1,'p_parameter','analizadorSintax.py',547),
  ('parameter -> variable','parameter',1,'p_parameter','analizadorSintax.py',548),
  ('lambda -> LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE','lambda',6,'p_lambda','analizadorSintax.py',552),
  ('print -> PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLON','print',5,'p_print','analizadorSintax.py',556),
  ('input -> ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLON','input',8,'p_input','analizadorSintax.py',559),
  ('class_def -> CLASS ID LBRACE class_members RBRACE','class_def',5,'p_class_def','analizadorSintax.py',563),
  ('class_members -> class_members class_member','class_members',2,'p_class_members','analizadorSintax.py',566),
  ('class_members -> class_member','class_members',1,'p_class_members','analizadorSintax.py',567),
  ('class_member -> varType ID SEMICOLON','class_member',3,'p_class_member','analizadorSintax.py',570),
  ('class_member -> function','class_member',1,'p_class_member','analizadorSintax.py',571),
  ('enum -> ENUM ID LBRACE enum_values RBRACE','enum',5,'p_enum','analizadorSintax.py',574),
  ('enum_values -> enum_values COMMA ID','enum_values',3,'p_enum_values','analizadorSintax.py',577),
  ('enum_values -> ID','enum_values',1,'p_enum_values','analizadorSintax.py',578),
  ('typedef -> TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLON','typedef',9,'p_typedef','analizadorSintax.py',581),
  ('return -> RETURN variable','return',2,'p_return','analizadorSintax.py',584),
  ('return -> RETURN','return',1,'p_return','analizadorSintax.py',585),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizadorSintax.py',592),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintax.py',596),
]
