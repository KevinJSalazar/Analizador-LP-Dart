
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programnonassocIFXnonassocELSEABSTRACT AND ARROW ASSIGN_OPERATOR BOOL BOOL_TYPE BREAK CASE CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_EQUALS DOT DOUBLE DOUBLE_TYPE ELSE ENUM EQUALS EXPORT FALSE FINAL FINALLY FOR GREATER_THAN GREATER_THAN_OR_EQUALS ID IF IMPORT IN INCREMENT INT INT_TYPE LATE LBRACE LBRACKET LESS_THAN LESS_THAN_OR_EQUALS LIST_TYPE LPARENTHESIS MAP_TYPE MINUS MINUS_EQUALS MODULE NOT NOT_EQUALS NULL NULL_TYPE NUM_TYPE OR PLUS PLUS_EQUALS PRINT RBRACE RBRACKET READ RETURN RPARENTHESIS SEMICOLON SET_TYPE STATIC STDIN STRING STRING_TYPE SWITCH TIMES TIMES_EQUALS TRUE TRY TYPEDEF VAR VOID WHILEprogram : statementsstatements : statements statement\n                  | statementstatement : LBRACE statements RBRACEstatement : expression SEMICOLON\n                 | declaration SEMICOLON\n                 | assignation SEMICOLON\n                 | increment SEMICOLON\n                 | decrement SEMICOLON\n                 | import SEMICOLON\n                 | function\n                 | if\n                 | while\n                 | for\n                 | print\n                 | input\n                 | class_def\n                 | enum\n                 | try\n                 | switch\n                 | empty\n                 | return\n                 | CONTINUE SEMICOLON\n                 | BREAK SEMICOLONdeclaration : declaration_modifier varType ID \n                   | declaration_modifier ID \n                   | varType IDdeclaration : LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literaldeclaration : MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literalassignation : declaration ASSIGN_OPERATOR variableassignation : ID ASSIGN_OPERATOR variableassignation : ID PLUS_EQUALS expression\n                   | ID MINUS_EQUALS expression\n                   | ID TIMES_EQUALS expression\n                   | ID DIVIDE_EQUALS expressiondeclaration_modifier : CONST \n                            | FINALvarType   : INT_TYPE \n                 | STRING_TYPE \n                 | NUM_TYPE \n                 | DOUBLE_TYPE \n                 | BOOL_TYPE \n                 | LIST_TYPE \n                 | MAP_TYPE \n                 | SET_TYPE\n                 | VAR\n                 | VOIDlist_literal : LBRACKET list_elements RBRACKETlist_elements : list_elements COMMA variable\n                     | variable\n                     | emptymap_literal : LBRACE map_elements RBRACEmap_elements : map_elements COMMA map_pair\n                   | map_pair\n                   | emptymap_pair : variable COLON variablevariable : INT\n                | DOUBLE\n                | STRING\n                | BOOL\n                | NULL\n                | ID\n                | function\n                | expressionexpression : expression PLUS term\n                  | expression MINUS termexpression : termterm : term TIMES factor\n            | term DIVIDE factor\n            | term MODULE factorterm : factorfactor : MINUS factorfactor : INT\n              | DOUBLEfactor : IDfactor : LPARENTHESIS expression RPARENTHESISfactor : ID LBRACKET expression RBRACKETfactor : ID DOT IDbooleanExpression : variable EQUALS variable\n                         | variable NOT_EQUALS variable\n                         | variable GREATER_THAN variable\n                         | variable LESS_THAN variable\n                         | variable GREATER_THAN_OR_EQUALS variable\n                         | variable LESS_THAN_OR_EQUALS variablebooleanExpression : booleanExpression AND booleanExpression\n                         | booleanExpression OR booleanExpressionbooleanExpression : LPARENTHESIS booleanExpression RPARENTHESISbooleanExpression : variableif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement %prec IFXif : IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statementwhile : WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE\n           | FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACEfor : FOR LPARENTHESIS varType ID IN ID RPARENTHESIS LBRACE statements RBRACEincrement : ID INCREMENTdecrement : ID DECREMENTtry : TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACEswitch : SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACEcases : cases case\n             | casecase : CASE variable COLON statements BREAK\n            | CASE variable COLON statements SEMICOLON\n            | CASE variable COLON statementsdefault_case : DEFAULT COLON statementsfunction : declaration LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE\n                | ID LPARENTHESIS parameters RPARENTHESISfunction : declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLONparameters : parameters COMMA parameter\n                  | parameter\n                  | emptyparameter : varType ID\n                 | variableprint : PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLONinput : ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLONclass_def : CLASS ID LBRACE class_members RBRACEclass_members : class_members class_member\n                     | class_memberclass_member : varType ID SEMICOLON\n                    | functionenum : ENUM ID LBRACE enum_values RBRACEenum_values : enum_values COMMA ID\n                   | IDtypedef : TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLONreturn : RETURN variable SEMICOLON\n              | RETURN SEMICOLONimport : IMPORT STRING SEMICOLONempty :'
    
_lr_action_items = {'LBRACE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,40,56,57,58,61,64,65,66,67,68,69,98,99,100,103,113,152,154,155,159,165,174,187,188,195,204,207,208,211,213,215,220,221,226,230,231,236,237,241,242,247,251,252,253,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[4,4,-3,4,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,100,-2,4,-5,-6,-7,-8,-9,-10,-23,-24,150,151,4,-125,-4,4,-124,188,-106,4,204,214,4,-89,4,-113,-115,-120,226,4,4,4,4,-105,-107,-90,-91,254,4,-114,262,263,264,4,-97,-98,4,4,4,4,4,4,4,4,4,-94,-92,-93,]),'CONTINUE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[23,23,-3,23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,23,-5,-6,-7,-8,-9,-10,-23,-24,23,-125,-4,23,-124,-106,23,23,-89,23,-113,-115,-120,23,23,23,23,-105,-107,-90,-91,23,-114,23,-97,-98,23,23,23,23,23,23,23,23,23,-94,-92,-93,]),'BREAK':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[24,24,-3,24,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,24,-5,-6,-7,-8,-9,-10,-23,-24,24,-125,-4,24,-124,-106,24,24,-89,24,-113,-115,-120,24,24,24,24,-105,-107,-90,-91,24,-114,24,-97,-98,24,24,24,24,24,24,276,24,24,-94,-92,-93,]),'LIST_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[30,30,-3,30,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,77,30,-36,-37,-2,30,-5,-6,30,122,-7,-8,-9,-10,-23,-24,30,122,77,77,30,30,122,30,30,30,-125,-4,30,122,30,-124,122,-106,77,30,30,30,30,30,30,30,30,30,30,30,122,-117,-119,30,-89,30,-113,-115,-116,-120,30,30,30,-118,30,30,-105,-107,30,-90,-91,30,-114,30,-97,-98,30,30,30,30,30,30,30,30,30,30,30,-94,30,30,-92,-93,]),'MAP_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[31,31,-3,31,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,78,31,-36,-37,-2,31,-5,-6,31,123,-7,-8,-9,-10,-23,-24,31,123,78,78,31,31,123,31,31,31,-125,-4,31,123,31,-124,123,-106,78,31,31,31,31,31,31,31,31,31,31,31,123,-117,-119,31,-89,31,-113,-115,-116,-120,31,31,31,-118,31,31,-105,-107,31,-90,-91,31,-114,31,-97,-98,31,31,31,31,31,31,31,31,31,31,31,-94,31,31,-92,-93,]),'ID':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,30,31,33,38,39,42,44,45,46,47,48,49,50,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,77,78,80,81,82,83,84,87,88,89,94,95,96,97,100,101,103,113,120,122,123,141,146,150,151,152,154,156,159,161,165,166,167,168,169,170,171,172,173,175,177,180,181,182,183,188,189,195,204,206,207,208,209,211,212,215,219,220,221,222,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[29,29,-3,29,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,74,76,79,-43,-44,74,98,99,109,-36,-37,-38,-39,-40,-41,-42,-45,-46,-47,-2,29,-5,74,74,-6,109,109,-7,-8,-9,-10,-23,-24,74,74,74,127,-43,-44,109,74,74,74,74,109,135,74,109,109,147,109,29,109,-125,-4,157,-43,-44,109,176,179,184,29,-124,109,-106,192,29,109,109,109,109,109,109,109,109,109,109,179,-117,210,-119,29,74,-89,29,223,-113,-115,-116,-120,225,29,235,29,29,240,-118,29,109,-105,-107,109,-90,-91,29,-114,29,-97,-98,29,29,109,109,29,29,29,29,29,29,29,-94,109,109,-92,-93,]),'IMPORT':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[32,32,-3,32,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,32,-5,-6,-7,-8,-9,-10,-23,-24,32,-125,-4,32,-124,-106,32,32,-89,32,-113,-115,-120,32,32,32,32,-105,-107,-90,-91,32,-114,32,-97,-98,32,32,32,32,32,32,32,32,32,-94,-92,-93,]),'IF':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[34,34,-3,34,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,34,-5,-6,-7,-8,-9,-10,-23,-24,34,-125,-4,34,-124,-106,34,34,-89,34,-113,-115,-120,34,34,34,34,-105,-107,-90,-91,34,-114,34,-97,-98,34,34,34,34,34,34,34,34,34,-94,-92,-93,]),'WHILE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[35,35,-3,35,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,35,-5,-6,-7,-8,-9,-10,-23,-24,35,-125,-4,35,-124,-106,35,35,-89,35,-113,-115,-120,35,35,35,35,-105,-107,-90,-91,35,-114,35,-97,-98,35,35,35,35,35,35,35,35,35,-94,-92,-93,]),'FOR':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[36,36,-3,36,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,36,-5,-6,-7,-8,-9,-10,-23,-24,36,-125,-4,36,-124,-106,36,36,-89,36,-113,-115,-120,36,36,36,36,-105,-107,-90,-91,36,-114,36,-97,-98,36,36,36,36,36,36,36,36,36,-94,-92,-93,]),'PRINT':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[37,37,-3,37,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,37,-5,-6,-7,-8,-9,-10,-23,-24,37,-125,-4,37,-124,-106,37,37,-89,37,-113,-115,-120,37,37,37,37,-105,-107,-90,-91,37,-114,37,-97,-98,37,37,37,37,37,37,37,37,37,-94,-92,-93,]),'CLASS':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[38,38,-3,38,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,38,-5,-6,-7,-8,-9,-10,-23,-24,38,-125,-4,38,-124,-106,38,38,-89,38,-113,-115,-120,38,38,38,38,-105,-107,-90,-91,38,-114,38,-97,-98,38,38,38,38,38,38,38,38,38,-94,-92,-93,]),'ENUM':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[39,39,-3,39,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,39,-5,-6,-7,-8,-9,-10,-23,-24,39,-125,-4,39,-124,-106,39,39,-89,39,-113,-115,-120,39,39,39,39,-105,-107,-90,-91,39,-114,39,-97,-98,39,39,39,39,39,39,39,39,39,-94,-92,-93,]),'TRY':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[40,40,-3,40,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,40,-5,-6,-7,-8,-9,-10,-23,-24,40,-125,-4,40,-124,-106,40,40,-89,40,-113,-115,-120,40,40,40,40,-105,-107,-90,-91,40,-114,40,-97,-98,40,40,40,40,40,40,40,40,40,-94,-92,-93,]),'SWITCH':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[41,41,-3,41,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,41,-5,-6,-7,-8,-9,-10,-23,-24,41,-125,-4,41,-124,-106,41,41,-89,41,-113,-115,-120,41,41,41,41,-105,-107,-90,-91,41,-114,41,-97,-98,41,41,41,41,41,41,41,41,41,-94,-92,-93,]),'RETURN':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,56,57,58,61,64,65,66,67,68,69,100,103,113,152,154,159,165,188,195,204,207,208,211,215,220,221,226,230,231,236,237,242,247,254,255,256,257,258,263,264,265,266,267,273,274,275,281,282,],[42,42,-3,42,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,42,-5,-6,-7,-8,-9,-10,-23,-24,42,-125,-4,42,-124,-106,42,42,-89,42,-113,-115,-120,42,42,42,42,-105,-107,-90,-91,42,-114,42,-97,-98,42,42,42,42,42,42,42,42,42,-94,-92,-93,]),'CONST':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,42,56,57,58,61,62,63,64,65,66,67,68,69,80,87,94,95,96,97,100,101,103,113,141,150,152,154,156,159,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[44,44,-3,44,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,44,-2,44,-5,-6,44,44,-7,-8,-9,-10,-23,-24,44,44,44,44,44,44,44,44,-125,-4,44,44,44,-124,44,-106,44,44,44,44,44,44,44,44,44,44,44,44,-117,-119,44,-89,44,-113,-115,-116,-120,44,44,44,-118,44,44,-105,-107,44,-90,-91,44,-114,44,-97,-98,44,44,44,44,44,44,44,44,44,44,44,-94,44,44,-92,-93,]),'FINAL':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,42,56,57,58,61,62,63,64,65,66,67,68,69,80,87,94,95,96,97,100,101,103,113,141,150,152,154,156,159,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[45,45,-3,45,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,45,-2,45,-5,-6,45,45,-7,-8,-9,-10,-23,-24,45,45,45,45,45,45,45,45,-125,-4,45,45,45,-124,45,-106,45,45,45,45,45,45,45,45,45,45,45,45,-117,-119,45,-89,45,-113,-115,-116,-120,45,45,45,-118,45,45,-105,-107,45,-90,-91,45,-114,45,-97,-98,45,45,45,45,45,45,45,45,45,45,45,-94,45,45,-92,-93,]),'INT_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[46,46,-3,46,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,46,46,-36,-37,-2,46,-5,-6,46,46,-7,-8,-9,-10,-23,-24,46,46,46,46,46,46,46,46,46,46,-125,-4,46,46,46,-124,46,-106,46,46,46,46,46,46,46,46,46,46,46,46,46,-117,-119,46,-89,46,-113,-115,-116,-120,46,46,46,-118,46,46,-105,-107,46,-90,-91,46,-114,46,-97,-98,46,46,46,46,46,46,46,46,46,46,46,-94,46,46,-92,-93,]),'STRING_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[47,47,-3,47,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,47,47,-36,-37,-2,47,-5,-6,47,47,-7,-8,-9,-10,-23,-24,47,47,47,47,47,47,47,47,47,47,-125,-4,47,47,47,-124,47,-106,47,47,47,47,47,47,47,47,47,47,47,47,47,-117,-119,47,-89,47,-113,-115,-116,-120,47,47,47,-118,47,47,-105,-107,47,-90,-91,47,-114,47,-97,-98,47,47,47,47,47,47,47,47,47,47,47,-94,47,47,-92,-93,]),'NUM_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[48,48,-3,48,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,48,48,-36,-37,-2,48,-5,-6,48,48,-7,-8,-9,-10,-23,-24,48,48,48,48,48,48,48,48,48,48,-125,-4,48,48,48,-124,48,-106,48,48,48,48,48,48,48,48,48,48,48,48,48,-117,-119,48,-89,48,-113,-115,-116,-120,48,48,48,-118,48,48,-105,-107,48,-90,-91,48,-114,48,-97,-98,48,48,48,48,48,48,48,48,48,48,48,-94,48,48,-92,-93,]),'DOUBLE_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[49,49,-3,49,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,49,49,-36,-37,-2,49,-5,-6,49,49,-7,-8,-9,-10,-23,-24,49,49,49,49,49,49,49,49,49,49,-125,-4,49,49,49,-124,49,-106,49,49,49,49,49,49,49,49,49,49,49,49,49,-117,-119,49,-89,49,-113,-115,-116,-120,49,49,49,-118,49,49,-105,-107,49,-90,-91,49,-114,49,-97,-98,49,49,49,49,49,49,49,49,49,49,49,-94,49,49,-92,-93,]),'BOOL_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[50,50,-3,50,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,50,50,-36,-37,-2,50,-5,-6,50,50,-7,-8,-9,-10,-23,-24,50,50,50,50,50,50,50,50,50,50,-125,-4,50,50,50,-124,50,-106,50,50,50,50,50,50,50,50,50,50,50,50,50,-117,-119,50,-89,50,-113,-115,-116,-120,50,50,50,-118,50,50,-105,-107,50,-90,-91,50,-114,50,-97,-98,50,50,50,50,50,50,50,50,50,50,50,-94,50,50,-92,-93,]),'SET_TYPE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[51,51,-3,51,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,51,51,-36,-37,-2,51,-5,-6,51,51,-7,-8,-9,-10,-23,-24,51,51,51,51,51,51,51,51,51,51,-125,-4,51,51,51,-124,51,-106,51,51,51,51,51,51,51,51,51,51,51,51,51,-117,-119,51,-89,51,-113,-115,-116,-120,51,51,51,-118,51,51,-105,-107,51,-90,-91,51,-114,51,-97,-98,51,51,51,51,51,51,51,51,51,51,51,-94,51,51,-92,-93,]),'VAR':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[52,52,-3,52,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,52,52,-36,-37,-2,52,-5,-6,52,52,-7,-8,-9,-10,-23,-24,52,52,52,52,52,52,52,52,52,52,-125,-4,52,52,52,-124,52,-106,52,52,52,52,52,52,52,52,52,52,52,52,52,-117,-119,52,-89,52,-113,-115,-116,-120,52,52,52,-118,52,52,-105,-107,52,-90,-91,52,-114,52,-97,-98,52,52,52,52,52,52,52,52,52,52,52,-94,52,52,-92,-93,]),'VOID':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,27,42,44,45,56,57,58,61,62,63,64,65,66,67,68,69,80,87,90,91,94,95,96,97,100,101,103,113,141,150,152,154,156,159,162,165,166,167,168,169,170,171,172,173,175,177,180,181,183,188,195,204,207,208,209,211,215,220,221,224,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[53,53,-3,53,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,53,53,-36,-37,-2,53,-5,-6,53,53,-7,-8,-9,-10,-23,-24,53,53,53,53,53,53,53,53,53,53,-125,-4,53,53,53,-124,53,-106,53,53,53,53,53,53,53,53,53,53,53,53,53,-117,-119,53,-89,53,-113,-115,-116,-120,53,53,53,-118,53,53,-105,-107,53,-90,-91,53,-114,53,-97,-98,53,53,53,53,53,53,53,53,53,53,53,-94,53,53,-92,-93,]),'MINUS':([0,2,3,4,5,11,12,13,14,15,16,17,18,19,20,21,22,25,26,29,33,42,43,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,80,81,82,83,84,87,89,93,94,95,97,100,101,103,104,105,109,111,113,114,115,124,125,126,130,131,132,133,135,136,140,141,152,154,156,159,160,164,165,166,167,168,169,170,171,172,173,175,177,188,189,195,204,207,208,211,215,216,220,221,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[26,26,-3,26,60,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-67,26,-75,26,26,-71,-73,-74,-2,26,-5,26,26,-6,26,26,-7,-8,-9,-10,-23,-24,26,26,26,-72,-75,26,26,26,26,26,26,26,60,26,26,26,26,26,-125,-73,-74,-75,60,-4,-65,-66,-68,-69,-70,60,60,60,60,-78,60,-76,26,26,-124,26,-106,-77,60,26,26,26,26,26,26,26,26,26,26,26,26,26,-89,26,-113,-115,-120,26,60,26,26,26,26,-105,-107,26,-90,-91,26,-114,26,-97,-98,26,26,26,26,26,26,26,26,26,26,26,-94,26,26,-92,-93,]),'INT':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,26,33,42,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,81,82,83,84,87,89,94,95,97,100,101,103,113,141,152,154,156,159,165,166,167,168,169,170,171,172,173,175,177,188,189,195,204,207,208,211,215,220,221,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[54,54,-3,54,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,54,54,104,-2,54,-5,54,54,-6,104,104,-7,-8,-9,-10,-23,-24,54,54,54,104,54,54,54,54,104,54,104,104,104,54,104,-125,-4,104,54,-124,104,-106,54,104,104,104,104,104,104,104,104,104,104,54,54,-89,54,-113,-115,-120,54,54,54,54,104,-105,-107,104,-90,-91,54,-114,54,-97,-98,54,54,104,104,54,54,54,54,54,54,54,-94,104,104,-92,-93,]),'DOUBLE':([0,2,3,4,11,12,13,14,15,16,17,18,19,20,21,22,26,33,42,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,81,82,83,84,87,89,94,95,97,100,101,103,113,141,152,154,156,159,165,166,167,168,169,170,171,172,173,175,177,188,189,195,204,207,208,211,215,220,221,226,229,230,231,234,236,237,242,247,254,255,256,257,258,260,262,263,264,265,266,267,273,274,275,279,280,281,282,],[55,55,-3,55,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,55,55,105,-2,55,-5,55,55,-6,105,105,-7,-8,-9,-10,-23,-24,55,55,55,105,55,55,55,55,105,55,105,105,105,55,105,-125,-4,105,55,-124,105,-106,55,105,105,105,105,105,105,105,105,105,105,55,55,-89,55,-113,-115,-120,55,55,55,55,105,-105,-107,105,-90,-91,55,-114,55,-97,-98,55,55,105,105,55,55,55,55,55,55,55,-94,105,105,-92,-93,]),'LPARENTHESIS':([0,2,3,4,6,11,12,13,14,15,16,17,18,19,20,21,22,26,29,33,34,35,36,37,41,42,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,76,79,80,81,82,83,84,87,89,94,95,97,100,101,103,109,112,113,127,141,152,154,156,157,159,165,166,167,168,169,170,171,172,173,175,177,179,188,189,191,195,204,207,208,210,211,215,220,221,226,229,230,231,233,234,236,237,242,247,254,255,256,257,258,259,260,261,262,263,264,265,266,267,273,274,275,278,279,280,281,282,],[33,33,-3,33,63,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,33,87,33,94,95,96,97,101,33,-2,33,-5,33,33,-6,33,33,-7,-8,-9,-10,-23,-24,33,33,33,-26,-27,33,33,33,33,33,33,33,141,141,33,33,33,-125,87,63,-4,-25,141,33,-124,33,-27,-106,33,141,141,33,33,33,33,33,33,141,33,87,33,33,217,-89,33,-113,-115,-27,-120,33,33,33,33,33,-105,-107,-28,33,-90,-91,33,-114,33,-97,-98,33,33,-48,33,-29,33,33,33,33,33,33,33,33,-94,-52,33,33,-92,-93,]),'$end':([0,1,2,3,11,12,13,14,15,16,17,18,19,20,21,22,56,58,61,64,65,66,67,68,69,103,113,154,159,165,195,207,208,211,220,230,231,236,237,247,255,256,275,281,282,],[-127,0,-1,-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,-5,-6,-7,-8,-9,-10,-23,-24,-125,-4,-124,-106,-127,-89,-113,-115,-120,-127,-105,-107,-90,-91,-114,-97,-98,-94,-92,-93,]),'RBRACE':([3,4,11,12,13,14,15,16,17,18,19,20,21,22,25,43,54,55,56,57,58,61,64,65,66,67,68,69,73,74,100,103,104,105,106,107,108,109,110,111,113,114,115,124,125,126,135,140,152,154,159,160,165,180,181,183,184,185,188,195,204,207,208,209,211,215,220,221,224,225,226,230,231,236,237,242,243,247,254,255,256,257,262,263,264,265,266,269,270,271,273,274,275,281,282,283,284,],[-3,-127,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-67,-71,-73,-74,-2,113,-5,-6,-7,-8,-9,-10,-23,-24,-72,-75,-127,-125,-57,-58,-59,-60,-61,-62,-63,-64,-4,-65,-66,-68,-69,-70,-78,-76,186,-124,-106,-77,-127,208,-117,-119,-122,211,-127,-89,-127,-113,-115,-116,-120,230,-127,237,-118,-121,-127,-105,-107,-90,-91,255,256,-114,-127,-97,-98,-127,-127,-127,-127,275,-104,278,-54,-55,281,282,-94,-92,-93,-53,-56,]),'SEMICOLON':([3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,42,43,54,55,56,58,61,64,65,66,67,68,69,73,74,76,79,85,86,92,102,103,104,105,106,107,108,109,110,111,113,114,115,116,124,125,126,127,128,130,131,132,133,135,139,140,143,145,154,159,160,165,178,194,195,196,197,198,199,200,201,202,203,205,207,208,210,211,216,220,230,231,232,233,236,237,247,255,256,258,259,261,267,275,276,278,281,282,],[-3,58,61,64,65,66,67,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,68,69,-67,-75,103,-71,-73,-74,-2,-5,-6,-7,-8,-9,-10,-23,-24,-72,-75,-26,-27,-95,-96,139,154,-125,-57,-58,-59,-60,-61,-62,-63,-64,-4,-65,-66,-30,-68,-69,-70,-25,-31,-32,-33,-34,-35,-78,-126,-76,-88,175,-124,-106,-77,-127,207,-87,-89,-85,-86,-79,-80,-81,-82,-83,-84,222,-113,-115,224,-120,231,-127,-105,-107,247,-28,-90,-91,-114,-97,-98,-127,-48,-29,277,-94,69,-52,-92,-93,]),'DEFAULT':([3,11,12,13,14,15,16,17,18,19,20,21,22,56,58,61,64,65,66,67,68,69,103,113,154,159,165,195,207,208,211,220,227,228,230,231,236,237,244,247,255,256,258,267,275,276,277,281,282,],[-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,-5,-6,-7,-8,-9,-10,-23,-24,-125,-4,-124,-106,-127,-89,-113,-115,-120,-127,245,-100,-105,-107,-90,-91,-99,-114,-97,-98,-127,-103,-94,-101,-102,-92,-93,]),'CASE':([3,11,12,13,14,15,16,17,18,19,20,21,22,56,58,61,64,65,66,67,68,69,103,113,154,159,165,195,207,208,211,214,220,227,228,230,231,236,237,244,247,255,256,258,267,275,276,277,281,282,],[-3,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-2,-5,-6,-7,-8,-9,-10,-23,-24,-125,-4,-124,-106,-127,-89,-113,-115,-120,229,-127,229,-100,-105,-107,-90,-91,-99,-114,-97,-98,-127,-103,-94,-101,-102,-92,-93,]),'PLUS':([5,25,29,43,54,55,73,74,93,104,105,109,111,114,115,124,125,126,130,131,132,133,135,136,140,160,164,216,],[59,-67,-75,-71,-73,-74,-72,-75,59,-73,-74,-75,59,-65,-66,-68,-69,-70,59,59,59,59,-78,59,-76,-77,59,59,]),'ASSIGN_OPERATOR':([6,29,76,79,127,147,148,176,192,233,235,259,261,278,],[62,80,-26,-27,-25,177,62,-27,218,-28,251,-48,-29,-52,]),'ELSE':([11,12,13,14,15,16,17,18,19,20,21,22,58,61,64,65,66,67,68,69,103,113,154,159,165,195,207,208,211,220,230,231,236,237,247,255,256,275,281,282,],[-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-5,-6,-7,-8,-9,-10,-23,-24,-125,-4,-124,-106,-127,220,-113,-115,-120,-127,-105,-107,-90,-91,-114,-97,-98,-94,-92,-93,]),'RPARENTHESIS':([25,43,54,55,63,73,74,85,86,87,93,104,105,106,107,108,109,110,111,114,115,117,118,119,121,124,125,126,134,135,140,142,143,144,149,153,157,159,160,163,164,190,194,196,197,198,199,200,201,202,203,217,223,230,231,238,239,],[-67,-71,-73,-74,-127,-72,-75,-95,-96,-127,140,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,155,-109,-110,-112,-68,-69,-70,159,-78,-76,165,-88,174,178,187,-111,-106,-77,194,140,-108,-87,-85,-86,-79,-80,-81,-82,-83,-84,232,241,-105,-107,252,253,]),'COMMA':([25,43,46,47,48,49,50,51,52,53,54,55,63,73,74,77,78,87,104,105,106,107,108,109,110,111,114,115,117,118,119,121,124,125,126,134,135,138,140,157,159,160,184,185,190,225,230,231,234,248,249,250,262,268,269,270,271,283,284,],[-67,-71,-38,-39,-40,-41,-42,-45,-46,-47,-73,-74,-127,-72,-75,-43,-44,-127,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,156,-109,-110,-112,-68,-69,-70,156,-78,162,-76,-111,-106,-77,-122,212,-108,-121,-105,-107,-127,260,-50,-51,-127,-49,279,-54,-55,-53,-56,]),'RBRACKET':([25,43,54,55,73,74,104,105,106,107,108,109,110,111,114,115,124,125,126,135,136,140,159,160,230,231,234,248,249,250,268,],[-67,-71,-73,-74,-72,-75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-69,-70,-78,160,-76,-106,-77,-105,-107,-127,259,-50,-51,-49,]),'EQUALS':([25,43,54,55,73,74,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,143,159,160,164,230,231,],[-67,-71,-73,-74,-72,-75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-69,-70,-78,-76,168,-106,-77,-64,-105,-107,]),'NOT_EQUALS':([25,43,54,55,73,74,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,143,159,160,164,230,231,],[-67,-71,-73,-74,-72,-75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-69,-70,-78,-76,169,-106,-77,-64,-105,-107,]),'GREATER_THAN':([25,43,46,47,48,49,50,51,52,53,54,55,73,74,77,78,104,105,106,107,108,109,110,111,114,115,124,125,126,135,137,140,143,159,160,164,193,230,231,],[-67,-71,-38,-39,-40,-41,-42,-45,-46,-47,-73,-74,-72,-75,-43,-44,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-69,-70,-78,161,-76,170,-106,-77,-64,219,-105,-107,]),'LESS_THAN':([25,30,31,43,54,55,73,74,104,105,106,107,108,109,110,111,114,115,122,123,124,125,126,135,140,143,159,160,164,230,231,],[-67,90,91,-71,-73,-74,-72,-75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,90,91,-68,-69,-70,-78,-76,171,-106,-77,-64,-105,-107,]),'GREATER_THAN_OR_EQUALS':([25,43,54,55,73,74,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,143,159,160,164,230,231,],[-67,-71,-73,-74,-72,-75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-69,-70,-78,-76,172,-106,-77,-64,-105,-107,]),'LESS_THAN_OR_EQUALS':([25,43,54,55,73,74,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,143,159,160,164,230,231,],[-67,-71,-73,-74,-72,-75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-69,-70,-78,-76,173,-106,-77,-64,-105,-107,]),'AND':([25,43,54,55,73,74,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,142,143,144,159,160,163,164,194,196,197,198,199,200,201,202,203,205,230,231,],[-67,-71,-73,-74,-72,-75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-69,-70,-78,-76,166,-88,166,-106,-77,166,-64,-87,166,166,-79,-80,-81,-82,-83,-84,166,-105,-107,]),'OR':([25,43,54,55,73,74,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,142,143,144,159,160,163,164,194,196,197,198,199,200,201,202,203,205,230,231,],[-67,-71,-73,-74,-72,-75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-69,-70,-78,-76,167,-88,167,-106,-77,167,-64,-87,167,167,-79,-80,-81,-82,-83,-84,167,-105,-107,]),'COLON':([25,43,54,55,73,74,104,105,106,107,108,109,110,111,114,115,124,125,126,135,140,159,160,230,231,245,246,272,],[-67,-71,-73,-74,-72,-75,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-68,-69,-70,-78,-76,-106,-77,-105,-107,257,258,280,]),'TIMES':([25,29,43,54,55,73,74,104,105,109,114,115,124,125,126,135,140,160,],[70,-75,-71,-73,-74,-72,-75,-73,-74,-75,70,70,-68,-69,-70,-78,-76,-77,]),'DIVIDE':([25,29,43,54,55,73,74,104,105,109,114,115,124,125,126,135,140,160,],[71,-75,-71,-73,-74,-72,-75,-73,-74,-75,71,71,-68,-69,-70,-78,-76,-77,]),'MODULE':([25,29,43,54,55,73,74,104,105,109,114,115,124,125,126,135,140,160,],[72,-75,-71,-73,-74,-72,-75,-73,-74,-75,72,72,-68,-69,-70,-78,-76,-77,]),'PLUS_EQUALS':([29,147,],[81,81,]),'MINUS_EQUALS':([29,147,],[82,82,]),'TIMES_EQUALS':([29,147,],[83,83,]),'DIVIDE_EQUALS':([29,147,],[84,84,]),'INCREMENT':([29,240,],[85,85,]),'DECREMENT':([29,240,],[86,86,]),'LBRACKET':([29,74,109,218,],[89,89,89,234,]),'DOT':([29,74,109,129,],[88,88,88,158,]),'STRING':([32,42,62,63,80,87,94,95,97,101,141,156,166,167,168,169,170,171,172,173,175,177,229,234,260,262,279,280,],[92,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'BOOL':([42,62,63,80,87,94,95,97,101,141,156,166,167,168,169,170,171,172,173,175,177,229,234,260,262,279,280,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'NULL':([42,62,63,80,87,94,95,97,101,141,156,166,167,168,169,170,171,172,173,175,177,229,234,260,262,279,280,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'STDIN':([80,],[129,]),'ARROW':([155,],[189,]),'READ':([158,],[191,]),'IN':([176,],[206,]),'FINALLY':([186,],[213,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,4,100,188,204,226,254,257,258,263,264,],[2,57,152,215,221,242,265,266,267,273,274,]),'statement':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[3,56,3,56,3,56,195,3,3,56,236,56,3,56,3,3,3,3,3,56,56,56,56,56,]),'expression':([0,2,4,33,42,57,62,63,80,81,82,83,84,87,89,94,95,97,100,101,141,152,156,165,166,167,168,169,170,171,172,173,175,177,188,189,204,215,220,221,226,229,234,242,254,257,258,260,262,263,264,265,266,267,273,274,279,280,],[5,5,5,93,111,5,111,111,111,130,131,132,133,111,136,111,111,111,5,111,164,5,111,5,111,111,111,111,111,111,111,111,111,111,5,216,5,5,5,5,5,111,111,5,5,5,5,111,111,5,5,5,5,5,5,5,111,111,]),'declaration':([0,2,4,42,57,62,63,80,87,94,95,96,97,100,101,141,150,152,156,165,166,167,168,169,170,171,172,173,175,177,180,188,204,215,220,221,226,229,234,242,254,257,258,260,262,263,264,265,266,267,273,274,279,280,],[6,6,6,112,6,112,112,112,112,112,112,148,112,6,112,112,112,6,112,6,112,112,112,112,112,112,112,112,112,112,112,6,6,6,6,6,6,112,112,6,6,6,6,112,112,6,6,6,6,6,6,6,112,112,]),'assignation':([0,2,4,57,96,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[7,7,7,7,145,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'increment':([0,2,4,57,100,152,165,188,204,215,220,221,222,226,242,254,257,258,263,264,265,266,267,273,274,],[8,8,8,8,8,8,8,8,8,8,8,8,238,8,8,8,8,8,8,8,8,8,8,8,8,]),'decrement':([0,2,4,57,100,152,165,188,204,215,220,221,222,226,242,254,257,258,263,264,265,266,267,273,274,],[9,9,9,9,9,9,9,9,9,9,9,9,239,9,9,9,9,9,9,9,9,9,9,9,9,]),'import':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,2,4,42,57,62,63,80,87,94,95,97,100,101,141,150,152,156,165,166,167,168,169,170,171,172,173,175,177,180,188,204,215,220,221,226,229,234,242,254,257,258,260,262,263,264,265,266,267,273,274,279,280,],[11,11,11,110,11,110,110,110,110,110,110,110,11,110,110,183,11,110,11,110,110,110,110,110,110,110,110,110,110,183,11,11,11,11,11,11,110,110,11,11,11,11,110,110,11,11,11,11,11,11,11,110,110,]),'if':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'while':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'for':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'print':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'input':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'class_def':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'enum':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'switch':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'empty':([0,2,4,57,63,87,100,152,165,188,204,215,220,221,226,234,242,254,257,258,262,263,264,265,266,267,273,274,],[21,21,21,21,119,119,21,21,21,21,21,21,21,21,21,250,21,21,21,21,271,21,21,21,21,21,21,21,]),'return':([0,2,4,57,100,152,165,188,204,215,220,221,226,242,254,257,258,263,264,265,266,267,273,274,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'term':([0,2,4,33,42,57,59,60,62,63,80,81,82,83,84,87,89,94,95,97,100,101,141,152,156,165,166,167,168,169,170,171,172,173,175,177,188,189,204,215,220,221,226,229,234,242,254,257,258,260,262,263,264,265,266,267,273,274,279,280,],[25,25,25,25,25,25,114,115,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'declaration_modifier':([0,2,4,42,57,62,63,80,87,94,95,96,97,100,101,141,150,152,156,165,166,167,168,169,170,171,172,173,175,177,180,188,204,215,220,221,226,229,234,242,254,257,258,260,262,263,264,265,266,267,273,274,279,280,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'varType':([0,2,4,27,42,57,62,63,80,87,90,91,94,95,96,97,100,101,141,150,152,156,162,165,166,167,168,169,170,171,172,173,175,177,180,188,204,215,220,221,226,229,234,242,254,257,258,260,262,263,264,265,266,267,273,274,279,280,],[28,28,28,75,28,28,28,120,28,120,137,138,28,28,146,28,28,28,28,182,28,120,193,28,28,28,28,28,28,28,28,28,28,28,182,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'factor':([0,2,4,26,33,42,57,59,60,62,63,70,71,72,80,81,82,83,84,87,89,94,95,97,100,101,141,152,156,165,166,167,168,169,170,171,172,173,175,177,188,189,204,215,220,221,226,229,234,242,254,257,258,260,262,263,264,265,266,267,273,274,279,280,],[43,43,43,73,43,43,43,43,43,43,43,124,125,126,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'variable':([42,62,63,80,87,94,95,97,101,141,156,166,167,168,169,170,171,172,173,175,177,229,234,260,262,279,280,],[102,116,121,128,121,143,143,149,153,143,121,143,143,198,199,200,201,202,203,143,128,246,249,268,272,272,284,]),'parameters':([63,87,],[117,134,]),'parameter':([63,87,156,],[118,118,190,]),'booleanExpression':([94,95,141,166,167,175,],[142,144,163,196,197,205,]),'class_members':([150,],[180,]),'class_member':([150,180,],[181,209,]),'enum_values':([151,],[185,]),'cases':([214,],[227,]),'case':([214,227,],[228,244,]),'list_literal':([218,],[233,]),'default_case':([227,],[243,]),'list_elements':([234,],[248,]),'map_literal':([251,],[261,]),'map_elements':([262,],[269,]),'map_pair':([262,279,],[270,283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','analizadorSintax.py',22),
  ('statements -> statements statement','statements',2,'p_statements','analizadorSintax.py',26),
  ('statements -> statement','statements',1,'p_statements','analizadorSintax.py',27),
  ('statement -> LBRACE statements RBRACE','statement',3,'p_statement_block','analizadorSintax.py',38),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','analizadorSintax.py',42),
  ('statement -> declaration SEMICOLON','statement',2,'p_statement','analizadorSintax.py',43),
  ('statement -> assignation SEMICOLON','statement',2,'p_statement','analizadorSintax.py',44),
  ('statement -> increment SEMICOLON','statement',2,'p_statement','analizadorSintax.py',45),
  ('statement -> decrement SEMICOLON','statement',2,'p_statement','analizadorSintax.py',46),
  ('statement -> import SEMICOLON','statement',2,'p_statement','analizadorSintax.py',47),
  ('statement -> function','statement',1,'p_statement','analizadorSintax.py',48),
  ('statement -> if','statement',1,'p_statement','analizadorSintax.py',49),
  ('statement -> while','statement',1,'p_statement','analizadorSintax.py',50),
  ('statement -> for','statement',1,'p_statement','analizadorSintax.py',51),
  ('statement -> print','statement',1,'p_statement','analizadorSintax.py',52),
  ('statement -> input','statement',1,'p_statement','analizadorSintax.py',53),
  ('statement -> class_def','statement',1,'p_statement','analizadorSintax.py',54),
  ('statement -> enum','statement',1,'p_statement','analizadorSintax.py',55),
  ('statement -> try','statement',1,'p_statement','analizadorSintax.py',56),
  ('statement -> switch','statement',1,'p_statement','analizadorSintax.py',57),
  ('statement -> empty','statement',1,'p_statement','analizadorSintax.py',58),
  ('statement -> return','statement',1,'p_statement','analizadorSintax.py',59),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement','analizadorSintax.py',60),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement','analizadorSintax.py',61),
  ('declaration -> declaration_modifier varType ID','declaration',3,'p_declaration','analizadorSintax.py',68),
  ('declaration -> declaration_modifier ID','declaration',2,'p_declaration','analizadorSintax.py',69),
  ('declaration -> varType ID','declaration',2,'p_declaration','analizadorSintax.py',70),
  ('declaration -> LIST_TYPE LESS_THAN varType GREATER_THAN ID ASSIGN_OPERATOR list_literal','declaration',7,'p_declaration_list_init','analizadorSintax.py',79),
  ('declaration -> MAP_TYPE LESS_THAN varType COMMA varType GREATER_THAN ID ASSIGN_OPERATOR map_literal','declaration',9,'p_declaration_map_init','analizadorSintax.py',83),
  ('assignation -> declaration ASSIGN_OPERATOR variable','assignation',3,'p_assignation','analizadorSintax.py',87),
  ('assignation -> ID ASSIGN_OPERATOR variable','assignation',3,'p_assignation_no_type','analizadorSintax.py',91),
  ('assignation -> ID PLUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',94),
  ('assignation -> ID MINUS_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',95),
  ('assignation -> ID TIMES_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',96),
  ('assignation -> ID DIVIDE_EQUALS expression','assignation',3,'p_compound_assignation','analizadorSintax.py',97),
  ('declaration_modifier -> CONST','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',101),
  ('declaration_modifier -> FINAL','declaration_modifier',1,'p_declaration_modifier','analizadorSintax.py',102),
  ('varType -> INT_TYPE','varType',1,'p_varType','analizadorSintax.py',109),
  ('varType -> STRING_TYPE','varType',1,'p_varType','analizadorSintax.py',110),
  ('varType -> NUM_TYPE','varType',1,'p_varType','analizadorSintax.py',111),
  ('varType -> DOUBLE_TYPE','varType',1,'p_varType','analizadorSintax.py',112),
  ('varType -> BOOL_TYPE','varType',1,'p_varType','analizadorSintax.py',113),
  ('varType -> LIST_TYPE','varType',1,'p_varType','analizadorSintax.py',114),
  ('varType -> MAP_TYPE','varType',1,'p_varType','analizadorSintax.py',115),
  ('varType -> SET_TYPE','varType',1,'p_varType','analizadorSintax.py',116),
  ('varType -> VAR','varType',1,'p_varType','analizadorSintax.py',117),
  ('varType -> VOID','varType',1,'p_varType','analizadorSintax.py',118),
  ('list_literal -> LBRACKET list_elements RBRACKET','list_literal',3,'p_list_literal','analizadorSintax.py',125),
  ('list_elements -> list_elements COMMA variable','list_elements',3,'p_list_elements','analizadorSintax.py',129),
  ('list_elements -> variable','list_elements',1,'p_list_elements','analizadorSintax.py',130),
  ('list_elements -> empty','list_elements',1,'p_list_elements','analizadorSintax.py',131),
  ('map_literal -> LBRACE map_elements RBRACE','map_literal',3,'p_map_literal','analizadorSintax.py',140),
  ('map_elements -> map_elements COMMA map_pair','map_elements',3,'p_map_elements','analizadorSintax.py',144),
  ('map_elements -> map_pair','map_elements',1,'p_map_elements','analizadorSintax.py',145),
  ('map_elements -> empty','map_elements',1,'p_map_elements','analizadorSintax.py',146),
  ('map_pair -> variable COLON variable','map_pair',3,'p_map_pair','analizadorSintax.py',155),
  ('variable -> INT','variable',1,'p_variable','analizadorSintax.py',163),
  ('variable -> DOUBLE','variable',1,'p_variable','analizadorSintax.py',164),
  ('variable -> STRING','variable',1,'p_variable','analizadorSintax.py',165),
  ('variable -> BOOL','variable',1,'p_variable','analizadorSintax.py',166),
  ('variable -> NULL','variable',1,'p_variable','analizadorSintax.py',167),
  ('variable -> ID','variable',1,'p_variable','analizadorSintax.py',168),
  ('variable -> function','variable',1,'p_variable','analizadorSintax.py',169),
  ('variable -> expression','variable',1,'p_variable','analizadorSintax.py',170),
  ('expression -> expression PLUS term','expression',3,'p_expression_operations','analizadorSintax.py',177),
  ('expression -> expression MINUS term','expression',3,'p_expression_operations','analizadorSintax.py',178),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintax.py',182),
  ('term -> term TIMES factor','term',3,'p_term_operations','analizadorSintax.py',186),
  ('term -> term DIVIDE factor','term',3,'p_term_operations','analizadorSintax.py',187),
  ('term -> term MODULE factor','term',3,'p_term_operations','analizadorSintax.py',188),
  ('term -> factor','term',1,'p_term_factor','analizadorSintax.py',192),
  ('factor -> MINUS factor','factor',2,'p_factor_unary_minus','analizadorSintax.py',196),
  ('factor -> INT','factor',1,'p_factor_numeric','analizadorSintax.py',200),
  ('factor -> DOUBLE','factor',1,'p_factor_numeric','analizadorSintax.py',201),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintax.py',208),
  ('factor -> LPARENTHESIS expression RPARENTHESIS','factor',3,'p_factor_parens','analizadorSintax.py',212),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_variable_array_access','analizadorSintax.py',216),
  ('factor -> ID DOT ID','factor',3,'p_variable_member_access','analizadorSintax.py',220),
  ('booleanExpression -> variable EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',228),
  ('booleanExpression -> variable NOT_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',229),
  ('booleanExpression -> variable GREATER_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',230),
  ('booleanExpression -> variable LESS_THAN variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',231),
  ('booleanExpression -> variable GREATER_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',232),
  ('booleanExpression -> variable LESS_THAN_OR_EQUALS variable','booleanExpression',3,'p_boolean_expression_comparison','analizadorSintax.py',233),
  ('booleanExpression -> booleanExpression AND booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',237),
  ('booleanExpression -> booleanExpression OR booleanExpression','booleanExpression',3,'p_boolean_expression_logic','analizadorSintax.py',238),
  ('booleanExpression -> LPARENTHESIS booleanExpression RPARENTHESIS','booleanExpression',3,'p_boolean_expression_paren','analizadorSintax.py',242),
  ('booleanExpression -> variable','booleanExpression',1,'p_boolean_expression_variable','analizadorSintax.py',246),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement','if',5,'p_if','analizadorSintax.py',255),
  ('if -> IF LPARENTHESIS booleanExpression RPARENTHESIS statement ELSE statement','if',7,'p_if_else','analizadorSintax.py',259),
  ('while -> WHILE LPARENTHESIS booleanExpression RPARENTHESIS LBRACE statements RBRACE','while',7,'p_while','analizadorSintax.py',264),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON increment RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',269),
  ('for -> FOR LPARENTHESIS assignation SEMICOLON booleanExpression SEMICOLON decrement RPARENTHESIS LBRACE statements RBRACE','for',11,'p_for','analizadorSintax.py',270),
  ('for -> FOR LPARENTHESIS varType ID IN ID RPARENTHESIS LBRACE statements RBRACE','for',10,'p_for_in','analizadorSintax.py',274),
  ('increment -> ID INCREMENT','increment',2,'p_increment','analizadorSintax.py',278),
  ('decrement -> ID DECREMENT','decrement',2,'p_decrement','analizadorSintax.py',282),
  ('try -> TRY LBRACE statements RBRACE FINALLY LBRACE statements RBRACE','try',8,'p_try','analizadorSintax.py',287),
  ('switch -> SWITCH LPARENTHESIS variable RPARENTHESIS LBRACE cases default_case RBRACE','switch',8,'p_switch','analizadorSintax.py',292),
  ('cases -> cases case','cases',2,'p_cases','analizadorSintax.py',296),
  ('cases -> case','cases',1,'p_cases','analizadorSintax.py',297),
  ('case -> CASE variable COLON statements BREAK','case',5,'p_case','analizadorSintax.py',304),
  ('case -> CASE variable COLON statements SEMICOLON','case',5,'p_case','analizadorSintax.py',305),
  ('case -> CASE variable COLON statements','case',4,'p_case','analizadorSintax.py',306),
  ('default_case -> DEFAULT COLON statements','default_case',3,'p_default_case','analizadorSintax.py',310),
  ('function -> declaration LPARENTHESIS parameters RPARENTHESIS LBRACE statements RBRACE','function',7,'p_function','analizadorSintax.py',318),
  ('function -> ID LPARENTHESIS parameters RPARENTHESIS','function',4,'p_function','analizadorSintax.py',319),
  ('function -> declaration LPARENTHESIS parameters RPARENTHESIS ARROW expression SEMICOLON','function',7,'p_function_arrow','analizadorSintax.py',322),
  ('parameters -> parameters COMMA parameter','parameters',3,'p_parameters','analizadorSintax.py',325),
  ('parameters -> parameter','parameters',1,'p_parameters','analizadorSintax.py',326),
  ('parameters -> empty','parameters',1,'p_parameters','analizadorSintax.py',327),
  ('parameter -> varType ID','parameter',2,'p_parameter','analizadorSintax.py',330),
  ('parameter -> variable','parameter',1,'p_parameter','analizadorSintax.py',331),
  ('print -> PRINT LPARENTHESIS variable RPARENTHESIS SEMICOLON','print',5,'p_print','analizadorSintax.py',338),
  ('input -> ID ASSIGN_OPERATOR STDIN DOT READ LPARENTHESIS RPARENTHESIS SEMICOLON','input',8,'p_input','analizadorSintax.py',341),
  ('class_def -> CLASS ID LBRACE class_members RBRACE','class_def',5,'p_class_def','analizadorSintax.py',348),
  ('class_members -> class_members class_member','class_members',2,'p_class_members','analizadorSintax.py',351),
  ('class_members -> class_member','class_members',1,'p_class_members','analizadorSintax.py',352),
  ('class_member -> varType ID SEMICOLON','class_member',3,'p_class_member','analizadorSintax.py',355),
  ('class_member -> function','class_member',1,'p_class_member','analizadorSintax.py',356),
  ('enum -> ENUM ID LBRACE enum_values RBRACE','enum',5,'p_enum','analizadorSintax.py',363),
  ('enum_values -> enum_values COMMA ID','enum_values',3,'p_enum_values','analizadorSintax.py',366),
  ('enum_values -> ID','enum_values',1,'p_enum_values','analizadorSintax.py',367),
  ('typedef -> TYPEDEF ID ASSIGN_OPERATOR varType function LPARENTHESIS parameters RPARENTHESIS SEMICOLON','typedef',9,'p_typedef','analizadorSintax.py',370),
  ('return -> RETURN variable SEMICOLON','return',3,'p_return','analizadorSintax.py',377),
  ('return -> RETURN SEMICOLON','return',2,'p_return','analizadorSintax.py',378),
  ('import -> IMPORT STRING SEMICOLON','import',3,'p_import','analizadorSintax.py',385),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintax.py',389),
]
